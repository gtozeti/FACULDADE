!SESSION 2021-02-25 21:24:12.484 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-02-25 21:30:29.292
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-02-25 21:30:29.292
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4ab90d01,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@771d4db,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-02-25 21:30:58.520
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\PICHAU'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-02-25 22:50:37.574 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-02-25 22:50:46.734
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-02-25 22:50:46.734
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@c6c84fa,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@70ce2fb2,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-02-25 22:50:52.786
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\PICHAU'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-02-28 14:35:18.759 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-02-28 14:35:37.810
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-02-28 14:35:37.810
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@66b90ab3,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@16e4db59,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-02-28 14:35:44.102
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\PICHAU'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-02-28 16:33:24.472 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-02-28 16:38:34.842
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-02-28 16:38:34.842
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4c02899,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5b895e76,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-02-28 16:38:41.163
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\PICHAU'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-02-28 16:39:53.022 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product C:\Users\PICHAU\Desktop\SENAC\1 - Semestre - Codigos\PI 1_ 2101_PROJETO INTEGRADOR DESENVOLVIMENTO DE LÓGICA\ADO_02\src\EX_3.java
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product C:\Users\PICHAU\Desktop\SENAC\1 - Semestre - Codigos\PI 1_ 2101_PROJETO INTEGRADOR DESENVOLVIMENTO DE LÓGICA\ADO_02\src\EX_3.java

!ENTRY org.eclipse.jface 2 0 2021-02-28 16:40:01.939
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-02-28 16:40:01.939
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4a6facb0,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4feec184,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-02-28 16:40:07.133
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\PICHAU'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-03-04 20:03:50.563 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-03-04 20:04:33.840
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-03-04 20:04:33.840
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@e171f93,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4ad3969,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-03-04 20:04:41.852
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\PICHAU'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-03-05 13:19:55.139 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-03-05 13:20:40.000
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-03-05 13:20:40.000
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@33fec21,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@12a0d249,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-03-05 13:20:45.675
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\PICHAU'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-03-05 13:46:49.758 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product C:\Users\PICHAU\Desktop\SENAC\1 - Semestre - Codigos\PI 1_ 2101_PROJETO INTEGRADOR DESENVOLVIMENTO DE LÓGICA\Aula04\src\MaiorDeIdade.java
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product C:\Users\PICHAU\Desktop\SENAC\1 - Semestre - Codigos\PI 1_ 2101_PROJETO INTEGRADOR DESENVOLVIMENTO DE LÓGICA\Aula04\src\MaiorDeIdade.java

!ENTRY org.eclipse.jface 2 0 2021-03-05 13:46:56.892
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-03-05 13:46:56.893
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@614d7fbf,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6c06b1bc,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-03-05 13:47:02.146
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\PICHAU'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-03-11 19:24:56.910 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-03-11 19:25:03.287
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-03-11 19:25:03.287
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@66b90ab3,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@16e4db59,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-03-11 19:25:11.311
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\PICHAU'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-03-16 17:34:26.194 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-03-16 17:34:33.810
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-03-16 17:34:33.810
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4888425d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3c8758d1,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-03-16 17:34:38.944
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\PICHAU'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-03-18 19:38:34.044 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-03-18 19:39:05.021
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-03-18 19:39:05.021
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4d525897,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@25f14e93,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-03-18 19:39:10.832
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\PICHAU'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-03-18 23:43:53.821 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-03-18 23:43:59.477
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-03-18 23:43:59.477
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@70ce2fb2,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@64688978,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-03-18 23:44:06.569
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\PICHAU'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-03-20 20:23:47.892 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-03-20 20:23:58.390
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-03-20 20:23:58.390
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@35d4035f,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6f4fc83f,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-03-20 20:24:05.669
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\PICHAU'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-03-20 22:02:49.365 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-03-20 22:02:53.975
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-03-20 22:02:53.975
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@64688978,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4d525897,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-03-20 22:02:59.013
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\PICHAU'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.help.base 2 0 2021-03-20 22:13:24.922
!MESSAGE Unable to consume Lucene index from bundle 'org.eclipse.jdt.doc.user_3.15.900.v20201201-1641 [214]'. The index should be rebuilt with Lucene 8.4.1

!ENTRY org.eclipse.help.base 2 0 2021-03-20 22:13:24.925
!MESSAGE Unable to consume Lucene index from bundle 'org.eclipse.platform.doc.user_4.18.0.v20201202-1459 [337]'. The index should be rebuilt with Lucene 8.4.1
!SESSION 2021-04-03 20:14:04.878 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-04-03 20:14:12.127
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-04-03 20:14:12.127
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5b895e76,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@74231642,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-04-03 20:14:18.100
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\PICHAU'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-04-17 12:50:02.189 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-04-17 12:50:07.456
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-04-17 12:50:07.456
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@74231642,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4a6facb0,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-04-17 12:50:14.098
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\PICHAU'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.jdt.core 4 4 2021-04-17 15:07:14.471
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Random;

public class Dados1M {

	public static void main(String[] args) {

		Random dado = new Random();
		int l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0;

		for (int i = 0; i < 1000000; i++) {

			int faceDado = dado.nextInt(6) + 1;

			switch (faceDado) {

			case 1:
				l1 ++;
				break;
			case 2:
				l2 ++;
				break;
			case 3:
				l3 ++;
				break;
			case 4:
				l4 ++;
				break;
			case 5:
				l5 ++;
				break;
			case 6:
				l6 ++;
				break;

			}
		}
		
		//System.out.printf("\nO número 1, apareceu: %.2f %\nO número 2, apareceu: %.2f %\nO número 3, apareceu: %.2f %\n"
				+ "O número 4, apareceu: %.2f %\nO número 5, apareceu: %.2f %\nO número 6, apareceu: %.2f %\n",
				((l1*100)/1000000),((l2*100)/1000000),((l3*100)/1000000),((l4*100)/1000000),((l5*100)/1000000),((l6*100)/1000000)); 
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-04-17 15:07:14.473
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-04-17 15:07:14.473
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-04-17 15:07:14.498
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Random;

public class Dados1M {

	public static void main(String[] args) {

		Random dado = new Random();
		int l1 = 0, l2 = 0, l3 = 0, l4 = 0, l5 = 0, l6 = 0;

		for (int i = 0; i < 1000000; i++) {

			int faceDado = dado.nextInt(6) + 1;

			switch (faceDado) {

			case 1:
				l1 ++;
				break;
			case 2:
				l2 ++;
				break;
			case 3:
				l3 ++;
				break;
			case 4:
				l4 ++;
				break;
			case 5:
				l5 ++;
				break;
			case 6:
				l6 ++;
				break;

			}
		}
		
		//System.out.printf("\nO número 1, apareceu: %.2f %\nO número 2, apareceu: %.2f %\nO número 3, apareceu: %.2f %\n"
				+ "O número 4, apareceu: %.2f %\nO número 5, apareceu: %.2f %\nO número 6, apareceu: %.2f %\n",
				((l1*100)/1000000),((l2*100)/1000000),((l3*100)/1000000),((l4*100)/1000000),((l5*100)/1000000),((l6*100)/1000000)); 
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-04-17 15:07:14.499
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-04-17 15:07:14.499
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:166)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$1.run(SelectionListenerWithASTManager.java:151)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
!SESSION 2021-04-26 22:12:29.331 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product C:\Users\PICHAU\Desktop\Nova pasta\Exercicio2.java
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product C:\Users\PICHAU\Desktop\Nova pasta\Exercicio2.java

!ENTRY org.eclipse.jface 2 0 2021-04-26 22:12:39.030
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-04-26 22:12:39.030
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@25f14e93,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@24435620,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-04-26 22:12:46.691
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\PICHAU'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-05-01 18:18:21.248 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-05-01 18:18:45.373
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-05-01 18:18:45.373
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2c02a007,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@63a72cc6,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-05-01 18:18:54.034
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\PICHAU'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.jdt.core 4 4 2021-05-01 20:14:14.809
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Random;
import java.util.Scanner;

public class AdvinheONumero {

	public static void main(String[] args) {
		
		Scanner entrada = new Scanner(System.in);
		Random valorRandom = new Random();
		int resposta, num, tentativa = 1;
		
		num = valorRandom.nextInt(100) + 1;

		
		do {
			
			System.out.print("Qual o número entre 1 e 100, que o computador sorteou? ");
			resposta = entrada.nextInt();
			
			if (resposta == num) {
				System.out.println("\nParabéns, você ganhou o jogo!");
				tentativa = 5;
			}
			else if ((Math.abs(num) - Math.abs(resposta) == 1)){
				System.out.println("\nTÁ QUENTE!");
				tentativa++;
			}
			else if (resposta > num) {
				System.out.println("\nO valor sorteado é menor!");
				tentativa++;
			}
			else (resposta > num) {
				System.out.println("\nO valor sorteado é menor!");
				tentativa++;
			}
				
		}while(tentativa < 5);

	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1739)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2956)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-05-01 20:14:14.815
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1739)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2956)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-05-01 20:14:14.816
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2968)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1739)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2956)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)
!SESSION 2021-05-02 19:45:56.475 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-05-02 19:46:08.138
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-05-02 19:46:08.138
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4d525897,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@25f14e93,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-05-02 19:46:14.766
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\PICHAU'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-05-03 19:25:02.052 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-05-03 19:25:17.395
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-05-03 19:25:17.395
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@cef885d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@35d4035f,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-05-03 19:25:24.679
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\PICHAU'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-05-10 19:16:35.408 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-05-10 19:16:42.911
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-05-10 19:16:42.911
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@74231642,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4a6facb0,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-05-10 19:16:50.797
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\PICHAU'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-05-11 20:08:51.494 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-05-11 20:08:58.531
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-05-11 20:08:58.531
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@24435620,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4c02899,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-05-11 20:09:06.637
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\PICHAU'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-05-12 10:46:57.492 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-05-12 10:47:02.341
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-05-12 10:47:02.341
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@c6c84fa,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@70ce2fb2,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-05-12 10:47:08.522
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\PICHAU'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-05-15 17:59:25.522 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-05-15 17:59:31.488
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-05-15 17:59:31.488
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@70ce2fb2,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@64688978,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-05-15 17:59:39.309
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\PICHAU'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-05-16 13:50:48.190 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-05-16 13:51:00.851
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-05-16 13:51:00.851
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@25f14e93,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@24435620,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-05-16 13:51:07.711
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\PICHAU'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-05-17 19:33:23.371 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-05-17 19:33:37.953
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-05-17 19:33:37.953
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@61bd0845,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@cef885d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-05-17 19:33:46.163
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\PICHAU'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-05-19 21:10:50.262 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-05-19 21:11:11.865
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-05-19 21:11:11.865
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@cef885d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@35d4035f,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-05-19 21:11:49.070
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\PICHAU'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.debug.ui 4 120 2021-05-19 23:13:35.378
!MESSAGE Error logged from Debug UI: 
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.FutureTask.awaitDone(FutureTask.java:418)
	at java.base/java.util.concurrent.FutureTask.get(FutureTask.java:203)
	at org.eclipse.debug.internal.ui.stringsubstitution.SelectedResourceManager.runInUIThreadWithTimeout(SelectedResourceManager.java:262)
	at org.eclipse.debug.internal.ui.stringsubstitution.SelectedResourceManager.getFromUI(SelectedResourceManager.java:240)
	at org.eclipse.debug.internal.ui.stringsubstitution.SelectedResourceManager.getActiveWindow(SelectedResourceManager.java:231)
	at org.eclipse.debug.ui.DebugUITools.getDebugContext(DebugUITools.java:247)
	at org.eclipse.jdt.internal.debug.ui.JavaDebugHover.getFrame(JavaDebugHover.java:97)
	at org.eclipse.jdt.internal.debug.ui.JavaDebugHover.getHoverInfo2(JavaDebugHover.java:251)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)
!SESSION 2021-05-20 21:41:56.597 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-05-20 21:42:03.059
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-05-20 21:42:03.059
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@c6c84fa,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@70ce2fb2,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-05-20 21:42:09.867
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\PICHAU'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.jdt.junit 4 0 2021-05-20 22:52:09.917
!MESSAGE No tests found with test runner 'JUnit 5'.

!ENTRY org.eclipse.jdt.junit 4 0 2021-05-20 22:52:22.924
!MESSAGE No tests found with test runner 'JUnit 5'.

!ENTRY org.eclipse.jdt.junit 4 0 2021-05-20 22:52:52.911
!MESSAGE No tests found with test runner 'JUnit 5'.

!ENTRY org.eclipse.jdt.junit 4 0 2021-05-20 22:53:07.226
!MESSAGE No tests found with test runner 'JUnit 5'.

!ENTRY org.eclipse.jdt.junit 4 0 2021-05-20 22:54:08.689
!MESSAGE No tests found with test runner 'JUnit 5'.

!ENTRY org.eclipse.jdt.junit 4 0 2021-05-20 22:54:13.893
!MESSAGE No tests found with test runner 'JUnit 5'.

!ENTRY org.eclipse.debug.ui 4 120 2021-05-20 22:55:41.454
!MESSAGE Error logged from Debug UI: 
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.FutureTask.awaitDone(FutureTask.java:418)
	at java.base/java.util.concurrent.FutureTask.get(FutureTask.java:203)
	at org.eclipse.debug.internal.ui.stringsubstitution.SelectedResourceManager.runInUIThreadWithTimeout(SelectedResourceManager.java:262)
	at org.eclipse.debug.internal.ui.stringsubstitution.SelectedResourceManager.getFromUI(SelectedResourceManager.java:240)
	at org.eclipse.debug.internal.ui.stringsubstitution.SelectedResourceManager.getActiveWindow(SelectedResourceManager.java:231)
	at org.eclipse.debug.ui.DebugUITools.getDebugContext(DebugUITools.java:247)
	at org.eclipse.jdt.internal.debug.ui.JavaDebugHover.getFrame(JavaDebugHover.java:97)
	at org.eclipse.jdt.internal.debug.ui.JavaDebugHover.getHoverInfo2(JavaDebugHover.java:251)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.junit 4 0 2021-05-20 22:57:04.520
!MESSAGE No tests found with test runner 'JUnit 5'.
!SESSION 2021-05-21 18:59:15.561 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-05-21 18:59:20.834
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-05-21 18:59:20.834
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@74231642,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4a6facb0,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-05-21 18:59:26.685
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\PICHAU'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-05-22 17:37:11.273 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-05-22 17:38:00.600
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-05-22 17:38:00.600
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@74231642,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4a6facb0,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-05-22 17:38:08.419
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\PICHAU'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-05-22 18:53:54.751 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-05-22 18:54:11.045
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-05-22 18:54:11.045
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1f3f434,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@26612078,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-05-22 18:54:17.319
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\PICHAU'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-05-22 21:03:40.540 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-05-22 21:03:45.728
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-05-22 21:03:45.728
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5da3f32a,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@57b3d869,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-05-22 21:03:53.594
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\PICHAU'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-05-25 21:08:43.954 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-05-25 21:09:01.833
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-05-25 21:09:01.833
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@291cbe70,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6be422da,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-05-25 21:09:11.702
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\PICHAU'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-05-26 19:09:20.869 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product C:\Users\PICHAU\Desktop\SENAC\1 - Semestre - Codigos\GitHub\SENAC\1º - Semestre\AP 1_2101_ALGORITMOS E PROGRAMAÇÃO I\Lista_02\Lista02_Ex10.java
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product C:\Users\PICHAU\Desktop\SENAC\1 - Semestre - Codigos\GitHub\SENAC\1º - Semestre\AP 1_2101_ALGORITMOS E PROGRAMAÇÃO I\Lista_02\Lista02_Ex10.java

!ENTRY org.eclipse.jface 2 0 2021-05-26 19:09:27.011
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-05-26 19:09:27.011
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1b36d248,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@7e94de5f,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-05-26 19:09:34.690
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\PICHAU'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.eclemma.core 4 5013 2021-05-26 23:35:11.066
!MESSAGE Error while dumping coverage data (code 5013).
!STACK 0
java.net.SocketException: Connection reset
	at java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:323)
	at java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
	at java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
	at java.base/java.net.Socket$SocketInputStream.read(Socket.java:981)
	at java.base/java.net.Socket$SocketInputStream.read(Socket.java:976)
	at java.base/java.io.FilterInputStream.read(FilterInputStream.java:82)
	at org.jacoco.core.data.ExecutionDataReader.read(ExecutionDataReader.java:84)
	at org.eclipse.eclemma.internal.core.MemoryExecutionDataSource.readFrom(MemoryExecutionDataSource.java:69)
	at org.eclipse.eclemma.internal.core.launching.AgentServer.run(AgentServer.java:115)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)

!ENTRY org.eclipse.eclemma.core 4 5013 2021-05-26 23:37:40.139
!MESSAGE Error while dumping coverage data (code 5013).
!STACK 0
java.net.SocketException: Connection reset
	at java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:323)
	at java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
	at java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
	at java.base/java.net.Socket$SocketInputStream.read(Socket.java:981)
	at java.base/java.net.Socket$SocketInputStream.read(Socket.java:976)
	at java.base/java.io.FilterInputStream.read(FilterInputStream.java:82)
	at org.jacoco.core.data.ExecutionDataReader.read(ExecutionDataReader.java:84)
	at org.eclipse.eclemma.internal.core.MemoryExecutionDataSource.readFrom(MemoryExecutionDataSource.java:69)
	at org.eclipse.eclemma.internal.core.launching.AgentServer.run(AgentServer.java:115)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
!SESSION 2021-05-26 23:37:41.424 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-05-26 23:37:47.936
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-05-26 23:37:47.937
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@575d48db,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1b36d248,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-05-26 23:37:55.538
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\PICHAU'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.eclemma.core 4 5013 2021-05-27 00:01:30.886
!MESSAGE Error while dumping coverage data (code 5013).
!STACK 0
java.net.SocketException: Connection reset
	at java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:323)
	at java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:350)
	at java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:803)
	at java.base/java.net.Socket$SocketInputStream.read(Socket.java:981)
	at java.base/java.net.Socket$SocketInputStream.read(Socket.java:976)
	at java.base/java.io.FilterInputStream.read(FilterInputStream.java:82)
	at org.jacoco.core.data.ExecutionDataReader.read(ExecutionDataReader.java:84)
	at org.eclipse.eclemma.internal.core.MemoryExecutionDataSource.readFrom(MemoryExecutionDataSource.java:69)
	at org.eclipse.eclemma.internal.core.launching.AgentServer.run(AgentServer.java:115)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
!SESSION 2021-05-27 00:01:33.744 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-05-27 00:03:08.304
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-05-27 00:03:08.305
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6f428e6e,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@72e49f6a,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-05-27 00:03:17.521
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\PICHAU'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-05-27 18:57:57.636 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-05-27 18:58:36.401
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-05-27 18:58:36.401
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@575d48db,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1b36d248,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-05-27 18:58:47.593
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\PICHAU'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-05-29 18:30:20.387 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-05-29 18:30:28.161
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-05-29 18:30:28.161
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@18dbc1b,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@2a510e0e,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-05-29 18:30:35.911
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\PICHAU'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.debug.ui 4 120 2021-05-29 20:26:14.206
!MESSAGE Error logged from Debug UI: 
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.FutureTask.awaitDone(FutureTask.java:418)
	at java.base/java.util.concurrent.FutureTask.get(FutureTask.java:203)
	at org.eclipse.debug.internal.ui.stringsubstitution.SelectedResourceManager.runInUIThreadWithTimeout(SelectedResourceManager.java:262)
	at org.eclipse.debug.internal.ui.stringsubstitution.SelectedResourceManager.getFromUI(SelectedResourceManager.java:240)
	at org.eclipse.debug.internal.ui.stringsubstitution.SelectedResourceManager.getActiveWindow(SelectedResourceManager.java:231)
	at org.eclipse.debug.ui.DebugUITools.getDebugContext(DebugUITools.java:247)
	at org.eclipse.jdt.internal.debug.ui.JavaDebugHover.getFrame(JavaDebugHover.java:97)
	at org.eclipse.jdt.internal.debug.ui.JavaDebugHover.getHoverInfo2(JavaDebugHover.java:251)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.junit 4 0 2021-05-29 20:42:24.741
!MESSAGE No tests found with test runner 'JUnit 5'.

!ENTRY org.eclipse.jdt.junit 4 0 2021-05-29 20:42:50.544
!MESSAGE No tests found with test runner 'JUnit 5'.

!ENTRY org.eclipse.jdt.core 4 4 2021-05-29 20:57:30.908
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Scanner;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Random;

public class O_Jogo {

// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-VARIAVÉIS GLOBAIS-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
	public static Scanner entrada = new Scanner(System.in);
	public static String opcao = "";
	public static int dificuldade = 0;
	public static String nomeJogador = "";
	public static int thread1 = 1000;
	public static int thread2 = 0;
	public static int thread3 = 50;

	// CORES DO TEXTO
	public static final String RESET = "\u001B[30m";
	public static final String RED = "\u001B[31m";
	public static final String GREEN = "\u001B[32m";
	public static final String YELLOW = "\u001B[33m";
	public static final String BLUE = "\u001B[34m";
	public static final String MAGENTA = "\u001B[35m";
	public static final String CYAN = "\u001B[36m";
	public static final String WHITE = "\u001B[37m";

	// CORES DO FUNDO DO TEXTO
	public static final String RESET_BACKGROUND = "\u001B[0m";
	public static final String BLACK_BACKGROUND = "\u001B[40m";
	public static final String RED_BACKGROUND = "\u001B[41m";
	public static final String GREEN_BACKGROUND = "\u001B[42m";
	public static final String YELLOW_BACKGROUND = "\u001B[43m";
	public static final String BLUE_BACKGROUND = "\u001B[44m";
	public static final String PURPLE_BACKGROUND = "\u001B[45m";
	public static final String CYAN_BACKGROUND = "\u001B[46m";
	public static final String WHITE_BACKGROUND = "\u001B[47m";

// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-MAIN-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
	public static void main(String[] args) {

		boolean cond = true;
		int[] status = { 100, 2 };

		do {

			System.out.print(Tabula1(6, "---Menu---\n\n"));
			System.out.print(Tabula2(2, "[1] Intruções", 6, "[2] Jogar\n"));
			System.out.print(Tabula2(2, "[3] Créditos", 6, "[4] Sair\n"));

			String opcao_Menu = Option();

			switch (opcao_Menu) {

			case "1":
				Instruções();
				break;

			case "2":

				Jogar();
				Hist_1();
				ExecutaTemplo3(status);
				/*
				 * Templo_1(); Templo_2(); Templo_3(); Big_Boss();
				 */
				break;

			case "3":
				Créditos();
				break;

			case "4":

				cond = false;
				break;

			default:

				System.out.print(RED + Tabula1(6, "Opção não é válida!\n\n") + RESET);

			}

		} while (cond);

	}

// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-JOGO-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

	// PROCEDIMENTO PARA ARMAZENAR AS INFORMAÇÕES DAS INTRUÇÕES
	public static void Instruções() {

		System.out.print("\n");
		Texto_Formatado("\nO objetivo do jogo é auxiliar o jogador em alguns conhecimentos da matemática."
				+ " Ao longo da jornada, serão apresentados conteúdos sobre a matéria em questão e "
				+ "apresentadas perguntas ao jogador. O mesmo deverá selecionar as opções válidas para que ele possa"
				+ " avançar no jogo e a cada questão, o jogador sofrerá um dano se errar, diminuindo assim sua vida."
				+ " O objetivo final do jogador, é avançar por todos os templos para derrotar o último chefe, sem perder toda a sua vida.");
		System.out.print("\n");
		Sair();

	}

	// PROCEDIMENTO PARA FAZER A 1º CHAMADA DO JOGO, PARA COLETAR AS INFORMAÇÕES DO
	// NOME DO JOGADOR, A DIFICULDADE DO JOGO E A HISTÓRIA INICIAL
	public static void Jogar() {

		Texto_Formatado(Tabula1(4, "---Escolha a sua dificuldade de jogo---\n\n")
				+ Tabula3(1, "[1] Fácil", 3, "[2] Normal", 3, "[3] Difícil"));

		boolean cond = true;

		do {

			String opcao_Menu = Option();
			switch (opcao_Menu) {

			case "1":
				dificuldade = 1;
				cond = false;
				break;

			case "2":
				dificuldade = 2;
				cond = false;
				break;

			case "3":
				dificuldade = 3;
				cond = false;
				break;

			default:
				System.out.print(RED + Tabula1(6, "Opção não é válida!\n\n") + RESET);

			}
		} while (cond);

		Texto_Formatado(Tabula1(4, "   ---Escolha o nome do seu jogador---"));
		nomeJogador = Option();

		boolean cond2 = true;
		do {

			Texto_Formatado(Tabula1(4,
					"---Você deseja que o nome do seu jogador seja " + RED + nomeJogador + RESET + " ?---\n\n")
					+ Tabula2(4, GREEN + "[S]" + RESET, 6, RED + "[N]" + RESET));
			String opcao_Menu = Option();

			switch (opcao_Menu.toUpperCase()) {
			case "S":
				cond2 = false;
				break;
			case "N":
				Texto_Formatado(Tabula1(4, "---Escolha o nome do seu jogador---"));
				nomeJogador = Option();
				break;
			default:
				System.out.print(RED + Tabula1(6, "Opção não é válida!\n\n") + RESET);
			}
		} while (cond2);

	}

	// PROCEDIMENTO PARA ARMAZENAR AS INFORMAÇÕES DOS CRÉDITOS
	public static void Créditos() {

		System.out.print("\n");
		Texto_Formatado("\n-Gustavo Tozeti\n\t\t-Matheus Cavalcanti\n\t\t\t-Renan Kesper");
		System.out.print("\n");
		Sair();

	}

	public static void Hist_1() {

		System.out.print("\n");
		
		Texto_Formatado(BLUE
				+ "\n\"Reza a lenda que Ariandre era um lugar próspero, cheio de magia e encanto, onde todos os seres viviam em harmonia e em paz. Um lugar tão belo,"					//TEXTO LIDO PELO PERSONAGEM
				+ " que a matemática era a base de força para grandes magos. Mas isso é claro, antes do grande acontecimento. . .Ninguém sabe ao certo, nem ao menos como,"				
				+ " mas naquela tarde esse lugar tão calmo e pleno, foi reduzido a cinzas e escombros, uma enorme escuridão pairou pelos céus e tomou Ariandre por inteiro "			
				+ "e com um simples clarão. . .tudo foi destruído. Após momentos agoniantes, enfim o motivo disso tudo. . .sim, ele que era apenas uma fábula de centenas de "			
				+ "anos, de contos muito antigos, enfim ressurgiu..."+ RESET + RED + "Ancelot" + BLUE + " tinha despertado. O grande rei demônio estava presente novamente, "			
				+ "para aprisionar toda a matemática de Ariandre e ser o detentor de toda a magia. Já se passaram alguns meses depois disso tudo, mas agora espero "					
				+ "ter forças para enfrentá-lo, mas a cada dia que se passa nessas catedrais do abismo perco mais e mais da minha sanidade. Talvez eu seja a última esperança "			
				+ "de Ariandre, mas caso alguém esteja lendo isso, significa que Ancelot venceu e Ariandre para sempre estará sob o seu domínio.\"" + RESET); 	//TEXTO LIDO PELO PERSONAGEM
				
				+ Dialogo(nomeJogador) +  GREEN + "\nMas...mas como? Meses? Estava tudo certo, ele estava em minhas mãos, como foi tudo isso desmoronar. Minha "					//FALA DO PERSONAGEM
				+ "cabeça dói, são memórias que me vem, mas o que será que aconteceu? Por que eu estou nas catedrais e porque Ariandre está destruída? Será isso um sonho?"
				+ "\n\nEu preciso descobrir o que aconteceu, mas me sinto estranho. Parece que não tenho mais meus poderes. Será que eu consigo canalizar algo??");
		
		System.out.print("\n");

	}
// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-FERRAMENTAS-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

	// PROCEDIMENTO CRIADO PARA FORMATAR QUALQUER TEXTO, PARA PADRONIZAR O LAYOUT DA
	// MENSAGEM COM BASE EM UM VALOR PRÉ DETERMINADO
	public static void Texto_Formatado(String frase) {

		String texto = frase;
		String[] palavras = texto.split(" ");

		int contadorQntLetras = 0;
		int limiteLinha = 140;

		for (int i = 0; i < limiteLinha; i++) {
			System.out.print(RED + "=" + RESET);
		}
		System.out.print("\n");

		for (String palavra : palavras) {

			if (contadorQntLetras + palavra.length() >= limiteLinha) {
				contadorQntLetras = 0;
				System.out.print("\n");
			}

			System.out.print(palavra + " ");
			Timer2();
			contadorQntLetras += palavra.length() + 1;
		}
		System.out.println("\n");

		for (int i = 0; i < limiteLinha; i++) {
			System.out.print(RED + "=" + RESET);
		}

	}

	// PROCEDIMENTO CRIADO PARA TABULAR QUALQUER TEXTO, PARA PADRONIZAR O LAYOUT DA
	// MENSAGEM
	public static String Tabula1(int t, String s) {

		String tab = "\t";
		String frase = "";
		for (int i = 0; i <= t; i++) {
			frase += tab;
		}
		frase += s;

		return frase;
	}

	public static String Tabula2(int t, String s, int tt, String ss) {

		String tab = "\t";
		String frase = "";

		for (int i = 0; i <= t; i++) {
			frase += tab;
		}
		frase += s;
		for (int i = 0; i <= tt; i++) {
			frase += tab;
		}
		frase += ss;
		return frase;
	}

	public static String Tabula3(int t, String s, int tt, String ss, int ttt, String sss) {

		String tab = "\t";
		String frase = "";

		for (int i = 0; i <= t; i++) {
			frase += tab;
		}
		frase += s;
		for (int i = 0; i <= tt; i++) {
			frase += tab;
		}
		frase += ss;
		for (int i = 0; i <= ttt; i++) {
			frase += tab;
		}
		frase += sss;
		return frase;
	}

	// FUNÇÃO CRIADA PARA RETONAR UMA OPÇÃO DESEJADA DO USUÁRIO
	public static String Option() {
		System.out.print(BLACK_BACKGROUND + WHITE + "\n***Digite sua opção:" + RESET + RESET_BACKGROUND + " ");
		opcao = entrada.next();
		System.out.print("\n");
		return opcao;
	}

	public static String Dialogo(String Nome) {
		String texto = "\n\n" + BLACK_BACKGROUND + GREEN + "- "+Nome+":" + RESET + RESET_BACKGROUND;
		return texto;
		}
	
	// PROCEDIMENTO CRIADO PARA SAIR DE UMA OPÇÃO DE UM MENU
	public static void Sair() {
		Scanner sc = new Scanner(System.in);
		System.out.print("\nPressione a tecla ENTER para voltar!\n");
		sc.nextLine();
		System.out.println(" ");
	}

	static int DanoRespostaErrada(int healthPoints) {
		Random dado = new Random();
		int jogada;

		System.out.println("\nA resposta está...");
		Timer();
		System.out.println("...");
		Timer();
		System.out.println("...");
		Timer();
		System.out.println(RED + "Errada :(" + RESET);
		System.out.println("\nAgora iremos jogar o dado para saber quanto de dano você irá tomar.");
		System.out.println("O número que caiu no dado é...");
		Timer();
		System.out.println("...");
		Timer();
		System.out.println("...");
		Timer();

		jogada = dado.nextInt(20) + 1;

		System.out.printf("**\t%d\t**\n", jogada);

		if (jogada <= 5) {
			System.out.println("Parece que você deu sorte e se esquivou do dano.");
		} else if (jogada > 5 && jogada <= 15) {
			System.out.println("Você levou 20 de dano");
			healthPoints = healthPoints - (20 + (5 * dificuldade));
		} else if (jogada > 15) {
			System.out.println("Você tomou dano crítico!");
			healthPoints = healthPoints - (30 + (5 * dificuldade));
		}

		System.out.printf("Total HP: %d\n\n", healthPoints);
		return healthPoints;
	}

	static void GameOver() {
		System.out.println("Seu HP chegou a 0");

		String game = "G A M E";
		String over = "O V E R";

		FormataTexto2(game);
		FormataTexto2(over);

		System.out.println("\n");
	}

	static int[] UsePotion(int healthPoints, int qntPotions) {

		Scanner input = new Scanner(System.in);
		boolean condicao = true;
		char opcao = 0;
		int[] status = new int[2];

		System.out.printf("HP atual: %d\nQuantidade de potions: %d\n\n", healthPoints, qntPotions);

		do {
			try {
				System.out.println("Você tem certeza que quer usar uma potion?\n" + GREEN + "[S]" + RESET + " ou " + RED
						+ "[N]\n" + RESET);
				System.out.print("Escolha: ");
				opcao = input.next().toUpperCase().charAt(0);
			} catch (Exception e) {
				System.out.println("Caracter invalido.");
			}

			if (qntPotions > 0) {
				switch (opcao) {
				case 'S':
					healthPoints = healthPoints + 20;
					qntPotions--;

					if (healthPoints > 100) {
						do {
							healthPoints--;
						} while (healthPoints != 100);
					}
					System.out.println("Você usou uma potion.");
					System.out.printf("Quantidade potions: %d\n", qntPotions);
					System.out.printf("Total HP: %d\n\n", healthPoints);
					condicao = false;
					break;
				case 'N':
					System.out.println("Você guardou a potion de volta na bolsa\n");
					condicao = false;
					break;
				}
			} else {
				System.out.println("Você não tem potions");
				condicao = false;
			}

		} while (condicao);

		status[0] = healthPoints;
		status[1] = qntPotions;

		return status;
	}

	static void Timer() {
		try {
			Thread.sleep(thread1);
		} catch (Exception e) {

		}
	}

	static void Timer2() {
		try {
			Thread.sleep(thread2);
		} catch (Exception e) {

		}
	}

	static void Timer3() {
		try {
			Thread.sleep(thread3);
		} catch (Exception e) {

		}
	}

	static void AcertouResposta(int healthPoints) {
		System.out.println("\nA resposta está...");
		Timer();
		System.out.println("...");
		Timer();
		System.out.println("...");
		Timer();
		System.out.println(GREEN + "Certa! :D\n" + RESET);

		if (healthPoints >= 30 && healthPoints < 65) {
			System.out.println("Parece que foi um desafio para você.");
		}
		if (healthPoints < 30) {
			System.out.println("Foi por pouco que você conseguiu passar!");
		}

	}

	static int[] ProcessoAlternativas_Geral(String[] opcoes, int[] status, String respostaCerta) {
		// Area para declarar variaveis
		Scanner sc = new Scanner(System.in);
		String resposta;
		boolean condicao = true;

		System.out.printf("[ A ] %S\n", opcoes[0]);
		Timer2();
		System.out.printf("[ B ] %S\n", opcoes[1]);
		Timer2();
		System.out.printf("[ C ] %S\n", opcoes[2]);
		Timer2();
		System.out.printf("[ D ] %S\n", opcoes[3]);
		Timer2();
		System.out.printf("[ E ] %S\n\n", opcoes[4]);
		Timer2();
		System.out.println("Resposta certa: " + respostaCerta.toUpperCase());
		Timer2();

		////////////////////////////////////////////////////////////////////////
		// Area para processo de alternativas
		do {

			resposta = Option().toUpperCase();
			if (status[0] <= 0) {
				GameOver();
				condicao = false;
			}

			switch (resposta.charAt(0)) {
			case 'A':
				if (opcoes[0].equals(respostaCerta)) {
					AcertouResposta(status[0]);
					condicao = false;
				} else {
					status[0] = DanoRespostaErrada(status[0]);
					if (status[0] <= 0) {
						GameOver();
						condicao = false;
					}
				}
				break;
			case 'B':
				if (opcoes[1].equals(respostaCerta)) {
					AcertouResposta(status[0]);
					condicao = false;
				} else {
					status[0] = DanoRespostaErrada(status[0]);
					if (status[0] <= 0) {
						GameOver();
						condicao = false;
					}
				}
				break;

			case 'C':
				if (opcoes[2].equals(respostaCerta)) {
					AcertouResposta(status[0]);
					condicao = false;
				} else {
					status[0] = DanoRespostaErrada(status[0]);
					if (status[0] <= 0) {
						GameOver();
						condicao = false;
					}
				}
				break;
			case 'D':
				if (opcoes[3].equals(respostaCerta)) {
					AcertouResposta(status[0]);
					condicao = false;
				} else {
					status[0] = DanoRespostaErrada(status[0]);
					if (status[0] <= 0) {
						GameOver();
						condicao = false;
					}
				}
				break;
			case 'E':
				if (opcoes[4].equals(respostaCerta)) {
					AcertouResposta(status[0]);
					condicao = false;
				} else {
					status[0] = DanoRespostaErrada(status[0]);
					if (status[0] <= 0) {
						GameOver();
						condicao = false;
					}
				}
				break;
			case 'P':
				status = UsePotion(status[0], status[1]);
			}
		} while (condicao);

		return status;
	}

	static void FormataTexto1(String frase) {

		String[] palavra = frase.split(" ");

		for (String each : palavra) {
			System.out.print(each + " ");
			Timer2();
		}
	}

	static void FormataTexto2(String frase) {

		String[] palavra = frase.split(" ");

		for (String each : palavra) {
			System.out.print(each);
			Timer2();
		}

		System.out.print(" ");
	}

// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-TEMPLOS-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

	// TEMPLO 3
	static int[] ExecutaTemplo3(int[] status) {
		Scanner sc = new Scanner(System.in);
		boolean condicao = true;

		do {
			status = Desafio1_Templo3(status);
			if (status[0] > 0) {
				System.out.println("\nVocê concluiu o primeiro desafio!");
				Timer2();
				System.out.println("Parabéns, você ganhou uma Poção!");
				status[1]++;
				Timer2();
				System.out.println("HP: " + status[0]);
				Timer2();
				System.out.println("Poção: " + status[1]);
				Timer();
				System.out.println(" ");

				condicao = false;
			} else {
				System.out.println("Você terá que refazer o desafio\n");
				status[0] = 100;
			}
		} while (condicao);

		System.out.print("\nAperte ENTER para começar o segundo Deafio");
		sc.nextLine();
		System.out.println(" ");

		do {
			status = Desafio2_Templo3(status);
			if (status[0] > 0) {
				System.out.println("\nVocê concluiu o segundo desafio!");
				Timer2();
				System.out.println("Parabéns, você ganhou uma Poção!");
				status[1]++;
				Timer2();
				System.out.println("HP: " + status[0]);
				Timer2();
				System.out.println("Poção: " + status[1]);
				Timer();
				System.out.println(" ");

				condicao = false;
			} else {
				System.out.println("Você terá que refazer o desafio\n");
				status[0] = 100;
			}
		} while (condicao);

		System.out.print("\nAperte ENTER para começar o último Deafio");
		sc.nextLine();
		System.out.println(" ");

		do {
			status = Desafio3_Templo3(status);
			if (status[0] > 0) {
				System.out.println("\nVocê concluiu o último desafio!");
				Timer2();
				System.out.println("Parabéns, você ganhou uma Poção!");
				status[1]++;
				Timer2();
				System.out.println("HP: " + status[0]);
				Timer2();
				System.out.println("Poção: " + status[1]);
				Timer();
				System.out.println(" ");

				condicao = false;
			} else {
				System.out.println("Você terá que refazer o desafio\n");
				status[0] = 100;
			}
		} while (condicao);

		Timer();
		System.out.println("Você conseguiu concluiro o Templo das Conversões");
		Timer2();
		FormataTexto1("Você está preparado para o ");
		FormataTexto2("F I N A L ");
		FormataTexto2("B O S S ");
		FormataTexto2("? ? ?");
		System.out.println("\n");
		return status;
	}

	// DESAFIO É CONVERTER UM NÚMERO QUE ESTÁ EM UMA BASE PARA OUTRA
	static int[] Desafio1_Templo3(int[] status) {
		int baseInicial, baseConversao;
		String respostaCerta;

		String[] numeroInicial = new String[1];
		String[] opcoes = new String[5];
		ArrayList<String> respostaErrada = new ArrayList();

		////////////////////////////////////////////////////////////////////////
		// Area para preparar os numeros
		baseInicial = DeterminaBase_Templo3(); // Determinando a base standard

		do {
			baseConversao = DeterminaBase_Templo3(); // Determinando a base de conversao
		} while (baseConversao == baseInicial);

		numeroInicial[0] = DeterminaNumero_Templo3(baseInicial); // Determinando o numero standard

		respostaCerta = DeterminaNumeroConv_Templo3(numeroInicial, baseInicial, baseConversao); // Determinando o numero
																								// de conversao (certo)

		respostaErrada.add(respostaCerta); // Adicionando a resposta certa nas opcoes

		for (int i = 0; i < 4; i++) {
			respostaErrada.add(DeterminaOpcoes(baseConversao, respostaCerta)); // Adicionando opcoes erradas
		}

		Collections.shuffle(respostaErrada); // Embaralhando as opcoes para que haja uma aleatoriedade
		Collections.shuffle(respostaErrada);

		for (int i = 0; i < opcoes.length; i++) {
			opcoes[i] = respostaErrada.get(i); // Transferindo as opcoes do ArrayList para uma String[]
		}

		////////////////////////////////////////////////////////////////////////
		// Area de logica do game
		Texto_Formatado(Tabula1(4, "***\tWELCOME TO THE 1ST GAME\t***\n"));

		System.out.printf("\nConverta o numero %S que esta na base %d para a base %d\n\n", numeroInicial[0],
				baseInicial, baseConversao);
		Timer2();

		status = ProcessoAlternativas_Geral(opcoes, status, respostaCerta);

		return status;
	}

	// DESAFIO É SOMAR DOIS NÚMEROS QUE ESTÃO EM UMA BASE E CONVERTER PARA OUTRO
	static int[] Desafio2_Templo3(int[] status) {
		// Area para inicializar variaveis
		int baseInicial, baseConversao;
		String respostaCerta;

		String[] numeroInicial = new String[2];
		String[] opcoes = new String[5];
		ArrayList<String> respostaErrada = new ArrayList();
		////////////////////////////////////////////////////////////////////////
		// Area para declarar os numeros

		baseInicial = DeterminaBase_Templo3(); // Gerar a base standard

		do {
			baseConversao = DeterminaBase_Templo3(); // Gerar a base para conversao
		} while (baseConversao == baseInicial);

		numeroInicial[0] = DeterminaNumero_Templo3(baseInicial); // Gerar o numero standard A
		numeroInicial[1] = DeterminaNumero_Templo3(baseInicial); // Gerar o numero standard B

		respostaCerta = DeterminaNumeroConv_Templo3(numeroInicial, baseInicial, baseConversao); // Gerar a resposta
																								// certa

		respostaErrada.add(respostaCerta); // Adicionando a resposta certa no ArrayList

		for (int i = 0; i <= 3; i++) {
			respostaErrada.add(DeterminaOpcoes(baseConversao, respostaCerta)); // Criando respostas erradas para o
																				// ArrayList
		}

		Collections.shuffle(respostaErrada); // Embaralhando as opcoes
		Collections.shuffle(respostaErrada);

		for (int i = 0; i < opcoes.length; i++) {
			opcoes[i] = respostaErrada.get(i); // Adicionando as opcoes embaralhadas numa String para fazer o desafio
		}

		Texto_Formatado(Tabula1(4, "***\tWELCOME TO THE 2ND GAME\t***\n"));
		Timer2();
		System.out.printf("\nFaça a seguinte conversão:\n%S + %S (na base %d) = X (na base %d)\n\n", numeroInicial[0],
				numeroInicial[1], baseInicial, baseConversao);
		Timer2();

		ProcessoAlternativas_Geral(opcoes, status, respostaCerta);

		return status;
	}

	static int[] Desafio3_Templo3(int[] status) {
		// Area para declarar variaveis
		int baseInicial, baseConversao, aux;
		String respostaCerta;

		String[] numeroInicial = new String[2];
		String[] opcoes = new String[5];
		ArrayList<String> respostaErrada = new ArrayList();
		////////////////////////////////////////////////////////////////////////
		// Area para iniciar variaveis
		baseInicial = DeterminaBase_Templo3(); // Gerar a base inicial

		do {
			baseConversao = DeterminaBase_Templo3(); // Gerar a base para conversao
		} while (baseConversao == baseInicial);

		numeroInicial[0] = DeterminaNumero_Templo3(baseInicial); // Gerar numero standard A
		numeroInicial[1] = DeterminaNumero_Templo3(baseInicial); // Gerar numero standard B

		aux = (Integer.parseInt(numeroInicial[0], baseInicial)) * (Integer.parseInt(numeroInicial[1], baseInicial)); // Convertendo
																														// o
																														// produto
																														// dos
																														// numeros
																														// standard
																														// para
																														// int

		respostaCerta = Integer.toString(aux, baseConversao); // Convertendo o produto dos numeros standard para a base
																// de conversao

		respostaErrada.add(respostaCerta); // Adicionando a resposta certa nas opcoes

		for (int i = 0; i <= 3; i++) {
			respostaErrada.add(DeterminaOpcoes(baseConversao, respostaCerta)); // Adicionando as opcoes erradas
		}

		Collections.shuffle(respostaErrada); // Embaralhando as opcoes
		Collections.shuffle(respostaErrada);

		for (int i = 0; i < opcoes.length; i++) {
			opcoes[i] = respostaErrada.get(i);// Adicionando as opcoes em String para fazer o desafio
		}

		Texto_Formatado(Tabula1(4, "***\tWELCOME TO THE 3ND GAME\t***\n"));

		System.out.printf("\nFaça a seguinte conversão:\n%S * %S (na base %d) = X (na base %d)\n\n", numeroInicial[0],
				numeroInicial[1], baseInicial, baseConversao);
		Timer2();

		ProcessoAlternativas_Geral(opcoes, status, respostaCerta);

		return status;
	}

	// FUNÇÕES DO TEMPLO 3

	static int DeterminaBase_Templo3() {

		ArrayList<Integer> bases = new ArrayList();

		bases.add(2);
		bases.add(8);
		bases.add(10);
		bases.add(16);

		Collections.shuffle(bases);
		Collections.shuffle(bases);

		return bases.get(0);
	}

	static String DeterminaNumero_Templo3(int baseInicial) {

		Random dado = new Random();
		int numRandom;
		String baseAconv = null;

		do {
			numRandom = dado.nextInt(2000);
		} while (numRandom <= 50);

		switch (baseInicial) {
		case 2:
			baseAconv = Integer.toBinaryString(numRandom);
			break;
		case 8:
			baseAconv = Integer.toOctalString(numRandom);
			break;
		case 10:
			baseAconv = Integer.toString(numRandom);
			break;
		case 16:
			baseAconv = Integer.toHexString(numRandom);
			break;
		}

		return baseAconv;
	}

	static String DeterminaOpcoes(int baseConversao, String respostaCerta) {
		Random dado = new Random();
		int aux = Integer.parseInt(respostaCerta, baseConversao);
		String opcoesFalsas;

		do {
			aux = aux + dado.nextInt(30);
			aux = aux - 15;
			opcoesFalsas = Integer.toString(aux, baseConversao);
		} while (opcoesFalsas.equals(respostaCerta));

		return opcoesFalsas;
	}

	static String DeterminaNumeroConv_Templo3(String[] numeroInicial, int baseInicial, int baseConversao) {
		int aux = 0;
		String respostaConversao;

		for (int i = 0; i < numeroInicial.length; i++) {
			aux = aux + Integer.parseInt(numeroInicial[i], baseInicial);
		}

		respostaConversao = Integer.toString(aux, baseConversao);

		return respostaConversao;
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-05-29 20:57:30.909
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-05-29 20:57:30.909
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-05-29 20:57:38.381
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Scanner;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Random;

public class O_Jogo {

// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-VARIAVÉIS GLOBAIS-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
	public static Scanner entrada = new Scanner(System.in);
	public static String opcao = "";
	public static int dificuldade = 0;
	public static String nomeJogador = "";
	public static int thread1 = 1000;
	public static int thread2 = 0;
	public static int thread3 = 50;

	// CORES DO TEXTO
	public static final String RESET = "\u001B[30m";
	public static final String RED = "\u001B[31m";
	public static final String GREEN = "\u001B[32m";
	public static final String YELLOW = "\u001B[33m";
	public static final String BLUE = "\u001B[34m";
	public static final String MAGENTA = "\u001B[35m";
	public static final String CYAN = "\u001B[36m";
	public static final String WHITE = "\u001B[37m";

	// CORES DO FUNDO DO TEXTO
	public static final String RESET_BACKGROUND = "\u001B[0m";
	public static final String BLACK_BACKGROUND = "\u001B[40m";
	public static final String RED_BACKGROUND = "\u001B[41m";
	public static final String GREEN_BACKGROUND = "\u001B[42m";
	public static final String YELLOW_BACKGROUND = "\u001B[43m";
	public static final String BLUE_BACKGROUND = "\u001B[44m";
	public static final String PURPLE_BACKGROUND = "\u001B[45m";
	public static final String CYAN_BACKGROUND = "\u001B[46m";
	public static final String WHITE_BACKGROUND = "\u001B[47m";

// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-MAIN-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
	public static void main(String[] args) {

		boolean cond = true;
		int[] status = { 100, 2 };

		do {

			System.out.print(Tabula1(6, "---Menu---\n\n"));
			System.out.print(Tabula2(2, "[1] Intruções", 6, "[2] Jogar\n"));
			System.out.print(Tabula2(2, "[3] Créditos", 6, "[4] Sair\n"));

			String opcao_Menu = Option();

			switch (opcao_Menu) {

			case "1":
				Instruções();
				break;

			case "2":

				Jogar();
				Hist_1();
				ExecutaTemplo3(status);
				/*
				 * Templo_1(); Templo_2(); Templo_3(); Big_Boss();
				 */
				break;

			case "3":
				Créditos();
				break;

			case "4":

				cond = false;
				break;

			default:

				System.out.print(RED + Tabula1(6, "Opção não é válida!\n\n") + RESET);

			}

		} while (cond);

	}

// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-JOGO-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

	// PROCEDIMENTO PARA ARMAZENAR AS INFORMAÇÕES DAS INTRUÇÕES
	public static void Instruções() {

		System.out.print("\n");
		Texto_Formatado("\nO objetivo do jogo é auxiliar o jogador em alguns conhecimentos da matemática."
				+ " Ao longo da jornada, serão apresentados conteúdos sobre a matéria em questão e "
				+ "apresentadas perguntas ao jogador. O mesmo deverá selecionar as opções válidas para que ele possa"
				+ " avançar no jogo e a cada questão, o jogador sofrerá um dano se errar, diminuindo assim sua vida."
				+ " O objetivo final do jogador, é avançar por todos os templos para derrotar o último chefe, sem perder toda a sua vida.");
		System.out.print("\n");
		Sair();

	}

	// PROCEDIMENTO PARA FAZER A 1º CHAMADA DO JOGO, PARA COLETAR AS INFORMAÇÕES DO
	// NOME DO JOGADOR, A DIFICULDADE DO JOGO E A HISTÓRIA INICIAL
	public static void Jogar() {

		Texto_Formatado(Tabula1(4, "---Escolha a sua dificuldade de jogo---\n\n")
				+ Tabula3(1, "[1] Fácil", 3, "[2] Normal", 3, "[3] Difícil"));

		boolean cond = true;

		do {

			String opcao_Menu = Option();
			switch (opcao_Menu) {

			case "1":
				dificuldade = 1;
				cond = false;
				break;

			case "2":
				dificuldade = 2;
				cond = false;
				break;

			case "3":
				dificuldade = 3;
				cond = false;
				break;

			default:
				System.out.print(RED + Tabula1(6, "Opção não é válida!\n\n") + RESET);

			}
		} while (cond);

		Texto_Formatado(Tabula1(4, "   ---Escolha o nome do seu jogador---"));
		nomeJogador = Option();

		boolean cond2 = true;
		do {

			Texto_Formatado(Tabula1(4,
					"---Você deseja que o nome do seu jogador seja " + RED + nomeJogador + RESET + " ?---\n\n")
					+ Tabula2(4, GREEN + "[S]" + RESET, 6, RED + "[N]" + RESET));
			String opcao_Menu = Option();

			switch (opcao_Menu.toUpperCase()) {
			case "S":
				cond2 = false;
				break;
			case "N":
				Texto_Formatado(Tabula1(4, "---Escolha o nome do seu jogador---"));
				nomeJogador = Option();
				break;
			default:
				System.out.print(RED + Tabula1(6, "Opção não é válida!\n\n") + RESET);
			}
		} while (cond2);

	}

	// PROCEDIMENTO PARA ARMAZENAR AS INFORMAÇÕES DOS CRÉDITOS
	public static void Créditos() {

		System.out.print("\n");
		Texto_Formatado("\n-Gustavo Tozeti\n\t\t-Matheus Cavalcanti\n\t\t\t-Renan Kesper");
		System.out.print("\n");
		Sair();

	}

	public static void Hist_1() {

		System.out.print("\n");
		
		Texto_Formatado(BLUE
				+ "\n\"Reza a lenda que Ariandre era um lugar próspero, cheio de magia e encanto, onde todos os seres viviam em harmonia e em paz. Um lugar tão belo,"					//TEXTO LIDO PELO PERSONAGEM
				+ " que a matemática era a base de força para grandes magos. Mas isso é claro, antes do grande acontecimento. . .Ninguém sabe ao certo, nem ao menos como,"				
				+ " mas naquela tarde esse lugar tão calmo e pleno, foi reduzido a cinzas e escombros, uma enorme escuridão pairou pelos céus e tomou Ariandre por inteiro "			
				+ "e com um simples clarão. . .tudo foi destruído. Após momentos agoniantes, enfim o motivo disso tudo. . .sim, ele que era apenas uma fábula de centenas de "			
				+ "anos, de contos muito antigos, enfim ressurgiu..."+ RESET + RED + "Ancelot" + BLUE + " tinha despertado. O grande rei demônio estava presente novamente, "			
				+ "para aprisionar toda a matemática de Ariandre e ser o detentor de toda a magia. Já se passaram alguns meses depois disso tudo, mas agora espero "					
				+ "ter forças para enfrentá-lo, mas a cada dia que se passa nessas catedrais do abismo perco mais e mais da minha sanidade. Talvez eu seja a última esperança "			
				+ "de Ariandre, mas caso alguém esteja lendo isso, significa que Ancelot venceu e Ariandre para sempre estará sob o seu domínio.\"" + RESET); 	//TEXTO LIDO PELO PERSONAGEM
				
				+ Dialogo(nomeJogador) +  GREEN + "\nMas...mas como? Meses? Estava tudo certo, ele estava em minhas mãos, como foi tudo isso desmoronar. Minha "					//FALA DO PERSONAGEM
				+ "cabeça dói, são memórias que me vem, mas o que será que aconteceu? Por que eu estou nas catedrais e porque Ariandre está destruída? Será isso um sonho?"
				+ "\n\nEu preciso descobrir o que aconteceu, mas me sinto estranho. Parece que não tenho mais meus poderes. Será que eu consigo canalizar algo??");
		
		System.out.print("\n");

	}
// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-FERRAMENTAS-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

	// PROCEDIMENTO CRIADO PARA FORMATAR QUALQUER TEXTO, PARA PADRONIZAR O LAYOUT DA
	// MENSAGEM COM BASE EM UM VALOR PRÉ DETERMINADO
	public static void Texto_Formatado(String frase) {

		String texto = frase;
		String[] palavras = texto.split(" ");

		int contadorQntLetras = 0;
		int limiteLinha = 140;

		for (int i = 0; i < limiteLinha; i++) {
			System.out.print(RED + "=" + RESET);
		}
		System.out.print("\n");

		for (String palavra : palavras) {

			if (contadorQntLetras + palavra.length() >= limiteLinha) {
				contadorQntLetras = 0;
				System.out.print("\n");
			}

			System.out.print(palavra + " ");
			Timer2();
			contadorQntLetras += palavra.length() + 1;
		}
		System.out.println("\n");

		for (int i = 0; i < limiteLinha; i++) {
			System.out.print(RED + "=" + RESET);
		}

	}

	// PROCEDIMENTO CRIADO PARA TABULAR QUALQUER TEXTO, PARA PADRONIZAR O LAYOUT DA
	// MENSAGEM
	public static String Tabula1(int t, String s) {

		String tab = "\t";
		String frase = "";
		for (int i = 0; i <= t; i++) {
			frase += tab;
		}
		frase += s;

		return frase;
	}

	public static String Tabula2(int t, String s, int tt, String ss) {

		String tab = "\t";
		String frase = "";

		for (int i = 0; i <= t; i++) {
			frase += tab;
		}
		frase += s;
		for (int i = 0; i <= tt; i++) {
			frase += tab;
		}
		frase += ss;
		return frase;
	}

	public static String Tabula3(int t, String s, int tt, String ss, int ttt, String sss) {

		String tab = "\t";
		String frase = "";

		for (int i = 0; i <= t; i++) {
			frase += tab;
		}
		frase += s;
		for (int i = 0; i <= tt; i++) {
			frase += tab;
		}
		frase += ss;
		for (int i = 0; i <= ttt; i++) {
			frase += tab;
		}
		frase += sss;
		return frase;
	}

	// FUNÇÃO CRIADA PARA RETONAR UMA OPÇÃO DESEJADA DO USUÁRIO
	public static String Option() {
		System.out.print(BLACK_BACKGROUND + WHITE + "\n***Digite sua opção:" + RESET + RESET_BACKGROUND + " ");
		opcao = entrada.next();
		System.out.print("\n");
		return opcao;
	}

	public static String Dialogo(String Nome) {
		String texto = "\n\n" + BLACK_BACKGROUND + GREEN + "- "+Nome+":" + RESET + RESET_BACKGROUND;
		return texto;
		}
	
	// PROCEDIMENTO CRIADO PARA SAIR DE UMA OPÇÃO DE UM MENU
	public static void Sair() {
		Scanner sc = new Scanner(System.in);
		System.out.print("\nPressione a tecla ENTER para voltar!\n");
		sc.nextLine();
		System.out.println(" ");
	}

	static int DanoRespostaErrada(int healthPoints) {
		Random dado = new Random();
		int jogada;

		System.out.println("\nA resposta está...");
		Timer();
		System.out.println("...");
		Timer();
		System.out.println("...");
		Timer();
		System.out.println(RED + "Errada :(" + RESET);
		System.out.println("\nAgora iremos jogar o dado para saber quanto de dano você irá tomar.");
		System.out.println("O número que caiu no dado é...");
		Timer();
		System.out.println("...");
		Timer();
		System.out.println("...");
		Timer();

		jogada = dado.nextInt(20) + 1;

		System.out.printf("**\t%d\t**\n", jogada);

		if (jogada <= 5) {
			System.out.println("Parece que você deu sorte e se esquivou do dano.");
		} else if (jogada > 5 && jogada <= 15) {
			System.out.println("Você levou 20 de dano");
			healthPoints = healthPoints - (20 + (5 * dificuldade));
		} else if (jogada > 15) {
			System.out.println("Você tomou dano crítico!");
			healthPoints = healthPoints - (30 + (5 * dificuldade));
		}

		System.out.printf("Total HP: %d\n\n", healthPoints);
		return healthPoints;
	}

	static void GameOver() {
		System.out.println("Seu HP chegou a 0");

		String game = "G A M E";
		String over = "O V E R";

		FormataTexto2(game);
		FormataTexto2(over);

		System.out.println("\n");
	}

	static int[] UsePotion(int healthPoints, int qntPotions) {

		Scanner input = new Scanner(System.in);
		boolean condicao = true;
		char opcao = 0;
		int[] status = new int[2];

		System.out.printf("HP atual: %d\nQuantidade de potions: %d\n\n", healthPoints, qntPotions);

		do {
			try {
				System.out.println("Você tem certeza que quer usar uma potion?\n" + GREEN + "[S]" + RESET + " ou " + RED
						+ "[N]\n" + RESET);
				System.out.print("Escolha: ");
				opcao = input.next().toUpperCase().charAt(0);
			} catch (Exception e) {
				System.out.println("Caracter invalido.");
			}

			if (qntPotions > 0) {
				switch (opcao) {
				case 'S':
					healthPoints = healthPoints + 20;
					qntPotions--;

					if (healthPoints > 100) {
						do {
							healthPoints--;
						} while (healthPoints != 100);
					}
					System.out.println("Você usou uma potion.");
					System.out.printf("Quantidade potions: %d\n", qntPotions);
					System.out.printf("Total HP: %d\n\n", healthPoints);
					condicao = false;
					break;
				case 'N':
					System.out.println("Você guardou a potion de volta na bolsa\n");
					condicao = false;
					break;
				}
			} else {
				System.out.println("Você não tem potions");
				condicao = false;
			}

		} while (condicao);

		status[0] = healthPoints;
		status[1] = qntPotions;

		return status;
	}

	static void Timer() {
		try {
			Thread.sleep(thread1);
		} catch (Exception e) {

		}
	}

	static void Timer2() {
		try {
			Thread.sleep(thread2);
		} catch (Exception e) {

		}
	}

	static void Timer3() {
		try {
			Thread.sleep(thread3);
		} catch (Exception e) {

		}
	}

	static void AcertouResposta(int healthPoints) {
		System.out.println("\nA resposta está...");
		Timer();
		System.out.println("...");
		Timer();
		System.out.println("...");
		Timer();
		System.out.println(GREEN + "Certa! :D\n" + RESET);

		if (healthPoints >= 30 && healthPoints < 65) {
			System.out.println("Parece que foi um desafio para você.");
		}
		if (healthPoints < 30) {
			System.out.println("Foi por pouco que você conseguiu passar!");
		}

	}

	static int[] ProcessoAlternativas_Geral(String[] opcoes, int[] status, String respostaCerta) {
		// Area para declarar variaveis
		Scanner sc = new Scanner(System.in);
		String resposta;
		boolean condicao = true;

		System.out.printf("[ A ] %S\n", opcoes[0]);
		Timer2();
		System.out.printf("[ B ] %S\n", opcoes[1]);
		Timer2();
		System.out.printf("[ C ] %S\n", opcoes[2]);
		Timer2();
		System.out.printf("[ D ] %S\n", opcoes[3]);
		Timer2();
		System.out.printf("[ E ] %S\n\n", opcoes[4]);
		Timer2();
		System.out.println("Resposta certa: " + respostaCerta.toUpperCase());
		Timer2();

		////////////////////////////////////////////////////////////////////////
		// Area para processo de alternativas
		do {

			resposta = Option().toUpperCase();
			if (status[0] <= 0) {
				GameOver();
				condicao = false;
			}

			switch (resposta.charAt(0)) {
			case 'A':
				if (opcoes[0].equals(respostaCerta)) {
					AcertouResposta(status[0]);
					condicao = false;
				} else {
					status[0] = DanoRespostaErrada(status[0]);
					if (status[0] <= 0) {
						GameOver();
						condicao = false;
					}
				}
				break;
			case 'B':
				if (opcoes[1].equals(respostaCerta)) {
					AcertouResposta(status[0]);
					condicao = false;
				} else {
					status[0] = DanoRespostaErrada(status[0]);
					if (status[0] <= 0) {
						GameOver();
						condicao = false;
					}
				}
				break;

			case 'C':
				if (opcoes[2].equals(respostaCerta)) {
					AcertouResposta(status[0]);
					condicao = false;
				} else {
					status[0] = DanoRespostaErrada(status[0]);
					if (status[0] <= 0) {
						GameOver();
						condicao = false;
					}
				}
				break;
			case 'D':
				if (opcoes[3].equals(respostaCerta)) {
					AcertouResposta(status[0]);
					condicao = false;
				} else {
					status[0] = DanoRespostaErrada(status[0]);
					if (status[0] <= 0) {
						GameOver();
						condicao = false;
					}
				}
				break;
			case 'E':
				if (opcoes[4].equals(respostaCerta)) {
					AcertouResposta(status[0]);
					condicao = false;
				} else {
					status[0] = DanoRespostaErrada(status[0]);
					if (status[0] <= 0) {
						GameOver();
						condicao = false;
					}
				}
				break;
			case 'P':
				status = UsePotion(status[0], status[1]);
			}
		} while (condicao);

		return status;
	}

	static void FormataTexto1(String frase) {

		String[] palavra = frase.split(" ");

		for (String each : palavra) {
			System.out.print(each + " ");
			Timer2();
		}
	}

	static void FormataTexto2(String frase) {

		String[] palavra = frase.split(" ");

		for (String each : palavra) {
			System.out.print(each);
			Timer2();
		}

		System.out.print(" ");
	}

// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-TEMPLOS-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

	// TEMPLO 3
	static int[] ExecutaTemplo3(int[] status) {
		Scanner sc = new Scanner(System.in);
		boolean condicao = true;

		do {
			status = Desafio1_Templo3(status);
			if (status[0] > 0) {
				System.out.println("\nVocê concluiu o primeiro desafio!");
				Timer2();
				System.out.println("Parabéns, você ganhou uma Poção!");
				status[1]++;
				Timer2();
				System.out.println("HP: " + status[0]);
				Timer2();
				System.out.println("Poção: " + status[1]);
				Timer();
				System.out.println(" ");

				condicao = false;
			} else {
				System.out.println("Você terá que refazer o desafio\n");
				status[0] = 100;
			}
		} while (condicao);

		System.out.print("\nAperte ENTER para começar o segundo Deafio");
		sc.nextLine();
		System.out.println(" ");

		do {
			status = Desafio2_Templo3(status);
			if (status[0] > 0) {
				System.out.println("\nVocê concluiu o segundo desafio!");
				Timer2();
				System.out.println("Parabéns, você ganhou uma Poção!");
				status[1]++;
				Timer2();
				System.out.println("HP: " + status[0]);
				Timer2();
				System.out.println("Poção: " + status[1]);
				Timer();
				System.out.println(" ");

				condicao = false;
			} else {
				System.out.println("Você terá que refazer o desafio\n");
				status[0] = 100;
			}
		} while (condicao);

		System.out.print("\nAperte ENTER para começar o último Deafio");
		sc.nextLine();
		System.out.println(" ");

		do {
			status = Desafio3_Templo3(status);
			if (status[0] > 0) {
				System.out.println("\nVocê concluiu o último desafio!");
				Timer2();
				System.out.println("Parabéns, você ganhou uma Poção!");
				status[1]++;
				Timer2();
				System.out.println("HP: " + status[0]);
				Timer2();
				System.out.println("Poção: " + status[1]);
				Timer();
				System.out.println(" ");

				condicao = false;
			} else {
				System.out.println("Você terá que refazer o desafio\n");
				status[0] = 100;
			}
		} while (condicao);

		Timer();
		System.out.println("Você conseguiu concluiro o Templo das Conversões");
		Timer2();
		FormataTexto1("Você está preparado para o ");
		FormataTexto2("F I N A L ");
		FormataTexto2("B O S S ");
		FormataTexto2("? ? ?");
		System.out.println("\n");
		return status;
	}

	// DESAFIO É CONVERTER UM NÚMERO QUE ESTÁ EM UMA BASE PARA OUTRA
	static int[] Desafio1_Templo3(int[] status) {
		int baseInicial, baseConversao;
		String respostaCerta;

		String[] numeroInicial = new String[1];
		String[] opcoes = new String[5];
		ArrayList<String> respostaErrada = new ArrayList();

		////////////////////////////////////////////////////////////////////////
		// Area para preparar os numeros
		baseInicial = DeterminaBase_Templo3(); // Determinando a base standard

		do {
			baseConversao = DeterminaBase_Templo3(); // Determinando a base de conversao
		} while (baseConversao == baseInicial);

		numeroInicial[0] = DeterminaNumero_Templo3(baseInicial); // Determinando o numero standard

		respostaCerta = DeterminaNumeroConv_Templo3(numeroInicial, baseInicial, baseConversao); // Determinando o numero
																								// de conversao (certo)

		respostaErrada.add(respostaCerta); // Adicionando a resposta certa nas opcoes

		for (int i = 0; i < 4; i++) {
			respostaErrada.add(DeterminaOpcoes(baseConversao, respostaCerta)); // Adicionando opcoes erradas
		}

		Collections.shuffle(respostaErrada); // Embaralhando as opcoes para que haja uma aleatoriedade
		Collections.shuffle(respostaErrada);

		for (int i = 0; i < opcoes.length; i++) {
			opcoes[i] = respostaErrada.get(i); // Transferindo as opcoes do ArrayList para uma String[]
		}

		////////////////////////////////////////////////////////////////////////
		// Area de logica do game
		Texto_Formatado(Tabula1(4, "***\tWELCOME TO THE 1ST GAME\t***\n"));

		System.out.printf("\nConverta o numero %S que esta na base %d para a base %d\n\n", numeroInicial[0],
				baseInicial, baseConversao);
		Timer2();

		status = ProcessoAlternativas_Geral(opcoes, status, respostaCerta);

		return status;
	}

	// DESAFIO É SOMAR DOIS NÚMEROS QUE ESTÃO EM UMA BASE E CONVERTER PARA OUTRO
	static int[] Desafio2_Templo3(int[] status) {
		// Area para inicializar variaveis
		int baseInicial, baseConversao;
		String respostaCerta;

		String[] numeroInicial = new String[2];
		String[] opcoes = new String[5];
		ArrayList<String> respostaErrada = new ArrayList();
		////////////////////////////////////////////////////////////////////////
		// Area para declarar os numeros

		baseInicial = DeterminaBase_Templo3(); // Gerar a base standard

		do {
			baseConversao = DeterminaBase_Templo3(); // Gerar a base para conversao
		} while (baseConversao == baseInicial);

		numeroInicial[0] = DeterminaNumero_Templo3(baseInicial); // Gerar o numero standard A
		numeroInicial[1] = DeterminaNumero_Templo3(baseInicial); // Gerar o numero standard B

		respostaCerta = DeterminaNumeroConv_Templo3(numeroInicial, baseInicial, baseConversao); // Gerar a resposta
																								// certa

		respostaErrada.add(respostaCerta); // Adicionando a resposta certa no ArrayList

		for (int i = 0; i <= 3; i++) {
			respostaErrada.add(DeterminaOpcoes(baseConversao, respostaCerta)); // Criando respostas erradas para o
																				// ArrayList
		}

		Collections.shuffle(respostaErrada); // Embaralhando as opcoes
		Collections.shuffle(respostaErrada);

		for (int i = 0; i < opcoes.length; i++) {
			opcoes[i] = respostaErrada.get(i); // Adicionando as opcoes embaralhadas numa String para fazer o desafio
		}

		Texto_Formatado(Tabula1(4, "***\tWELCOME TO THE 2ND GAME\t***\n"));
		Timer2();
		System.out.printf("\nFaça a seguinte conversão:\n%S + %S (na base %d) = X (na base %d)\n\n", numeroInicial[0],
				numeroInicial[1], baseInicial, baseConversao);
		Timer2();

		ProcessoAlternativas_Geral(opcoes, status, respostaCerta);

		return status;
	}

	static int[] Desafio3_Templo3(int[] status) {
		// Area para declarar variaveis
		int baseInicial, baseConversao, aux;
		String respostaCerta;

		String[] numeroInicial = new String[2];
		String[] opcoes = new String[5];
		ArrayList<String> respostaErrada = new ArrayList();
		////////////////////////////////////////////////////////////////////////
		// Area para iniciar variaveis
		baseInicial = DeterminaBase_Templo3(); // Gerar a base inicial

		do {
			baseConversao = DeterminaBase_Templo3(); // Gerar a base para conversao
		} while (baseConversao == baseInicial);

		numeroInicial[0] = DeterminaNumero_Templo3(baseInicial); // Gerar numero standard A
		numeroInicial[1] = DeterminaNumero_Templo3(baseInicial); // Gerar numero standard B

		aux = (Integer.parseInt(numeroInicial[0], baseInicial)) * (Integer.parseInt(numeroInicial[1], baseInicial)); // Convertendo
																														// o
																														// produto
																														// dos
																														// numeros
																														// standard
																														// para
																														// int

		respostaCerta = Integer.toString(aux, baseConversao); // Convertendo o produto dos numeros standard para a base
																// de conversao

		respostaErrada.add(respostaCerta); // Adicionando a resposta certa nas opcoes

		for (int i = 0; i <= 3; i++) {
			respostaErrada.add(DeterminaOpcoes(baseConversao, respostaCerta)); // Adicionando as opcoes erradas
		}

		Collections.shuffle(respostaErrada); // Embaralhando as opcoes
		Collections.shuffle(respostaErrada);

		for (int i = 0; i < opcoes.length; i++) {
			opcoes[i] = respostaErrada.get(i);// Adicionando as opcoes em String para fazer o desafio
		}

		Texto_Formatado(Tabula1(4, "***\tWELCOME TO THE 3ND GAME\t***\n"));

		System.out.printf("\nFaça a seguinte conversão:\n%S * %S (na base %d) = X (na base %d)\n\n", numeroInicial[0],
				numeroInicial[1], baseInicial, baseConversao);
		Timer2();

		ProcessoAlternativas_Geral(opcoes, status, respostaCerta);

		return status;
	}

	// FUNÇÕES DO TEMPLO 3

	static int DeterminaBase_Templo3() {

		ArrayList<Integer> bases = new ArrayList();

		bases.add(2);
		bases.add(8);
		bases.add(10);
		bases.add(16);

		Collections.shuffle(bases);
		Collections.shuffle(bases);

		return bases.get(0);
	}

	static String DeterminaNumero_Templo3(int baseInicial) {

		Random dado = new Random();
		int numRandom;
		String baseAconv = null;

		do {
			numRandom = dado.nextInt(2000);
		} while (numRandom <= 50);

		switch (baseInicial) {
		case 2:
			baseAconv = Integer.toBinaryString(numRandom);
			break;
		case 8:
			baseAconv = Integer.toOctalString(numRandom);
			break;
		case 10:
			baseAconv = Integer.toString(numRandom);
			break;
		case 16:
			baseAconv = Integer.toHexString(numRandom);
			break;
		}

		return baseAconv;
	}

	static String DeterminaOpcoes(int baseConversao, String respostaCerta) {
		Random dado = new Random();
		int aux = Integer.parseInt(respostaCerta, baseConversao);
		String opcoesFalsas;

		do {
			aux = aux + dado.nextInt(30);
			aux = aux - 15;
			opcoesFalsas = Integer.toString(aux, baseConversao);
		} while (opcoesFalsas.equals(respostaCerta));

		return opcoesFalsas;
	}

	static String DeterminaNumeroConv_Templo3(String[] numeroInicial, int baseInicial, int baseConversao) {
		int aux = 0;
		String respostaConversao;

		for (int i = 0; i < numeroInicial.length; i++) {
			aux = aux + Integer.parseInt(numeroInicial[i], baseInicial);
		}

		respostaConversao = Integer.toString(aux, baseConversao);

		return respostaConversao;
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-05-29 20:57:38.382
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-05-29 20:57:38.383
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core 4 4 2021-05-29 20:57:42.430
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Scanner;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Random;

public class O_Jogo {

// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-VARIAVÉIS GLOBAIS-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
	public static Scanner entrada = new Scanner(System.in);
	public static String opcao = "";
	public static int dificuldade = 0;
	public static String nomeJogador = "";
	public static int thread1 = 1000;
	public static int thread2 = 0;
	public static int thread3 = 50;

	// CORES DO TEXTO
	public static final String RESET = "\u001B[30m";
	public static final String RED = "\u001B[31m";
	public static final String GREEN = "\u001B[32m";
	public static final String YELLOW = "\u001B[33m";
	public static final String BLUE = "\u001B[34m";
	public static final String MAGENTA = "\u001B[35m";
	public static final String CYAN = "\u001B[36m";
	public static final String WHITE = "\u001B[37m";

	// CORES DO FUNDO DO TEXTO
	public static final String RESET_BACKGROUND = "\u001B[0m";
	public static final String BLACK_BACKGROUND = "\u001B[40m";
	public static final String RED_BACKGROUND = "\u001B[41m";
	public static final String GREEN_BACKGROUND = "\u001B[42m";
	public static final String YELLOW_BACKGROUND = "\u001B[43m";
	public static final String BLUE_BACKGROUND = "\u001B[44m";
	public static final String PURPLE_BACKGROUND = "\u001B[45m";
	public static final String CYAN_BACKGROUND = "\u001B[46m";
	public static final String WHITE_BACKGROUND = "\u001B[47m";

// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-MAIN-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
	public static void main(String[] args) {

		boolean cond = true;
		int[] status = { 100, 2 };

		do {

			System.out.print(Tabula1(6, "---Menu---\n\n"));
			System.out.print(Tabula2(2, "[1] Intruções", 6, "[2] Jogar\n"));
			System.out.print(Tabula2(2, "[3] Créditos", 6, "[4] Sair\n"));

			String opcao_Menu = Option();

			switch (opcao_Menu) {

			case "1":
				Instruções();
				break;

			case "2":

				Jogar();
				Hist_1();
				ExecutaTemplo3(status);
				/*
				 * Templo_1(); Templo_2(); Templo_3(); Big_Boss();
				 */
				break;

			case "3":
				Créditos();
				break;

			case "4":

				cond = false;
				break;

			default:

				System.out.print(RED + Tabula1(6, "Opção não é válida!\n\n") + RESET);

			}

		} while (cond);

	}

// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-JOGO-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

	// PROCEDIMENTO PARA ARMAZENAR AS INFORMAÇÕES DAS INTRUÇÕES
	public static void Instruções() {

		System.out.print("\n");
		Texto_Formatado("\nO objetivo do jogo é auxiliar o jogador em alguns conhecimentos da matemática."
				+ " Ao longo da jornada, serão apresentados conteúdos sobre a matéria em questão e "
				+ "apresentadas perguntas ao jogador. O mesmo deverá selecionar as opções válidas para que ele possa"
				+ " avançar no jogo e a cada questão, o jogador sofrerá um dano se errar, diminuindo assim sua vida."
				+ " O objetivo final do jogador, é avançar por todos os templos para derrotar o último chefe, sem perder toda a sua vida.");
		System.out.print("\n");
		Sair();

	}

	// PROCEDIMENTO PARA FAZER A 1º CHAMADA DO JOGO, PARA COLETAR AS INFORMAÇÕES DO
	// NOME DO JOGADOR, A DIFICULDADE DO JOGO E A HISTÓRIA INICIAL
	public static void Jogar() {

		Texto_Formatado(Tabula1(4, "---Escolha a sua dificuldade de jogo---\n\n")
				+ Tabula3(1, "[1] Fácil", 3, "[2] Normal", 3, "[3] Difícil"));

		boolean cond = true;

		do {

			String opcao_Menu = Option();
			switch (opcao_Menu) {

			case "1":
				dificuldade = 1;
				cond = false;
				break;

			case "2":
				dificuldade = 2;
				cond = false;
				break;

			case "3":
				dificuldade = 3;
				cond = false;
				break;

			default:
				System.out.print(RED + Tabula1(6, "Opção não é válida!\n\n") + RESET);

			}
		} while (cond);

		Texto_Formatado(Tabula1(4, "   ---Escolha o nome do seu jogador---"));
		nomeJogador = Option();

		boolean cond2 = true;
		do {

			Texto_Formatado(Tabula1(4,
					"---Você deseja que o nome do seu jogador seja " + RED + nomeJogador + RESET + " ?---\n\n")
					+ Tabula2(4, GREEN + "[S]" + RESET, 6, RED + "[N]" + RESET));
			String opcao_Menu = Option();

			switch (opcao_Menu.toUpperCase()) {
			case "S":
				cond2 = false;
				break;
			case "N":
				Texto_Formatado(Tabula1(4, "---Escolha o nome do seu jogador---"));
				nomeJogador = Option();
				break;
			default:
				System.out.print(RED + Tabula1(6, "Opção não é válida!\n\n") + RESET);
			}
		} while (cond2);

	}

	// PROCEDIMENTO PARA ARMAZENAR AS INFORMAÇÕES DOS CRÉDITOS
	public static void Créditos() {

		System.out.print("\n");
		Texto_Formatado("\n-Gustavo Tozeti\n\t\t-Matheus Cavalcanti\n\t\t\t-Renan Kesper");
		System.out.print("\n");
		Sair();

	}

	public static void Hist_1() {

		System.out.print("\n");
		
		Texto_Formatado(BLUE
				+ "\n\"Reza a lenda que Ariandre era um lugar próspero, cheio de magia e encanto, onde todos os seres viviam em harmonia e em paz. Um lugar tão belo,"					//TEXTO LIDO PELO PERSONAGEM
				+ " que a matemática era a base de força para grandes magos. Mas isso é claro, antes do grande acontecimento. . .Ninguém sabe ao certo, nem ao menos como,"				
				+ " mas naquela tarde esse lugar tão calmo e pleno, foi reduzido a cinzas e escombros, uma enorme escuridão pairou pelos céus e tomou Ariandre por inteiro "			
				+ "e com um simples clarão. . .tudo foi destruído. Após momentos agoniantes, enfim o motivo disso tudo. . .sim, ele que era apenas uma fábula de centenas de "			
				+ "anos, de contos muito antigos, enfim ressurgiu..."+ RESET + RED + "Ancelot" + BLUE + " tinha despertado. O grande rei demônio estava presente novamente, "			
				+ "para aprisionar toda a matemática de Ariandre e ser o detentor de toda a magia. Já se passaram alguns meses depois disso tudo, mas agora espero "					
				+ "ter forças para enfrentá-lo, mas a cada dia que se passa nessas catedrais do abismo perco mais e mais da minha sanidade. Talvez eu seja a última esperança "			
				+ "de Ariandre, mas caso alguém esteja lendo isso, significa que Ancelot venceu e Ariandre para sempre estará sob o seu domínio.\"" + RESET); 	//TEXTO LIDO PELO PERSONAGEM
				
				+
				Dialogo(nomeJogador) +  GREEN + "\nMas...mas como? Meses? Estava tudo certo, ele estava em minhas mãos, como foi tudo isso desmoronar. Minha "					//FALA DO PERSONAGEM
				+ "cabeça dói, são memórias que me vem, mas o que será que aconteceu? Por que eu estou nas catedrais e porque Ariandre está destruída? Será isso um sonho?"
				+ "\n\nEu preciso descobrir o que aconteceu, mas me sinto estranho. Parece que não tenho mais meus poderes. Será que eu consigo canalizar algo??");
		
		System.out.print("\n");

	}
// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-FERRAMENTAS-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

	// PROCEDIMENTO CRIADO PARA FORMATAR QUALQUER TEXTO, PARA PADRONIZAR O LAYOUT DA
	// MENSAGEM COM BASE EM UM VALOR PRÉ DETERMINADO
	public static void Texto_Formatado(String frase) {

		String texto = frase;
		String[] palavras = texto.split(" ");

		int contadorQntLetras = 0;
		int limiteLinha = 140;

		for (int i = 0; i < limiteLinha; i++) {
			System.out.print(RED + "=" + RESET);
		}
		System.out.print("\n");

		for (String palavra : palavras) {

			if (contadorQntLetras + palavra.length() >= limiteLinha) {
				contadorQntLetras = 0;
				System.out.print("\n");
			}

			System.out.print(palavra + " ");
			Timer2();
			contadorQntLetras += palavra.length() + 1;
		}
		System.out.println("\n");

		for (int i = 0; i < limiteLinha; i++) {
			System.out.print(RED + "=" + RESET);
		}

	}

	// PROCEDIMENTO CRIADO PARA TABULAR QUALQUER TEXTO, PARA PADRONIZAR O LAYOUT DA
	// MENSAGEM
	public static String Tabula1(int t, String s) {

		String tab = "\t";
		String frase = "";
		for (int i = 0; i <= t; i++) {
			frase += tab;
		}
		frase += s;

		return frase;
	}

	public static String Tabula2(int t, String s, int tt, String ss) {

		String tab = "\t";
		String frase = "";

		for (int i = 0; i <= t; i++) {
			frase += tab;
		}
		frase += s;
		for (int i = 0; i <= tt; i++) {
			frase += tab;
		}
		frase += ss;
		return frase;
	}

	public static String Tabula3(int t, String s, int tt, String ss, int ttt, String sss) {

		String tab = "\t";
		String frase = "";

		for (int i = 0; i <= t; i++) {
			frase += tab;
		}
		frase += s;
		for (int i = 0; i <= tt; i++) {
			frase += tab;
		}
		frase += ss;
		for (int i = 0; i <= ttt; i++) {
			frase += tab;
		}
		frase += sss;
		return frase;
	}

	// FUNÇÃO CRIADA PARA RETONAR UMA OPÇÃO DESEJADA DO USUÁRIO
	public static String Option() {
		System.out.print(BLACK_BACKGROUND + WHITE + "\n***Digite sua opção:" + RESET + RESET_BACKGROUND + " ");
		opcao = entrada.next();
		System.out.print("\n");
		return opcao;
	}

	public static String Dialogo(String Nome) {
		String texto = "\n\n" + BLACK_BACKGROUND + GREEN + "- "+Nome+":" + RESET + RESET_BACKGROUND;
		return texto;
		}
	
	// PROCEDIMENTO CRIADO PARA SAIR DE UMA OPÇÃO DE UM MENU
	public static void Sair() {
		Scanner sc = new Scanner(System.in);
		System.out.print("\nPressione a tecla ENTER para voltar!\n");
		sc.nextLine();
		System.out.println(" ");
	}

	static int DanoRespostaErrada(int healthPoints) {
		Random dado = new Random();
		int jogada;

		System.out.println("\nA resposta está...");
		Timer();
		System.out.println("...");
		Timer();
		System.out.println("...");
		Timer();
		System.out.println(RED + "Errada :(" + RESET);
		System.out.println("\nAgora iremos jogar o dado para saber quanto de dano você irá tomar.");
		System.out.println("O número que caiu no dado é...");
		Timer();
		System.out.println("...");
		Timer();
		System.out.println("...");
		Timer();

		jogada = dado.nextInt(20) + 1;

		System.out.printf("**\t%d\t**\n", jogada);

		if (jogada <= 5) {
			System.out.println("Parece que você deu sorte e se esquivou do dano.");
		} else if (jogada > 5 && jogada <= 15) {
			System.out.println("Você levou 20 de dano");
			healthPoints = healthPoints - (20 + (5 * dificuldade));
		} else if (jogada > 15) {
			System.out.println("Você tomou dano crítico!");
			healthPoints = healthPoints - (30 + (5 * dificuldade));
		}

		System.out.printf("Total HP: %d\n\n", healthPoints);
		return healthPoints;
	}

	static void GameOver() {
		System.out.println("Seu HP chegou a 0");

		String game = "G A M E";
		String over = "O V E R";

		FormataTexto2(game);
		FormataTexto2(over);

		System.out.println("\n");
	}

	static int[] UsePotion(int healthPoints, int qntPotions) {

		Scanner input = new Scanner(System.in);
		boolean condicao = true;
		char opcao = 0;
		int[] status = new int[2];

		System.out.printf("HP atual: %d\nQuantidade de potions: %d\n\n", healthPoints, qntPotions);

		do {
			try {
				System.out.println("Você tem certeza que quer usar uma potion?\n" + GREEN + "[S]" + RESET + " ou " + RED
						+ "[N]\n" + RESET);
				System.out.print("Escolha: ");
				opcao = input.next().toUpperCase().charAt(0);
			} catch (Exception e) {
				System.out.println("Caracter invalido.");
			}

			if (qntPotions > 0) {
				switch (opcao) {
				case 'S':
					healthPoints = healthPoints + 20;
					qntPotions--;

					if (healthPoints > 100) {
						do {
							healthPoints--;
						} while (healthPoints != 100);
					}
					System.out.println("Você usou uma potion.");
					System.out.printf("Quantidade potions: %d\n", qntPotions);
					System.out.printf("Total HP: %d\n\n", healthPoints);
					condicao = false;
					break;
				case 'N':
					System.out.println("Você guardou a potion de volta na bolsa\n");
					condicao = false;
					break;
				}
			} else {
				System.out.println("Você não tem potions");
				condicao = false;
			}

		} while (condicao);

		status[0] = healthPoints;
		status[1] = qntPotions;

		return status;
	}

	static void Timer() {
		try {
			Thread.sleep(thread1);
		} catch (Exception e) {

		}
	}

	static void Timer2() {
		try {
			Thread.sleep(thread2);
		} catch (Exception e) {

		}
	}

	static void Timer3() {
		try {
			Thread.sleep(thread3);
		} catch (Exception e) {

		}
	}

	static void AcertouResposta(int healthPoints) {
		System.out.println("\nA resposta está...");
		Timer();
		System.out.println("...");
		Timer();
		System.out.println("...");
		Timer();
		System.out.println(GREEN + "Certa! :D\n" + RESET);

		if (healthPoints >= 30 && healthPoints < 65) {
			System.out.println("Parece que foi um desafio para você.");
		}
		if (healthPoints < 30) {
			System.out.println("Foi por pouco que você conseguiu passar!");
		}

	}

	static int[] ProcessoAlternativas_Geral(String[] opcoes, int[] status, String respostaCerta) {
		// Area para declarar variaveis
		Scanner sc = new Scanner(System.in);
		String resposta;
		boolean condicao = true;

		System.out.printf("[ A ] %S\n", opcoes[0]);
		Timer2();
		System.out.printf("[ B ] %S\n", opcoes[1]);
		Timer2();
		System.out.printf("[ C ] %S\n", opcoes[2]);
		Timer2();
		System.out.printf("[ D ] %S\n", opcoes[3]);
		Timer2();
		System.out.printf("[ E ] %S\n\n", opcoes[4]);
		Timer2();
		System.out.println("Resposta certa: " + respostaCerta.toUpperCase());
		Timer2();

		////////////////////////////////////////////////////////////////////////
		// Area para processo de alternativas
		do {

			resposta = Option().toUpperCase();
			if (status[0] <= 0) {
				GameOver();
				condicao = false;
			}

			switch (resposta.charAt(0)) {
			case 'A':
				if (opcoes[0].equals(respostaCerta)) {
					AcertouResposta(status[0]);
					condicao = false;
				} else {
					status[0] = DanoRespostaErrada(status[0]);
					if (status[0] <= 0) {
						GameOver();
						condicao = false;
					}
				}
				break;
			case 'B':
				if (opcoes[1].equals(respostaCerta)) {
					AcertouResposta(status[0]);
					condicao = false;
				} else {
					status[0] = DanoRespostaErrada(status[0]);
					if (status[0] <= 0) {
						GameOver();
						condicao = false;
					}
				}
				break;

			case 'C':
				if (opcoes[2].equals(respostaCerta)) {
					AcertouResposta(status[0]);
					condicao = false;
				} else {
					status[0] = DanoRespostaErrada(status[0]);
					if (status[0] <= 0) {
						GameOver();
						condicao = false;
					}
				}
				break;
			case 'D':
				if (opcoes[3].equals(respostaCerta)) {
					AcertouResposta(status[0]);
					condicao = false;
				} else {
					status[0] = DanoRespostaErrada(status[0]);
					if (status[0] <= 0) {
						GameOver();
						condicao = false;
					}
				}
				break;
			case 'E':
				if (opcoes[4].equals(respostaCerta)) {
					AcertouResposta(status[0]);
					condicao = false;
				} else {
					status[0] = DanoRespostaErrada(status[0]);
					if (status[0] <= 0) {
						GameOver();
						condicao = false;
					}
				}
				break;
			case 'P':
				status = UsePotion(status[0], status[1]);
			}
		} while (condicao);

		return status;
	}

	static void FormataTexto1(String frase) {

		String[] palavra = frase.split(" ");

		for (String each : palavra) {
			System.out.print(each + " ");
			Timer2();
		}
	}

	static void FormataTexto2(String frase) {

		String[] palavra = frase.split(" ");

		for (String each : palavra) {
			System.out.print(each);
			Timer2();
		}

		System.out.print(" ");
	}

// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-TEMPLOS-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

	// TEMPLO 3
	static int[] ExecutaTemplo3(int[] status) {
		Scanner sc = new Scanner(System.in);
		boolean condicao = true;

		do {
			status = Desafio1_Templo3(status);
			if (status[0] > 0) {
				System.out.println("\nVocê concluiu o primeiro desafio!");
				Timer2();
				System.out.println("Parabéns, você ganhou uma Poção!");
				status[1]++;
				Timer2();
				System.out.println("HP: " + status[0]);
				Timer2();
				System.out.println("Poção: " + status[1]);
				Timer();
				System.out.println(" ");

				condicao = false;
			} else {
				System.out.println("Você terá que refazer o desafio\n");
				status[0] = 100;
			}
		} while (condicao);

		System.out.print("\nAperte ENTER para começar o segundo Deafio");
		sc.nextLine();
		System.out.println(" ");

		do {
			status = Desafio2_Templo3(status);
			if (status[0] > 0) {
				System.out.println("\nVocê concluiu o segundo desafio!");
				Timer2();
				System.out.println("Parabéns, você ganhou uma Poção!");
				status[1]++;
				Timer2();
				System.out.println("HP: " + status[0]);
				Timer2();
				System.out.println("Poção: " + status[1]);
				Timer();
				System.out.println(" ");

				condicao = false;
			} else {
				System.out.println("Você terá que refazer o desafio\n");
				status[0] = 100;
			}
		} while (condicao);

		System.out.print("\nAperte ENTER para começar o último Deafio");
		sc.nextLine();
		System.out.println(" ");

		do {
			status = Desafio3_Templo3(status);
			if (status[0] > 0) {
				System.out.println("\nVocê concluiu o último desafio!");
				Timer2();
				System.out.println("Parabéns, você ganhou uma Poção!");
				status[1]++;
				Timer2();
				System.out.println("HP: " + status[0]);
				Timer2();
				System.out.println("Poção: " + status[1]);
				Timer();
				System.out.println(" ");

				condicao = false;
			} else {
				System.out.println("Você terá que refazer o desafio\n");
				status[0] = 100;
			}
		} while (condicao);

		Timer();
		System.out.println("Você conseguiu concluiro o Templo das Conversões");
		Timer2();
		FormataTexto1("Você está preparado para o ");
		FormataTexto2("F I N A L ");
		FormataTexto2("B O S S ");
		FormataTexto2("? ? ?");
		System.out.println("\n");
		return status;
	}

	// DESAFIO É CONVERTER UM NÚMERO QUE ESTÁ EM UMA BASE PARA OUTRA
	static int[] Desafio1_Templo3(int[] status) {
		int baseInicial, baseConversao;
		String respostaCerta;

		String[] numeroInicial = new String[1];
		String[] opcoes = new String[5];
		ArrayList<String> respostaErrada = new ArrayList();

		////////////////////////////////////////////////////////////////////////
		// Area para preparar os numeros
		baseInicial = DeterminaBase_Templo3(); // Determinando a base standard

		do {
			baseConversao = DeterminaBase_Templo3(); // Determinando a base de conversao
		} while (baseConversao == baseInicial);

		numeroInicial[0] = DeterminaNumero_Templo3(baseInicial); // Determinando o numero standard

		respostaCerta = DeterminaNumeroConv_Templo3(numeroInicial, baseInicial, baseConversao); // Determinando o numero
																								// de conversao (certo)

		respostaErrada.add(respostaCerta); // Adicionando a resposta certa nas opcoes

		for (int i = 0; i < 4; i++) {
			respostaErrada.add(DeterminaOpcoes(baseConversao, respostaCerta)); // Adicionando opcoes erradas
		}

		Collections.shuffle(respostaErrada); // Embaralhando as opcoes para que haja uma aleatoriedade
		Collections.shuffle(respostaErrada);

		for (int i = 0; i < opcoes.length; i++) {
			opcoes[i] = respostaErrada.get(i); // Transferindo as opcoes do ArrayList para uma String[]
		}

		////////////////////////////////////////////////////////////////////////
		// Area de logica do game
		Texto_Formatado(Tabula1(4, "***\tWELCOME TO THE 1ST GAME\t***\n"));

		System.out.printf("\nConverta o numero %S que esta na base %d para a base %d\n\n", numeroInicial[0],
				baseInicial, baseConversao);
		Timer2();

		status = ProcessoAlternativas_Geral(opcoes, status, respostaCerta);

		return status;
	}

	// DESAFIO É SOMAR DOIS NÚMEROS QUE ESTÃO EM UMA BASE E CONVERTER PARA OUTRO
	static int[] Desafio2_Templo3(int[] status) {
		// Area para inicializar variaveis
		int baseInicial, baseConversao;
		String respostaCerta;

		String[] numeroInicial = new String[2];
		String[] opcoes = new String[5];
		ArrayList<String> respostaErrada = new ArrayList();
		////////////////////////////////////////////////////////////////////////
		// Area para declarar os numeros

		baseInicial = DeterminaBase_Templo3(); // Gerar a base standard

		do {
			baseConversao = DeterminaBase_Templo3(); // Gerar a base para conversao
		} while (baseConversao == baseInicial);

		numeroInicial[0] = DeterminaNumero_Templo3(baseInicial); // Gerar o numero standard A
		numeroInicial[1] = DeterminaNumero_Templo3(baseInicial); // Gerar o numero standard B

		respostaCerta = DeterminaNumeroConv_Templo3(numeroInicial, baseInicial, baseConversao); // Gerar a resposta
																								// certa

		respostaErrada.add(respostaCerta); // Adicionando a resposta certa no ArrayList

		for (int i = 0; i <= 3; i++) {
			respostaErrada.add(DeterminaOpcoes(baseConversao, respostaCerta)); // Criando respostas erradas para o
																				// ArrayList
		}

		Collections.shuffle(respostaErrada); // Embaralhando as opcoes
		Collections.shuffle(respostaErrada);

		for (int i = 0; i < opcoes.length; i++) {
			opcoes[i] = respostaErrada.get(i); // Adicionando as opcoes embaralhadas numa String para fazer o desafio
		}

		Texto_Formatado(Tabula1(4, "***\tWELCOME TO THE 2ND GAME\t***\n"));
		Timer2();
		System.out.printf("\nFaça a seguinte conversão:\n%S + %S (na base %d) = X (na base %d)\n\n", numeroInicial[0],
				numeroInicial[1], baseInicial, baseConversao);
		Timer2();

		ProcessoAlternativas_Geral(opcoes, status, respostaCerta);

		return status;
	}

	static int[] Desafio3_Templo3(int[] status) {
		// Area para declarar variaveis
		int baseInicial, baseConversao, aux;
		String respostaCerta;

		String[] numeroInicial = new String[2];
		String[] opcoes = new String[5];
		ArrayList<String> respostaErrada = new ArrayList();
		////////////////////////////////////////////////////////////////////////
		// Area para iniciar variaveis
		baseInicial = DeterminaBase_Templo3(); // Gerar a base inicial

		do {
			baseConversao = DeterminaBase_Templo3(); // Gerar a base para conversao
		} while (baseConversao == baseInicial);

		numeroInicial[0] = DeterminaNumero_Templo3(baseInicial); // Gerar numero standard A
		numeroInicial[1] = DeterminaNumero_Templo3(baseInicial); // Gerar numero standard B

		aux = (Integer.parseInt(numeroInicial[0], baseInicial)) * (Integer.parseInt(numeroInicial[1], baseInicial)); // Convertendo
																														// o
																														// produto
																														// dos
																														// numeros
																														// standard
																														// para
																														// int

		respostaCerta = Integer.toString(aux, baseConversao); // Convertendo o produto dos numeros standard para a base
																// de conversao

		respostaErrada.add(respostaCerta); // Adicionando a resposta certa nas opcoes

		for (int i = 0; i <= 3; i++) {
			respostaErrada.add(DeterminaOpcoes(baseConversao, respostaCerta)); // Adicionando as opcoes erradas
		}

		Collections.shuffle(respostaErrada); // Embaralhando as opcoes
		Collections.shuffle(respostaErrada);

		for (int i = 0; i < opcoes.length; i++) {
			opcoes[i] = respostaErrada.get(i);// Adicionando as opcoes em String para fazer o desafio
		}

		Texto_Formatado(Tabula1(4, "***\tWELCOME TO THE 3ND GAME\t***\n"));

		System.out.printf("\nFaça a seguinte conversão:\n%S * %S (na base %d) = X (na base %d)\n\n", numeroInicial[0],
				numeroInicial[1], baseInicial, baseConversao);
		Timer2();

		ProcessoAlternativas_Geral(opcoes, status, respostaCerta);

		return status;
	}

	// FUNÇÕES DO TEMPLO 3

	static int DeterminaBase_Templo3() {

		ArrayList<Integer> bases = new ArrayList();

		bases.add(2);
		bases.add(8);
		bases.add(10);
		bases.add(16);

		Collections.shuffle(bases);
		Collections.shuffle(bases);

		return bases.get(0);
	}

	static String DeterminaNumero_Templo3(int baseInicial) {

		Random dado = new Random();
		int numRandom;
		String baseAconv = null;

		do {
			numRandom = dado.nextInt(2000);
		} while (numRandom <= 50);

		switch (baseInicial) {
		case 2:
			baseAconv = Integer.toBinaryString(numRandom);
			break;
		case 8:
			baseAconv = Integer.toOctalString(numRandom);
			break;
		case 10:
			baseAconv = Integer.toString(numRandom);
			break;
		case 16:
			baseAconv = Integer.toHexString(numRandom);
			break;
		}

		return baseAconv;
	}

	static String DeterminaOpcoes(int baseConversao, String respostaCerta) {
		Random dado = new Random();
		int aux = Integer.parseInt(respostaCerta, baseConversao);
		String opcoesFalsas;

		do {
			aux = aux + dado.nextInt(30);
			aux = aux - 15;
			opcoesFalsas = Integer.toString(aux, baseConversao);
		} while (opcoesFalsas.equals(respostaCerta));

		return opcoesFalsas;
	}

	static String DeterminaNumeroConv_Templo3(String[] numeroInicial, int baseInicial, int baseConversao) {
		int aux = 0;
		String respostaConversao;

		for (int i = 0; i < numeroInicial.length; i++) {
			aux = aux + Integer.parseInt(numeroInicial[i], baseInicial);
		}

		respostaConversao = Integer.toString(aux, baseConversao);

		return respostaConversao;
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-05-29 20:57:42.431
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-05-29 20:57:42.432
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-05-29 20:58:11.031
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Scanner;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Random;

public class O_Jogo {

// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-VARIAVÉIS GLOBAIS-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
	public static Scanner entrada = new Scanner(System.in);
	public static String opcao = "";
	public static int dificuldade = 0;
	public static String nomeJogador = "";
	public static int thread1 = 1000;
	public static int thread2 = 0;
	public static int thread3 = 50;

	// CORES DO TEXTO
	public static final String RESET = "\u001B[30m";
	public static final String RED = "\u001B[31m";
	public static final String GREEN = "\u001B[32m";
	public static final String YELLOW = "\u001B[33m";
	public static final String BLUE = "\u001B[34m";
	public static final String MAGENTA = "\u001B[35m";
	public static final String CYAN = "\u001B[36m";
	public static final String WHITE = "\u001B[37m";

	// CORES DO FUNDO DO TEXTO
	public static final String RESET_BACKGROUND = "\u001B[0m";
	public static final String BLACK_BACKGROUND = "\u001B[40m";
	public static final String RED_BACKGROUND = "\u001B[41m";
	public static final String GREEN_BACKGROUND = "\u001B[42m";
	public static final String YELLOW_BACKGROUND = "\u001B[43m";
	public static final String BLUE_BACKGROUND = "\u001B[44m";
	public static final String PURPLE_BACKGROUND = "\u001B[45m";
	public static final String CYAN_BACKGROUND = "\u001B[46m";
	public static final String WHITE_BACKGROUND = "\u001B[47m";

// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-MAIN-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
	public static void main(String[] args) {

		boolean cond = true;
		int[] status = { 100, 2 };

		do {

			System.out.print(Tabula1(6, "---Menu---\n\n"));
			System.out.print(Tabula2(2, "[1] Intruções", 6, "[2] Jogar\n"));
			System.out.print(Tabula2(2, "[3] Créditos", 6, "[4] Sair\n"));

			String opcao_Menu = Option();

			switch (opcao_Menu) {

			case "1":
				Instruções();
				break;

			case "2":

				Jogar();
				Hist_1();
				ExecutaTemplo3(status);
				/*
				 * Templo_1(); Templo_2(); Templo_3(); Big_Boss();
				 */
				break;

			case "3":
				Créditos();
				break;

			case "4":

				cond = false;
				break;

			default:

				System.out.print(RED + Tabula1(6, "Opção não é válida!\n\n") + RESET);

			}

		} while (cond);

	}

// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-JOGO-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

	// PROCEDIMENTO PARA ARMAZENAR AS INFORMAÇÕES DAS INTRUÇÕES
	public static void Instruções() {

		System.out.print("\n");
		Texto_Formatado("\nO objetivo do jogo é auxiliar o jogador em alguns conhecimentos da matemática."
				+ " Ao longo da jornada, serão apresentados conteúdos sobre a matéria em questão e "
				+ "apresentadas perguntas ao jogador. O mesmo deverá selecionar as opções válidas para que ele possa"
				+ " avançar no jogo e a cada questão, o jogador sofrerá um dano se errar, diminuindo assim sua vida."
				+ " O objetivo final do jogador, é avançar por todos os templos para derrotar o último chefe, sem perder toda a sua vida.");
		System.out.print("\n");
		Sair();

	}

	// PROCEDIMENTO PARA FAZER A 1º CHAMADA DO JOGO, PARA COLETAR AS INFORMAÇÕES DO
	// NOME DO JOGADOR, A DIFICULDADE DO JOGO E A HISTÓRIA INICIAL
	public static void Jogar() {

		Texto_Formatado(Tabula1(4, "---Escolha a sua dificuldade de jogo---\n\n")
				+ Tabula3(1, "[1] Fácil", 3, "[2] Normal", 3, "[3] Difícil"));

		boolean cond = true;

		do {

			String opcao_Menu = Option();
			switch (opcao_Menu) {

			case "1":
				dificuldade = 1;
				cond = false;
				break;

			case "2":
				dificuldade = 2;
				cond = false;
				break;

			case "3":
				dificuldade = 3;
				cond = false;
				break;

			default:
				System.out.print(RED + Tabula1(6, "Opção não é válida!\n\n") + RESET);

			}
		} while (cond);

		Texto_Formatado(Tabula1(4, "   ---Escolha o nome do seu jogador---"));
		nomeJogador = Option();

		boolean cond2 = true;
		do {

			Texto_Formatado(Tabula1(4,
					"---Você deseja que o nome do seu jogador seja " + RED + nomeJogador + RESET + " ?---\n\n")
					+ Tabula2(4, GREEN + "[S]" + RESET, 6, RED + "[N]" + RESET));
			String opcao_Menu = Option();

			switch (opcao_Menu.toUpperCase()) {
			case "S":
				cond2 = false;
				break;
			case "N":
				Texto_Formatado(Tabula1(4, "---Escolha o nome do seu jogador---"));
				nomeJogador = Option();
				break;
			default:
				System.out.print(RED + Tabula1(6, "Opção não é válida!\n\n") + RESET);
			}
		} while (cond2);

	}

	// PROCEDIMENTO PARA ARMAZENAR AS INFORMAÇÕES DOS CRÉDITOS
	public static void Créditos() {

		System.out.print("\n");
		Texto_Formatado("\n-Gustavo Tozeti\n\t\t-Matheus Cavalcanti\n\t\t\t-Renan Kesper");
		System.out.print("\n");
		Sair();

	}

	public static void Hist_1() {

		System.out.print("\n");
		
		Texto_Formatado(BLUE
				+ "\n\"Reza a lenda que Ariandre era um lugar próspero, cheio de magia e encanto, onde todos os seres viviam em harmonia e em paz. Um lugar tão belo,"					//TEXTO LIDO PELO PERSONAGEM
				+ " que a matemática era a base de força para grandes magos. Mas isso é claro, antes do grande acontecimento. . .Ninguém sabe ao certo, nem ao menos como,"				
				+ " mas naquela tarde esse lugar tão calmo e pleno, foi reduzido a cinzas e escombros, uma enorme escuridão pairou pelos céus e tomou Ariandre por inteiro "			
				+ "e com um simples clarão. . .tudo foi destruído. Após momentos agoniantes, enfim o motivo disso tudo. . .sim, ele que era apenas uma fábula de centenas de "			
				+ "anos, de contos muito antigos, enfim ressurgiu..."+ RESET + RED + "Ancelot" + BLUE + " tinha despertado. O grande rei demônio estava presente novamente, "			
				+ "para aprisionar toda a matemática de Ariandre e ser o detentor de toda a magia. Já se passaram alguns meses depois disso tudo, mas agora espero "					
				+ "ter forças para enfrentá-lo, mas a cada dia que se passa nessas catedrais do abismo perco mais e mais da minha sanidade. Talvez eu seja a última esperança "			
				+ "de Ariandre, mas caso alguém esteja lendo isso, significa que Ancelot venceu e Ariandre para sempre estará sob o seu domínio.\"" + RESET); 	//TEXTO LIDO PELO PERSONAGEM
				
				+
Dialogo(nomeJogador) +  GREEN + "\nMas...mas como? Meses? Estava tudo certo, ele estava em minhas mãos, como foi tudo isso desmoronar. Minha "					//FALA DO PERSONAGEM
				+ "cabeça dói, são memórias que me vem, mas o que será que aconteceu? Por que eu estou nas catedrais e porque Ariandre está destruída? Será isso um sonho?"
				+ "\n\nEu preciso descobrir o que aconteceu, mas me sinto estranho. Parece que não tenho mais meus poderes. Será que eu consigo canalizar algo??");
		
		System.out.print("\n");

	}
// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-FERRAMENTAS-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

	// PROCEDIMENTO CRIADO PARA FORMATAR QUALQUER TEXTO, PARA PADRONIZAR O LAYOUT DA
	// MENSAGEM COM BASE EM UM VALOR PRÉ DETERMINADO
	public static void Texto_Formatado(String frase) {

		String texto = frase;
		String[] palavras = texto.split(" ");

		int contadorQntLetras = 0;
		int limiteLinha = 140;

		for (int i = 0; i < limiteLinha; i++) {
			System.out.print(RED + "=" + RESET);
		}
		System.out.print("\n");

		for (String palavra : palavras) {

			if (contadorQntLetras + palavra.length() >= limiteLinha) {
				contadorQntLetras = 0;
				System.out.print("\n");
			}

			System.out.print(palavra + " ");
			Timer2();
			contadorQntLetras += palavra.length() + 1;
		}
		System.out.println("\n");

		for (int i = 0; i < limiteLinha; i++) {
			System.out.print(RED + "=" + RESET);
		}

	}

	// PROCEDIMENTO CRIADO PARA TABULAR QUALQUER TEXTO, PARA PADRONIZAR O LAYOUT DA
	// MENSAGEM
	public static String Tabula1(int t, String s) {

		String tab = "\t";
		String frase = "";
		for (int i = 0; i <= t; i++) {
			frase += tab;
		}
		frase += s;

		return frase;
	}

	public static String Tabula2(int t, String s, int tt, String ss) {

		String tab = "\t";
		String frase = "";

		for (int i = 0; i <= t; i++) {
			frase += tab;
		}
		frase += s;
		for (int i = 0; i <= tt; i++) {
			frase += tab;
		}
		frase += ss;
		return frase;
	}

	public static String Tabula3(int t, String s, int tt, String ss, int ttt, String sss) {

		String tab = "\t";
		String frase = "";

		for (int i = 0; i <= t; i++) {
			frase += tab;
		}
		frase += s;
		for (int i = 0; i <= tt; i++) {
			frase += tab;
		}
		frase += ss;
		for (int i = 0; i <= ttt; i++) {
			frase += tab;
		}
		frase += sss;
		return frase;
	}

	// FUNÇÃO CRIADA PARA RETONAR UMA OPÇÃO DESEJADA DO USUÁRIO
	public static String Option() {
		System.out.print(BLACK_BACKGROUND + WHITE + "\n***Digite sua opção:" + RESET + RESET_BACKGROUND + " ");
		opcao = entrada.next();
		System.out.print("\n");
		return opcao;
	}

	public static String Dialogo(String Nome) {
		String texto = "\n\n" + BLACK_BACKGROUND + GREEN + "- "+Nome+":" + RESET + RESET_BACKGROUND;
		return texto;
		}
	
	// PROCEDIMENTO CRIADO PARA SAIR DE UMA OPÇÃO DE UM MENU
	public static void Sair() {
		Scanner sc = new Scanner(System.in);
		System.out.print("\nPressione a tecla ENTER para voltar!\n");
		sc.nextLine();
		System.out.println(" ");
	}

	static int DanoRespostaErrada(int healthPoints) {
		Random dado = new Random();
		int jogada;

		System.out.println("\nA resposta está...");
		Timer();
		System.out.println("...");
		Timer();
		System.out.println("...");
		Timer();
		System.out.println(RED + "Errada :(" + RESET);
		System.out.println("\nAgora iremos jogar o dado para saber quanto de dano você irá tomar.");
		System.out.println("O número que caiu no dado é...");
		Timer();
		System.out.println("...");
		Timer();
		System.out.println("...");
		Timer();

		jogada = dado.nextInt(20) + 1;

		System.out.printf("**\t%d\t**\n", jogada);

		if (jogada <= 5) {
			System.out.println("Parece que você deu sorte e se esquivou do dano.");
		} else if (jogada > 5 && jogada <= 15) {
			System.out.println("Você levou 20 de dano");
			healthPoints = healthPoints - (20 + (5 * dificuldade));
		} else if (jogada > 15) {
			System.out.println("Você tomou dano crítico!");
			healthPoints = healthPoints - (30 + (5 * dificuldade));
		}

		System.out.printf("Total HP: %d\n\n", healthPoints);
		return healthPoints;
	}

	static void GameOver() {
		System.out.println("Seu HP chegou a 0");

		String game = "G A M E";
		String over = "O V E R";

		FormataTexto2(game);
		FormataTexto2(over);

		System.out.println("\n");
	}

	static int[] UsePotion(int healthPoints, int qntPotions) {

		Scanner input = new Scanner(System.in);
		boolean condicao = true;
		char opcao = 0;
		int[] status = new int[2];

		System.out.printf("HP atual: %d\nQuantidade de potions: %d\n\n", healthPoints, qntPotions);

		do {
			try {
				System.out.println("Você tem certeza que quer usar uma potion?\n" + GREEN + "[S]" + RESET + " ou " + RED
						+ "[N]\n" + RESET);
				System.out.print("Escolha: ");
				opcao = input.next().toUpperCase().charAt(0);
			} catch (Exception e) {
				System.out.println("Caracter invalido.");
			}

			if (qntPotions > 0) {
				switch (opcao) {
				case 'S':
					healthPoints = healthPoints + 20;
					qntPotions--;

					if (healthPoints > 100) {
						do {
							healthPoints--;
						} while (healthPoints != 100);
					}
					System.out.println("Você usou uma potion.");
					System.out.printf("Quantidade potions: %d\n", qntPotions);
					System.out.printf("Total HP: %d\n\n", healthPoints);
					condicao = false;
					break;
				case 'N':
					System.out.println("Você guardou a potion de volta na bolsa\n");
					condicao = false;
					break;
				}
			} else {
				System.out.println("Você não tem potions");
				condicao = false;
			}

		} while (condicao);

		status[0] = healthPoints;
		status[1] = qntPotions;

		return status;
	}

	static void Timer() {
		try {
			Thread.sleep(thread1);
		} catch (Exception e) {

		}
	}

	static void Timer2() {
		try {
			Thread.sleep(thread2);
		} catch (Exception e) {

		}
	}

	static void Timer3() {
		try {
			Thread.sleep(thread3);
		} catch (Exception e) {

		}
	}

	static void AcertouResposta(int healthPoints) {
		System.out.println("\nA resposta está...");
		Timer();
		System.out.println("...");
		Timer();
		System.out.println("...");
		Timer();
		System.out.println(GREEN + "Certa! :D\n" + RESET);

		if (healthPoints >= 30 && healthPoints < 65) {
			System.out.println("Parece que foi um desafio para você.");
		}
		if (healthPoints < 30) {
			System.out.println("Foi por pouco que você conseguiu passar!");
		}

	}

	static int[] ProcessoAlternativas_Geral(String[] opcoes, int[] status, String respostaCerta) {
		// Area para declarar variaveis
		Scanner sc = new Scanner(System.in);
		String resposta;
		boolean condicao = true;

		System.out.printf("[ A ] %S\n", opcoes[0]);
		Timer2();
		System.out.printf("[ B ] %S\n", opcoes[1]);
		Timer2();
		System.out.printf("[ C ] %S\n", opcoes[2]);
		Timer2();
		System.out.printf("[ D ] %S\n", opcoes[3]);
		Timer2();
		System.out.printf("[ E ] %S\n\n", opcoes[4]);
		Timer2();
		System.out.println("Resposta certa: " + respostaCerta.toUpperCase());
		Timer2();

		////////////////////////////////////////////////////////////////////////
		// Area para processo de alternativas
		do {

			resposta = Option().toUpperCase();
			if (status[0] <= 0) {
				GameOver();
				condicao = false;
			}

			switch (resposta.charAt(0)) {
			case 'A':
				if (opcoes[0].equals(respostaCerta)) {
					AcertouResposta(status[0]);
					condicao = false;
				} else {
					status[0] = DanoRespostaErrada(status[0]);
					if (status[0] <= 0) {
						GameOver();
						condicao = false;
					}
				}
				break;
			case 'B':
				if (opcoes[1].equals(respostaCerta)) {
					AcertouResposta(status[0]);
					condicao = false;
				} else {
					status[0] = DanoRespostaErrada(status[0]);
					if (status[0] <= 0) {
						GameOver();
						condicao = false;
					}
				}
				break;

			case 'C':
				if (opcoes[2].equals(respostaCerta)) {
					AcertouResposta(status[0]);
					condicao = false;
				} else {
					status[0] = DanoRespostaErrada(status[0]);
					if (status[0] <= 0) {
						GameOver();
						condicao = false;
					}
				}
				break;
			case 'D':
				if (opcoes[3].equals(respostaCerta)) {
					AcertouResposta(status[0]);
					condicao = false;
				} else {
					status[0] = DanoRespostaErrada(status[0]);
					if (status[0] <= 0) {
						GameOver();
						condicao = false;
					}
				}
				break;
			case 'E':
				if (opcoes[4].equals(respostaCerta)) {
					AcertouResposta(status[0]);
					condicao = false;
				} else {
					status[0] = DanoRespostaErrada(status[0]);
					if (status[0] <= 0) {
						GameOver();
						condicao = false;
					}
				}
				break;
			case 'P':
				status = UsePotion(status[0], status[1]);
			}
		} while (condicao);

		return status;
	}

	static void FormataTexto1(String frase) {

		String[] palavra = frase.split(" ");

		for (String each : palavra) {
			System.out.print(each + " ");
			Timer2();
		}
	}

	static void FormataTexto2(String frase) {

		String[] palavra = frase.split(" ");

		for (String each : palavra) {
			System.out.print(each);
			Timer2();
		}

		System.out.print(" ");
	}

// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-TEMPLOS-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

	// TEMPLO 3
	static int[] ExecutaTemplo3(int[] status) {
		Scanner sc = new Scanner(System.in);
		boolean condicao = true;

		do {
			status = Desafio1_Templo3(status);
			if (status[0] > 0) {
				System.out.println("\nVocê concluiu o primeiro desafio!");
				Timer2();
				System.out.println("Parabéns, você ganhou uma Poção!");
				status[1]++;
				Timer2();
				System.out.println("HP: " + status[0]);
				Timer2();
				System.out.println("Poção: " + status[1]);
				Timer();
				System.out.println(" ");

				condicao = false;
			} else {
				System.out.println("Você terá que refazer o desafio\n");
				status[0] = 100;
			}
		} while (condicao);

		System.out.print("\nAperte ENTER para começar o segundo Deafio");
		sc.nextLine();
		System.out.println(" ");

		do {
			status = Desafio2_Templo3(status);
			if (status[0] > 0) {
				System.out.println("\nVocê concluiu o segundo desafio!");
				Timer2();
				System.out.println("Parabéns, você ganhou uma Poção!");
				status[1]++;
				Timer2();
				System.out.println("HP: " + status[0]);
				Timer2();
				System.out.println("Poção: " + status[1]);
				Timer();
				System.out.println(" ");

				condicao = false;
			} else {
				System.out.println("Você terá que refazer o desafio\n");
				status[0] = 100;
			}
		} while (condicao);

		System.out.print("\nAperte ENTER para começar o último Deafio");
		sc.nextLine();
		System.out.println(" ");

		do {
			status = Desafio3_Templo3(status);
			if (status[0] > 0) {
				System.out.println("\nVocê concluiu o último desafio!");
				Timer2();
				System.out.println("Parabéns, você ganhou uma Poção!");
				status[1]++;
				Timer2();
				System.out.println("HP: " + status[0]);
				Timer2();
				System.out.println("Poção: " + status[1]);
				Timer();
				System.out.println(" ");

				condicao = false;
			} else {
				System.out.println("Você terá que refazer o desafio\n");
				status[0] = 100;
			}
		} while (condicao);

		Timer();
		System.out.println("Você conseguiu concluiro o Templo das Conversões");
		Timer2();
		FormataTexto1("Você está preparado para o ");
		FormataTexto2("F I N A L ");
		FormataTexto2("B O S S ");
		FormataTexto2("? ? ?");
		System.out.println("\n");
		return status;
	}

	// DESAFIO É CONVERTER UM NÚMERO QUE ESTÁ EM UMA BASE PARA OUTRA
	static int[] Desafio1_Templo3(int[] status) {
		int baseInicial, baseConversao;
		String respostaCerta;

		String[] numeroInicial = new String[1];
		String[] opcoes = new String[5];
		ArrayList<String> respostaErrada = new ArrayList();

		////////////////////////////////////////////////////////////////////////
		// Area para preparar os numeros
		baseInicial = DeterminaBase_Templo3(); // Determinando a base standard

		do {
			baseConversao = DeterminaBase_Templo3(); // Determinando a base de conversao
		} while (baseConversao == baseInicial);

		numeroInicial[0] = DeterminaNumero_Templo3(baseInicial); // Determinando o numero standard

		respostaCerta = DeterminaNumeroConv_Templo3(numeroInicial, baseInicial, baseConversao); // Determinando o numero
																								// de conversao (certo)

		respostaErrada.add(respostaCerta); // Adicionando a resposta certa nas opcoes

		for (int i = 0; i < 4; i++) {
			respostaErrada.add(DeterminaOpcoes(baseConversao, respostaCerta)); // Adicionando opcoes erradas
		}

		Collections.shuffle(respostaErrada); // Embaralhando as opcoes para que haja uma aleatoriedade
		Collections.shuffle(respostaErrada);

		for (int i = 0; i < opcoes.length; i++) {
			opcoes[i] = respostaErrada.get(i); // Transferindo as opcoes do ArrayList para uma String[]
		}

		////////////////////////////////////////////////////////////////////////
		// Area de logica do game
		Texto_Formatado(Tabula1(4, "***\tWELCOME TO THE 1ST GAME\t***\n"));

		System.out.printf("\nConverta o numero %S que esta na base %d para a base %d\n\n", numeroInicial[0],
				baseInicial, baseConversao);
		Timer2();

		status = ProcessoAlternativas_Geral(opcoes, status, respostaCerta);

		return status;
	}

	// DESAFIO É SOMAR DOIS NÚMEROS QUE ESTÃO EM UMA BASE E CONVERTER PARA OUTRO
	static int[] Desafio2_Templo3(int[] status) {
		// Area para inicializar variaveis
		int baseInicial, baseConversao;
		String respostaCerta;

		String[] numeroInicial = new String[2];
		String[] opcoes = new String[5];
		ArrayList<String> respostaErrada = new ArrayList();
		////////////////////////////////////////////////////////////////////////
		// Area para declarar os numeros

		baseInicial = DeterminaBase_Templo3(); // Gerar a base standard

		do {
			baseConversao = DeterminaBase_Templo3(); // Gerar a base para conversao
		} while (baseConversao == baseInicial);

		numeroInicial[0] = DeterminaNumero_Templo3(baseInicial); // Gerar o numero standard A
		numeroInicial[1] = DeterminaNumero_Templo3(baseInicial); // Gerar o numero standard B

		respostaCerta = DeterminaNumeroConv_Templo3(numeroInicial, baseInicial, baseConversao); // Gerar a resposta
																								// certa

		respostaErrada.add(respostaCerta); // Adicionando a resposta certa no ArrayList

		for (int i = 0; i <= 3; i++) {
			respostaErrada.add(DeterminaOpcoes(baseConversao, respostaCerta)); // Criando respostas erradas para o
																				// ArrayList
		}

		Collections.shuffle(respostaErrada); // Embaralhando as opcoes
		Collections.shuffle(respostaErrada);

		for (int i = 0; i < opcoes.length; i++) {
			opcoes[i] = respostaErrada.get(i); // Adicionando as opcoes embaralhadas numa String para fazer o desafio
		}

		Texto_Formatado(Tabula1(4, "***\tWELCOME TO THE 2ND GAME\t***\n"));
		Timer2();
		System.out.printf("\nFaça a seguinte conversão:\n%S + %S (na base %d) = X (na base %d)\n\n", numeroInicial[0],
				numeroInicial[1], baseInicial, baseConversao);
		Timer2();

		ProcessoAlternativas_Geral(opcoes, status, respostaCerta);

		return status;
	}

	static int[] Desafio3_Templo3(int[] status) {
		// Area para declarar variaveis
		int baseInicial, baseConversao, aux;
		String respostaCerta;

		String[] numeroInicial = new String[2];
		String[] opcoes = new String[5];
		ArrayList<String> respostaErrada = new ArrayList();
		////////////////////////////////////////////////////////////////////////
		// Area para iniciar variaveis
		baseInicial = DeterminaBase_Templo3(); // Gerar a base inicial

		do {
			baseConversao = DeterminaBase_Templo3(); // Gerar a base para conversao
		} while (baseConversao == baseInicial);

		numeroInicial[0] = DeterminaNumero_Templo3(baseInicial); // Gerar numero standard A
		numeroInicial[1] = DeterminaNumero_Templo3(baseInicial); // Gerar numero standard B

		aux = (Integer.parseInt(numeroInicial[0], baseInicial)) * (Integer.parseInt(numeroInicial[1], baseInicial)); // Convertendo
																														// o
																														// produto
																														// dos
																														// numeros
																														// standard
																														// para
																														// int

		respostaCerta = Integer.toString(aux, baseConversao); // Convertendo o produto dos numeros standard para a base
																// de conversao

		respostaErrada.add(respostaCerta); // Adicionando a resposta certa nas opcoes

		for (int i = 0; i <= 3; i++) {
			respostaErrada.add(DeterminaOpcoes(baseConversao, respostaCerta)); // Adicionando as opcoes erradas
		}

		Collections.shuffle(respostaErrada); // Embaralhando as opcoes
		Collections.shuffle(respostaErrada);

		for (int i = 0; i < opcoes.length; i++) {
			opcoes[i] = respostaErrada.get(i);// Adicionando as opcoes em String para fazer o desafio
		}

		Texto_Formatado(Tabula1(4, "***\tWELCOME TO THE 3ND GAME\t***\n"));

		System.out.printf("\nFaça a seguinte conversão:\n%S * %S (na base %d) = X (na base %d)\n\n", numeroInicial[0],
				numeroInicial[1], baseInicial, baseConversao);
		Timer2();

		ProcessoAlternativas_Geral(opcoes, status, respostaCerta);

		return status;
	}

	// FUNÇÕES DO TEMPLO 3

	static int DeterminaBase_Templo3() {

		ArrayList<Integer> bases = new ArrayList();

		bases.add(2);
		bases.add(8);
		bases.add(10);
		bases.add(16);

		Collections.shuffle(bases);
		Collections.shuffle(bases);

		return bases.get(0);
	}

	static String DeterminaNumero_Templo3(int baseInicial) {

		Random dado = new Random();
		int numRandom;
		String baseAconv = null;

		do {
			numRandom = dado.nextInt(2000);
		} while (numRandom <= 50);

		switch (baseInicial) {
		case 2:
			baseAconv = Integer.toBinaryString(numRandom);
			break;
		case 8:
			baseAconv = Integer.toOctalString(numRandom);
			break;
		case 10:
			baseAconv = Integer.toString(numRandom);
			break;
		case 16:
			baseAconv = Integer.toHexString(numRandom);
			break;
		}

		return baseAconv;
	}

	static String DeterminaOpcoes(int baseConversao, String respostaCerta) {
		Random dado = new Random();
		int aux = Integer.parseInt(respostaCerta, baseConversao);
		String opcoesFalsas;

		do {
			aux = aux + dado.nextInt(30);
			aux = aux - 15;
			opcoesFalsas = Integer.toString(aux, baseConversao);
		} while (opcoesFalsas.equals(respostaCerta));

		return opcoesFalsas;
	}

	static String DeterminaNumeroConv_Templo3(String[] numeroInicial, int baseInicial, int baseConversao) {
		int aux = 0;
		String respostaConversao;

		for (int i = 0; i < numeroInicial.length; i++) {
			aux = aux + Integer.parseInt(numeroInicial[i], baseInicial);
		}

		respostaConversao = Integer.toString(aux, baseConversao);

		return respostaConversao;
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-05-29 20:58:11.032
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-05-29 20:58:11.032
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-05-29 20:58:12.049
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Scanner;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Random;

public class O_Jogo {

// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-VARIAVÉIS GLOBAIS-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
	public static Scanner entrada = new Scanner(System.in);
	public static String opcao = "";
	public static int dificuldade = 0;
	public static String nomeJogador = "";
	public static int thread1 = 1000;
	public static int thread2 = 0;
	public static int thread3 = 50;

	// CORES DO TEXTO
	public static final String RESET = "\u001B[30m";
	public static final String RED = "\u001B[31m";
	public static final String GREEN = "\u001B[32m";
	public static final String YELLOW = "\u001B[33m";
	public static final String BLUE = "\u001B[34m";
	public static final String MAGENTA = "\u001B[35m";
	public static final String CYAN = "\u001B[36m";
	public static final String WHITE = "\u001B[37m";

	// CORES DO FUNDO DO TEXTO
	public static final String RESET_BACKGROUND = "\u001B[0m";
	public static final String BLACK_BACKGROUND = "\u001B[40m";
	public static final String RED_BACKGROUND = "\u001B[41m";
	public static final String GREEN_BACKGROUND = "\u001B[42m";
	public static final String YELLOW_BACKGROUND = "\u001B[43m";
	public static final String BLUE_BACKGROUND = "\u001B[44m";
	public static final String PURPLE_BACKGROUND = "\u001B[45m";
	public static final String CYAN_BACKGROUND = "\u001B[46m";
	public static final String WHITE_BACKGROUND = "\u001B[47m";

// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-MAIN-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
	public static void main(String[] args) {

		boolean cond = true;
		int[] status = { 100, 2 };

		do {

			System.out.print(Tabula1(6, "---Menu---\n\n"));
			System.out.print(Tabula2(2, "[1] Intruções", 6, "[2] Jogar\n"));
			System.out.print(Tabula2(2, "[3] Créditos", 6, "[4] Sair\n"));

			String opcao_Menu = Option();

			switch (opcao_Menu) {

			case "1":
				Instruções();
				break;

			case "2":

				Jogar();
				Hist_1();
				ExecutaTemplo3(status);
				/*
				 * Templo_1(); Templo_2(); Templo_3(); Big_Boss();
				 */
				break;

			case "3":
				Créditos();
				break;

			case "4":

				cond = false;
				break;

			default:

				System.out.print(RED + Tabula1(6, "Opção não é válida!\n\n") + RESET);

			}

		} while (cond);

	}

// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-JOGO-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

	// PROCEDIMENTO PARA ARMAZENAR AS INFORMAÇÕES DAS INTRUÇÕES
	public static void Instruções() {

		System.out.print("\n");
		Texto_Formatado("\nO objetivo do jogo é auxiliar o jogador em alguns conhecimentos da matemática."
				+ " Ao longo da jornada, serão apresentados conteúdos sobre a matéria em questão e "
				+ "apresentadas perguntas ao jogador. O mesmo deverá selecionar as opções válidas para que ele possa"
				+ " avançar no jogo e a cada questão, o jogador sofrerá um dano se errar, diminuindo assim sua vida."
				+ " O objetivo final do jogador, é avançar por todos os templos para derrotar o último chefe, sem perder toda a sua vida.");
		System.out.print("\n");
		Sair();

	}

	// PROCEDIMENTO PARA FAZER A 1º CHAMADA DO JOGO, PARA COLETAR AS INFORMAÇÕES DO
	// NOME DO JOGADOR, A DIFICULDADE DO JOGO E A HISTÓRIA INICIAL
	public static void Jogar() {

		Texto_Formatado(Tabula1(4, "---Escolha a sua dificuldade de jogo---\n\n")
				+ Tabula3(1, "[1] Fácil", 3, "[2] Normal", 3, "[3] Difícil"));

		boolean cond = true;

		do {

			String opcao_Menu = Option();
			switch (opcao_Menu) {

			case "1":
				dificuldade = 1;
				cond = false;
				break;

			case "2":
				dificuldade = 2;
				cond = false;
				break;

			case "3":
				dificuldade = 3;
				cond = false;
				break;

			default:
				System.out.print(RED + Tabula1(6, "Opção não é válida!\n\n") + RESET);

			}
		} while (cond);

		Texto_Formatado(Tabula1(4, "   ---Escolha o nome do seu jogador---"));
		nomeJogador = Option();

		boolean cond2 = true;
		do {

			Texto_Formatado(Tabula1(4,
					"---Você deseja que o nome do seu jogador seja " + RED + nomeJogador + RESET + " ?---\n\n")
					+ Tabula2(4, GREEN + "[S]" + RESET, 6, RED + "[N]" + RESET));
			String opcao_Menu = Option();

			switch (opcao_Menu.toUpperCase()) {
			case "S":
				cond2 = false;
				break;
			case "N":
				Texto_Formatado(Tabula1(4, "---Escolha o nome do seu jogador---"));
				nomeJogador = Option();
				break;
			default:
				System.out.print(RED + Tabula1(6, "Opção não é válida!\n\n") + RESET);
			}
		} while (cond2);

	}

	// PROCEDIMENTO PARA ARMAZENAR AS INFORMAÇÕES DOS CRÉDITOS
	public static void Créditos() {

		System.out.print("\n");
		Texto_Formatado("\n-Gustavo Tozeti\n\t\t-Matheus Cavalcanti\n\t\t\t-Renan Kesper");
		System.out.print("\n");
		Sair();

	}

	public static void Hist_1() {

		System.out.print("\n");
		
		Texto_Formatado(BLUE
				+ "\n\"Reza a lenda que Ariandre era um lugar próspero, cheio de magia e encanto, onde todos os seres viviam em harmonia e em paz. Um lugar tão belo,"					//TEXTO LIDO PELO PERSONAGEM
				+ " que a matemática era a base de força para grandes magos. Mas isso é claro, antes do grande acontecimento. . .Ninguém sabe ao certo, nem ao menos como,"				
				+ " mas naquela tarde esse lugar tão calmo e pleno, foi reduzido a cinzas e escombros, uma enorme escuridão pairou pelos céus e tomou Ariandre por inteiro "			
				+ "e com um simples clarão. . .tudo foi destruído. Após momentos agoniantes, enfim o motivo disso tudo. . .sim, ele que era apenas uma fábula de centenas de "			
				+ "anos, de contos muito antigos, enfim ressurgiu..."+ RESET + RED + "Ancelot" + BLUE + " tinha despertado. O grande rei demônio estava presente novamente, "			
				+ "para aprisionar toda a matemática de Ariandre e ser o detentor de toda a magia. Já se passaram alguns meses depois disso tudo, mas agora espero "					
				+ "ter forças para enfrentá-lo, mas a cada dia que se passa nessas catedrais do abismo perco mais e mais da minha sanidade. Talvez eu seja a última esperança "			
				+ "de Ariandre, mas caso alguém esteja lendo isso, significa que Ancelot venceu e Ariandre para sempre estará sob o seu domínio.\"" + RESET); 	//TEXTO LIDO PELO PERSONAGEM
				
				+
				Dialogo(nomeJogador) +  GREEN + "\nMas...mas como? Meses? Estava tudo certo, ele estava em minhas mãos, como foi tudo isso desmoronar. Minha "					//FALA DO PERSONAGEM
				+ "cabeça dói, são memórias que me vem, mas o que será que aconteceu? Por que eu estou nas catedrais e porque Ariandre está destruída? Será isso um sonho?"
				+ "\n\nEu preciso descobrir o que aconteceu, mas me sinto estranho. Parece que não tenho mais meus poderes. Será que eu consigo canalizar algo??");
		
		System.out.print("\n");

	}
// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-FERRAMENTAS-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

	// PROCEDIMENTO CRIADO PARA FORMATAR QUALQUER TEXTO, PARA PADRONIZAR O LAYOUT DA
	// MENSAGEM COM BASE EM UM VALOR PRÉ DETERMINADO
	public static void Texto_Formatado(String frase) {

		String texto = frase;
		String[] palavras = texto.split(" ");

		int contadorQntLetras = 0;
		int limiteLinha = 140;

		for (int i = 0; i < limiteLinha; i++) {
			System.out.print(RED + "=" + RESET);
		}
		System.out.print("\n");

		for (String palavra : palavras) {

			if (contadorQntLetras + palavra.length() >= limiteLinha) {
				contadorQntLetras = 0;
				System.out.print("\n");
			}

			System.out.print(palavra + " ");
			Timer2();
			contadorQntLetras += palavra.length() + 1;
		}
		System.out.println("\n");

		for (int i = 0; i < limiteLinha; i++) {
			System.out.print(RED + "=" + RESET);
		}

	}

	// PROCEDIMENTO CRIADO PARA TABULAR QUALQUER TEXTO, PARA PADRONIZAR O LAYOUT DA
	// MENSAGEM
	public static String Tabula1(int t, String s) {

		String tab = "\t";
		String frase = "";
		for (int i = 0; i <= t; i++) {
			frase += tab;
		}
		frase += s;

		return frase;
	}

	public static String Tabula2(int t, String s, int tt, String ss) {

		String tab = "\t";
		String frase = "";

		for (int i = 0; i <= t; i++) {
			frase += tab;
		}
		frase += s;
		for (int i = 0; i <= tt; i++) {
			frase += tab;
		}
		frase += ss;
		return frase;
	}

	public static String Tabula3(int t, String s, int tt, String ss, int ttt, String sss) {

		String tab = "\t";
		String frase = "";

		for (int i = 0; i <= t; i++) {
			frase += tab;
		}
		frase += s;
		for (int i = 0; i <= tt; i++) {
			frase += tab;
		}
		frase += ss;
		for (int i = 0; i <= ttt; i++) {
			frase += tab;
		}
		frase += sss;
		return frase;
	}

	// FUNÇÃO CRIADA PARA RETONAR UMA OPÇÃO DESEJADA DO USUÁRIO
	public static String Option() {
		System.out.print(BLACK_BACKGROUND + WHITE + "\n***Digite sua opção:" + RESET + RESET_BACKGROUND + " ");
		opcao = entrada.next();
		System.out.print("\n");
		return opcao;
	}

	public static String Dialogo(String Nome) {
		String texto = "\n\n" + BLACK_BACKGROUND + GREEN + "- "+Nome+":" + RESET + RESET_BACKGROUND;
		return texto;
		}
	
	// PROCEDIMENTO CRIADO PARA SAIR DE UMA OPÇÃO DE UM MENU
	public static void Sair() {
		Scanner sc = new Scanner(System.in);
		System.out.print("\nPressione a tecla ENTER para voltar!\n");
		sc.nextLine();
		System.out.println(" ");
	}

	static int DanoRespostaErrada(int healthPoints) {
		Random dado = new Random();
		int jogada;

		System.out.println("\nA resposta está...");
		Timer();
		System.out.println("...");
		Timer();
		System.out.println("...");
		Timer();
		System.out.println(RED + "Errada :(" + RESET);
		System.out.println("\nAgora iremos jogar o dado para saber quanto de dano você irá tomar.");
		System.out.println("O número que caiu no dado é...");
		Timer();
		System.out.println("...");
		Timer();
		System.out.println("...");
		Timer();

		jogada = dado.nextInt(20) + 1;

		System.out.printf("**\t%d\t**\n", jogada);

		if (jogada <= 5) {
			System.out.println("Parece que você deu sorte e se esquivou do dano.");
		} else if (jogada > 5 && jogada <= 15) {
			System.out.println("Você levou 20 de dano");
			healthPoints = healthPoints - (20 + (5 * dificuldade));
		} else if (jogada > 15) {
			System.out.println("Você tomou dano crítico!");
			healthPoints = healthPoints - (30 + (5 * dificuldade));
		}

		System.out.printf("Total HP: %d\n\n", healthPoints);
		return healthPoints;
	}

	static void GameOver() {
		System.out.println("Seu HP chegou a 0");

		String game = "G A M E";
		String over = "O V E R";

		FormataTexto2(game);
		FormataTexto2(over);

		System.out.println("\n");
	}

	static int[] UsePotion(int healthPoints, int qntPotions) {

		Scanner input = new Scanner(System.in);
		boolean condicao = true;
		char opcao = 0;
		int[] status = new int[2];

		System.out.printf("HP atual: %d\nQuantidade de potions: %d\n\n", healthPoints, qntPotions);

		do {
			try {
				System.out.println("Você tem certeza que quer usar uma potion?\n" + GREEN + "[S]" + RESET + " ou " + RED
						+ "[N]\n" + RESET);
				System.out.print("Escolha: ");
				opcao = input.next().toUpperCase().charAt(0);
			} catch (Exception e) {
				System.out.println("Caracter invalido.");
			}

			if (qntPotions > 0) {
				switch (opcao) {
				case 'S':
					healthPoints = healthPoints + 20;
					qntPotions--;

					if (healthPoints > 100) {
						do {
							healthPoints--;
						} while (healthPoints != 100);
					}
					System.out.println("Você usou uma potion.");
					System.out.printf("Quantidade potions: %d\n", qntPotions);
					System.out.printf("Total HP: %d\n\n", healthPoints);
					condicao = false;
					break;
				case 'N':
					System.out.println("Você guardou a potion de volta na bolsa\n");
					condicao = false;
					break;
				}
			} else {
				System.out.println("Você não tem potions");
				condicao = false;
			}

		} while (condicao);

		status[0] = healthPoints;
		status[1] = qntPotions;

		return status;
	}

	static void Timer() {
		try {
			Thread.sleep(thread1);
		} catch (Exception e) {

		}
	}

	static void Timer2() {
		try {
			Thread.sleep(thread2);
		} catch (Exception e) {

		}
	}

	static void Timer3() {
		try {
			Thread.sleep(thread3);
		} catch (Exception e) {

		}
	}

	static void AcertouResposta(int healthPoints) {
		System.out.println("\nA resposta está...");
		Timer();
		System.out.println("...");
		Timer();
		System.out.println("...");
		Timer();
		System.out.println(GREEN + "Certa! :D\n" + RESET);

		if (healthPoints >= 30 && healthPoints < 65) {
			System.out.println("Parece que foi um desafio para você.");
		}
		if (healthPoints < 30) {
			System.out.println("Foi por pouco que você conseguiu passar!");
		}

	}

	static int[] ProcessoAlternativas_Geral(String[] opcoes, int[] status, String respostaCerta) {
		// Area para declarar variaveis
		Scanner sc = new Scanner(System.in);
		String resposta;
		boolean condicao = true;

		System.out.printf("[ A ] %S\n", opcoes[0]);
		Timer2();
		System.out.printf("[ B ] %S\n", opcoes[1]);
		Timer2();
		System.out.printf("[ C ] %S\n", opcoes[2]);
		Timer2();
		System.out.printf("[ D ] %S\n", opcoes[3]);
		Timer2();
		System.out.printf("[ E ] %S\n\n", opcoes[4]);
		Timer2();
		System.out.println("Resposta certa: " + respostaCerta.toUpperCase());
		Timer2();

		////////////////////////////////////////////////////////////////////////
		// Area para processo de alternativas
		do {

			resposta = Option().toUpperCase();
			if (status[0] <= 0) {
				GameOver();
				condicao = false;
			}

			switch (resposta.charAt(0)) {
			case 'A':
				if (opcoes[0].equals(respostaCerta)) {
					AcertouResposta(status[0]);
					condicao = false;
				} else {
					status[0] = DanoRespostaErrada(status[0]);
					if (status[0] <= 0) {
						GameOver();
						condicao = false;
					}
				}
				break;
			case 'B':
				if (opcoes[1].equals(respostaCerta)) {
					AcertouResposta(status[0]);
					condicao = false;
				} else {
					status[0] = DanoRespostaErrada(status[0]);
					if (status[0] <= 0) {
						GameOver();
						condicao = false;
					}
				}
				break;

			case 'C':
				if (opcoes[2].equals(respostaCerta)) {
					AcertouResposta(status[0]);
					condicao = false;
				} else {
					status[0] = DanoRespostaErrada(status[0]);
					if (status[0] <= 0) {
						GameOver();
						condicao = false;
					}
				}
				break;
			case 'D':
				if (opcoes[3].equals(respostaCerta)) {
					AcertouResposta(status[0]);
					condicao = false;
				} else {
					status[0] = DanoRespostaErrada(status[0]);
					if (status[0] <= 0) {
						GameOver();
						condicao = false;
					}
				}
				break;
			case 'E':
				if (opcoes[4].equals(respostaCerta)) {
					AcertouResposta(status[0]);
					condicao = false;
				} else {
					status[0] = DanoRespostaErrada(status[0]);
					if (status[0] <= 0) {
						GameOver();
						condicao = false;
					}
				}
				break;
			case 'P':
				status = UsePotion(status[0], status[1]);
			}
		} while (condicao);

		return status;
	}

	static void FormataTexto1(String frase) {

		String[] palavra = frase.split(" ");

		for (String each : palavra) {
			System.out.print(each + " ");
			Timer2();
		}
	}

	static void FormataTexto2(String frase) {

		String[] palavra = frase.split(" ");

		for (String each : palavra) {
			System.out.print(each);
			Timer2();
		}

		System.out.print(" ");
	}

// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-TEMPLOS-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

	// TEMPLO 3
	static int[] ExecutaTemplo3(int[] status) {
		Scanner sc = new Scanner(System.in);
		boolean condicao = true;

		do {
			status = Desafio1_Templo3(status);
			if (status[0] > 0) {
				System.out.println("\nVocê concluiu o primeiro desafio!");
				Timer2();
				System.out.println("Parabéns, você ganhou uma Poção!");
				status[1]++;
				Timer2();
				System.out.println("HP: " + status[0]);
				Timer2();
				System.out.println("Poção: " + status[1]);
				Timer();
				System.out.println(" ");

				condicao = false;
			} else {
				System.out.println("Você terá que refazer o desafio\n");
				status[0] = 100;
			}
		} while (condicao);

		System.out.print("\nAperte ENTER para começar o segundo Deafio");
		sc.nextLine();
		System.out.println(" ");

		do {
			status = Desafio2_Templo3(status);
			if (status[0] > 0) {
				System.out.println("\nVocê concluiu o segundo desafio!");
				Timer2();
				System.out.println("Parabéns, você ganhou uma Poção!");
				status[1]++;
				Timer2();
				System.out.println("HP: " + status[0]);
				Timer2();
				System.out.println("Poção: " + status[1]);
				Timer();
				System.out.println(" ");

				condicao = false;
			} else {
				System.out.println("Você terá que refazer o desafio\n");
				status[0] = 100;
			}
		} while (condicao);

		System.out.print("\nAperte ENTER para começar o último Deafio");
		sc.nextLine();
		System.out.println(" ");

		do {
			status = Desafio3_Templo3(status);
			if (status[0] > 0) {
				System.out.println("\nVocê concluiu o último desafio!");
				Timer2();
				System.out.println("Parabéns, você ganhou uma Poção!");
				status[1]++;
				Timer2();
				System.out.println("HP: " + status[0]);
				Timer2();
				System.out.println("Poção: " + status[1]);
				Timer();
				System.out.println(" ");

				condicao = false;
			} else {
				System.out.println("Você terá que refazer o desafio\n");
				status[0] = 100;
			}
		} while (condicao);

		Timer();
		System.out.println("Você conseguiu concluiro o Templo das Conversões");
		Timer2();
		FormataTexto1("Você está preparado para o ");
		FormataTexto2("F I N A L ");
		FormataTexto2("B O S S ");
		FormataTexto2("? ? ?");
		System.out.println("\n");
		return status;
	}

	// DESAFIO É CONVERTER UM NÚMERO QUE ESTÁ EM UMA BASE PARA OUTRA
	static int[] Desafio1_Templo3(int[] status) {
		int baseInicial, baseConversao;
		String respostaCerta;

		String[] numeroInicial = new String[1];
		String[] opcoes = new String[5];
		ArrayList<String> respostaErrada = new ArrayList();

		////////////////////////////////////////////////////////////////////////
		// Area para preparar os numeros
		baseInicial = DeterminaBase_Templo3(); // Determinando a base standard

		do {
			baseConversao = DeterminaBase_Templo3(); // Determinando a base de conversao
		} while (baseConversao == baseInicial);

		numeroInicial[0] = DeterminaNumero_Templo3(baseInicial); // Determinando o numero standard

		respostaCerta = DeterminaNumeroConv_Templo3(numeroInicial, baseInicial, baseConversao); // Determinando o numero
																								// de conversao (certo)

		respostaErrada.add(respostaCerta); // Adicionando a resposta certa nas opcoes

		for (int i = 0; i < 4; i++) {
			respostaErrada.add(DeterminaOpcoes(baseConversao, respostaCerta)); // Adicionando opcoes erradas
		}

		Collections.shuffle(respostaErrada); // Embaralhando as opcoes para que haja uma aleatoriedade
		Collections.shuffle(respostaErrada);

		for (int i = 0; i < opcoes.length; i++) {
			opcoes[i] = respostaErrada.get(i); // Transferindo as opcoes do ArrayList para uma String[]
		}

		////////////////////////////////////////////////////////////////////////
		// Area de logica do game
		Texto_Formatado(Tabula1(4, "***\tWELCOME TO THE 1ST GAME\t***\n"));

		System.out.printf("\nConverta o numero %S que esta na base %d para a base %d\n\n", numeroInicial[0],
				baseInicial, baseConversao);
		Timer2();

		status = ProcessoAlternativas_Geral(opcoes, status, respostaCerta);

		return status;
	}

	// DESAFIO É SOMAR DOIS NÚMEROS QUE ESTÃO EM UMA BASE E CONVERTER PARA OUTRO
	static int[] Desafio2_Templo3(int[] status) {
		// Area para inicializar variaveis
		int baseInicial, baseConversao;
		String respostaCerta;

		String[] numeroInicial = new String[2];
		String[] opcoes = new String[5];
		ArrayList<String> respostaErrada = new ArrayList();
		////////////////////////////////////////////////////////////////////////
		// Area para declarar os numeros

		baseInicial = DeterminaBase_Templo3(); // Gerar a base standard

		do {
			baseConversao = DeterminaBase_Templo3(); // Gerar a base para conversao
		} while (baseConversao == baseInicial);

		numeroInicial[0] = DeterminaNumero_Templo3(baseInicial); // Gerar o numero standard A
		numeroInicial[1] = DeterminaNumero_Templo3(baseInicial); // Gerar o numero standard B

		respostaCerta = DeterminaNumeroConv_Templo3(numeroInicial, baseInicial, baseConversao); // Gerar a resposta
																								// certa

		respostaErrada.add(respostaCerta); // Adicionando a resposta certa no ArrayList

		for (int i = 0; i <= 3; i++) {
			respostaErrada.add(DeterminaOpcoes(baseConversao, respostaCerta)); // Criando respostas erradas para o
																				// ArrayList
		}

		Collections.shuffle(respostaErrada); // Embaralhando as opcoes
		Collections.shuffle(respostaErrada);

		for (int i = 0; i < opcoes.length; i++) {
			opcoes[i] = respostaErrada.get(i); // Adicionando as opcoes embaralhadas numa String para fazer o desafio
		}

		Texto_Formatado(Tabula1(4, "***\tWELCOME TO THE 2ND GAME\t***\n"));
		Timer2();
		System.out.printf("\nFaça a seguinte conversão:\n%S + %S (na base %d) = X (na base %d)\n\n", numeroInicial[0],
				numeroInicial[1], baseInicial, baseConversao);
		Timer2();

		ProcessoAlternativas_Geral(opcoes, status, respostaCerta);

		return status;
	}

	static int[] Desafio3_Templo3(int[] status) {
		// Area para declarar variaveis
		int baseInicial, baseConversao, aux;
		String respostaCerta;

		String[] numeroInicial = new String[2];
		String[] opcoes = new String[5];
		ArrayList<String> respostaErrada = new ArrayList();
		////////////////////////////////////////////////////////////////////////
		// Area para iniciar variaveis
		baseInicial = DeterminaBase_Templo3(); // Gerar a base inicial

		do {
			baseConversao = DeterminaBase_Templo3(); // Gerar a base para conversao
		} while (baseConversao == baseInicial);

		numeroInicial[0] = DeterminaNumero_Templo3(baseInicial); // Gerar numero standard A
		numeroInicial[1] = DeterminaNumero_Templo3(baseInicial); // Gerar numero standard B

		aux = (Integer.parseInt(numeroInicial[0], baseInicial)) * (Integer.parseInt(numeroInicial[1], baseInicial)); // Convertendo
																														// o
																														// produto
																														// dos
																														// numeros
																														// standard
																														// para
																														// int

		respostaCerta = Integer.toString(aux, baseConversao); // Convertendo o produto dos numeros standard para a base
																// de conversao

		respostaErrada.add(respostaCerta); // Adicionando a resposta certa nas opcoes

		for (int i = 0; i <= 3; i++) {
			respostaErrada.add(DeterminaOpcoes(baseConversao, respostaCerta)); // Adicionando as opcoes erradas
		}

		Collections.shuffle(respostaErrada); // Embaralhando as opcoes
		Collections.shuffle(respostaErrada);

		for (int i = 0; i < opcoes.length; i++) {
			opcoes[i] = respostaErrada.get(i);// Adicionando as opcoes em String para fazer o desafio
		}

		Texto_Formatado(Tabula1(4, "***\tWELCOME TO THE 3ND GAME\t***\n"));

		System.out.printf("\nFaça a seguinte conversão:\n%S * %S (na base %d) = X (na base %d)\n\n", numeroInicial[0],
				numeroInicial[1], baseInicial, baseConversao);
		Timer2();

		ProcessoAlternativas_Geral(opcoes, status, respostaCerta);

		return status;
	}

	// FUNÇÕES DO TEMPLO 3

	static int DeterminaBase_Templo3() {

		ArrayList<Integer> bases = new ArrayList();

		bases.add(2);
		bases.add(8);
		bases.add(10);
		bases.add(16);

		Collections.shuffle(bases);
		Collections.shuffle(bases);

		return bases.get(0);
	}

	static String DeterminaNumero_Templo3(int baseInicial) {

		Random dado = new Random();
		int numRandom;
		String baseAconv = null;

		do {
			numRandom = dado.nextInt(2000);
		} while (numRandom <= 50);

		switch (baseInicial) {
		case 2:
			baseAconv = Integer.toBinaryString(numRandom);
			break;
		case 8:
			baseAconv = Integer.toOctalString(numRandom);
			break;
		case 10:
			baseAconv = Integer.toString(numRandom);
			break;
		case 16:
			baseAconv = Integer.toHexString(numRandom);
			break;
		}

		return baseAconv;
	}

	static String DeterminaOpcoes(int baseConversao, String respostaCerta) {
		Random dado = new Random();
		int aux = Integer.parseInt(respostaCerta, baseConversao);
		String opcoesFalsas;

		do {
			aux = aux + dado.nextInt(30);
			aux = aux - 15;
			opcoesFalsas = Integer.toString(aux, baseConversao);
		} while (opcoesFalsas.equals(respostaCerta));

		return opcoesFalsas;
	}

	static String DeterminaNumeroConv_Templo3(String[] numeroInicial, int baseInicial, int baseConversao) {
		int aux = 0;
		String respostaConversao;

		for (int i = 0; i < numeroInicial.length; i++) {
			aux = aux + Integer.parseInt(numeroInicial[i], baseInicial);
		}

		respostaConversao = Integer.toString(aux, baseConversao);

		return respostaConversao;
	}

}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-05-29 20:58:12.052
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-05-29 20:58:12.052
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.debug.ui 4 120 2021-05-29 22:07:23.912
!MESSAGE Error logged from Debug UI: 
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.FutureTask.awaitDone(FutureTask.java:418)
	at java.base/java.util.concurrent.FutureTask.get(FutureTask.java:203)
	at org.eclipse.debug.internal.ui.stringsubstitution.SelectedResourceManager.runInUIThreadWithTimeout(SelectedResourceManager.java:262)
	at org.eclipse.debug.internal.ui.stringsubstitution.SelectedResourceManager.getFromUI(SelectedResourceManager.java:240)
	at org.eclipse.debug.internal.ui.stringsubstitution.SelectedResourceManager.getActiveWindow(SelectedResourceManager.java:231)
	at org.eclipse.debug.ui.DebugUITools.getDebugContext(DebugUITools.java:247)
	at org.eclipse.jdt.internal.debug.ui.JavaDebugHover.getFrame(JavaDebugHover.java:97)
	at org.eclipse.jdt.internal.debug.ui.JavaDebugHover.getHoverInfo2(JavaDebugHover.java:251)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)
!SESSION 2021-05-31 19:18:50.643 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-05-31 19:18:58.335
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-05-31 19:18:58.335
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@8315e4a,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4efe014f,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-05-31 19:19:08.012
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\PICHAU'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.equinox.p2.transport.ecf 2 0 2021-05-31 20:40:57.765
!MESSAGE Connection to https://mirror.aarnet.edu.au/pub/eclipse/releases/2021-03/202103171000/plugins/com.google.guava_30.1.0.v20210127-2300.jar failed on Connect to mirror.aarnet.edu.au:443 [mirror.aarnet.edu.au/202.158.214.106, mirror.aarnet.edu.au/2001:388:30bc:cafe:0:0:0:beef] failed: Connection timed out: no further information. Retry attempt 0 started
!STACK 0
org.apache.http.conn.HttpHostConnectException: Connect to mirror.aarnet.edu.au:443 [mirror.aarnet.edu.au/202.158.214.106, mirror.aarnet.edu.au/2001:388:30bc:cafe:0:0:0:beef] failed: Connection timed out: no further information
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:374)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.eclipse.ecf.provider.filetransfer.httpclient45.HttpClientRetrieveFileTransfer.performConnect(HttpClientRetrieveFileTransfer.java:1003)
	at org.eclipse.ecf.provider.filetransfer.httpclient45.HttpClientRetrieveFileTransfer.access$0(HttpClientRetrieveFileTransfer.java:995)
	at org.eclipse.ecf.provider.filetransfer.httpclient45.HttpClientRetrieveFileTransfer$1.performFileTransfer(HttpClientRetrieveFileTransfer.java:991)
	at org.eclipse.ecf.filetransfer.FileTransferJob.run(FileTransferJob.java:76)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:63)
Caused by: java.net.ConnectException: Connection timed out: no further information
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:660)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:549)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:597)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:333)
	at java.base/java.net.Socket.connect(Socket.java:648)
	at org.apache.http.conn.ssl.SSLConnectionSocketFactory.connectSocket(SSLConnectionSocketFactory.java:368)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142)
	... 13 more
!SESSION 2021-05-31 20:44:53.153 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.ui 2 0 2021-05-31 20:45:24.172
!MESSAGE Warnings while parsing the images from the 'org.eclipse.ui.commandImages' extension point.
!SUBENTRY 1 org.eclipse.ui 2 0 2021-05-31 20:45:24.172
!MESSAGE Cannot bind to an undefined command: plug-in='com.genuitec.eclipse.theming.ui', id='com.genuitec.myeclipse.help.darktheme.commandid'

!ENTRY com.genuitec.eclipse.theming.ui 1 0 2021-05-31 20:45:24.788
!MESSAGE A DevStyle Theme is being activated on this workspace; preparing colors and configuration

!ENTRY com.genuitec.eclipse.theming.ui 1 0 2021-05-31 20:45:24.811
!MESSAGE DevStyle has archived current color configurations to alternate preferences - will be restored when switching out of the DevStyle Theme

!ENTRY org.eclipse.jface 2 0 2021-05-31 20:45:25.292
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-05-31 20:45:25.292
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5519ef7d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4c5c0306,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-05-31 20:45:32.617
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\PICHAU'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-05-31 20:50:39.164 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.ui 2 0 2021-05-31 20:50:45.782
!MESSAGE Warnings while parsing the images from the 'org.eclipse.ui.commandImages' extension point.
!SUBENTRY 1 org.eclipse.ui 2 0 2021-05-31 20:50:45.782
!MESSAGE Cannot bind to an undefined command: plug-in='com.genuitec.eclipse.theming.ui', id='com.genuitec.myeclipse.help.darktheme.commandid'

!ENTRY org.eclipse.jface 2 0 2021-05-31 20:50:47.010
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-05-31 20:50:47.010
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@16257f8c,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@62158618,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-05-31 20:50:54.820
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\PICHAU'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-05-31 20:52:40.390 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.ui 2 0 2021-05-31 20:52:46.978
!MESSAGE Warnings while parsing the images from the 'org.eclipse.ui.commandImages' extension point.
!SUBENTRY 1 org.eclipse.ui 2 0 2021-05-31 20:52:46.978
!MESSAGE Cannot bind to an undefined command: plug-in='com.genuitec.eclipse.theming.ui', id='com.genuitec.myeclipse.help.darktheme.commandid'

!ENTRY org.eclipse.jface 2 0 2021-05-31 20:52:48.249
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-05-31 20:52:48.249
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@16257f8c,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@62158618,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-05-31 20:52:55.805
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\PICHAU'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.debug.ui 4 4 2021-05-31 20:54:37.634
!MESSAGE To avoid deadlock while executing Display.syncExec() from a non UI thread 'Text Viewer Hover Presenter', operation was cancelled.
!SUBENTRY 1 org.eclipse.debug.ui 4 120 2021-05-31 20:54:37.634
!MESSAGE Text Viewer Hover Presenter thread probably holding a lock and trying to acquire UI lock
!STACK 0
java.lang.IllegalStateException: Call stack for thread Text Viewer Hover Presenter
	at java.management@15.0.2/sun.management.ThreadImpl.dumpThreads0(Native Method)
	at java.management@15.0.2/sun.management.ThreadImpl.getThreadInfo(ThreadImpl.java:485)
	at org.eclipse.debug.internal.ui.stringsubstitution.SelectedResourceManager.reportTimeout(SelectedResourceManager.java:291)
	at org.eclipse.debug.internal.ui.stringsubstitution.SelectedResourceManager.getFromUI(SelectedResourceManager.java:243)
	at org.eclipse.debug.internal.ui.stringsubstitution.SelectedResourceManager.getActiveWindow(SelectedResourceManager.java:231)
	at org.eclipse.debug.ui.DebugUITools.getDebugContext(DebugUITools.java:247)
	at org.eclipse.jdt.internal.debug.ui.JavaDebugHover.getFrame(JavaDebugHover.java:97)
	at org.eclipse.jdt.internal.debug.ui.JavaDebugHover.getHoverInfo2(JavaDebugHover.java:251)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)
!SUBENTRY 1 org.eclipse.debug.ui 4 120 2021-05-31 20:54:37.635
!MESSAGE UI thread waiting on a job or lock.
!STACK 0
java.lang.IllegalStateException: Call stack for thread main
	at org.eclipse.swt.internal.win32.OS.ScriptShape(Native Method)
	at org.eclipse.swt.graphics.TextLayout.shape(TextLayout.java:3444)
	at org.eclipse.swt.graphics.TextLayout.shape(TextLayout.java:3639)
	at org.eclipse.swt.graphics.TextLayout.computeRuns(TextLayout.java:246)
	at org.eclipse.swt.graphics.TextLayout.getBounds(TextLayout.java:1624)
	at org.eclipse.swt.custom.StyledTextRenderer.calculate(StyledTextRenderer.java:299)
	at org.eclipse.swt.custom.StyledTextRenderer.getLineHeight(StyledTextRenderer.java:673)
	at org.eclipse.swt.custom.StyledTextRenderer.getLineHeight(StyledTextRenderer.java:664)
	at org.eclipse.swt.custom.StyledText.getLinePixel(StyledText.java:4269)
	at org.eclipse.swt.custom.StyledText.handleTextChanged(StyledText.java:6370)
	at org.eclipse.swt.custom.StyledText$5.textChanged(StyledText.java:5773)
	at org.eclipse.ui.internal.console.ConsoleDocumentAdapter.documentChanged(ConsoleDocumentAdapter.java:588)
	at org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged2(AbstractDocument.java:748)
	at org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged(AbstractDocument.java:717)
	at org.eclipse.jface.text.AbstractDocument.doFireDocumentChanged(AbstractDocument.java:701)
	at org.eclipse.jface.text.AbstractDocument.fireDocumentChanged(AbstractDocument.java:775)
	at org.eclipse.jface.text.AbstractDocument.replace(AbstractDocument.java:1100)
	at org.eclipse.jface.text.AbstractDocument.replace(AbstractDocument.java:1118)
	at org.eclipse.ui.internal.console.ConsoleDocument.replace(ConsoleDocument.java:74)
	at org.eclipse.ui.internal.console.IOConsolePartitioner$QueueProcessingJob.applyOutputToDocument(IOConsolePartitioner.java:1147)
	at org.eclipse.ui.internal.console.IOConsolePartitioner$QueueProcessingJob.applyStreamOutput(IOConsolePartitioner.java:970)
	at org.eclipse.ui.internal.console.IOConsolePartitioner$QueueProcessingJob.processPendingPartitions(IOConsolePartitioner.java:809)
	at org.eclipse.ui.internal.console.IOConsolePartitioner$QueueProcessingJob.runInUIThread(IOConsolePartitioner.java:771)
	at org.eclipse.ui.progress.UIJob.lambda$0(UIJob.java:95)
	at org.eclipse.ui.progress.UIJob$$Lambda$783/0x0000000100b30910.run(Unknown Source)
	at org.eclipse.swt.widgets.RunnableLock.run(RunnableLock.java:40)
	at org.eclipse.swt.widgets.Synchronizer.runAsyncMessages(Synchronizer.java:185)
	at org.eclipse.swt.widgets.Display.runAsyncMessages(Display.java:4001)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3629)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$5.run(PartRenderingEngine.java:1157)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:1046)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:155)
	at org.eclipse.ui.internal.Workbench.lambda$3(Workbench.java:644)
	at org.eclipse.ui.internal.Workbench$$Lambda$237/0x000000010029af60.run(Unknown Source)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:338)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:551)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:156)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:152)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:203)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:134)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:104)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:401)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:255)
	at java.base@15.0.2/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base@15.0.2/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
	at java.base@15.0.2/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@15.0.2/java.lang.reflect.Method.invoke(Method.java:564)
	at app//org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:653)
	at app//org.eclipse.equinox.launcher.Main.basicRun(Main.java:590)
	at app//org.eclipse.equinox.launcher.Main.run(Main.java:1461)
!SESSION 2021-05-31 21:01:18.961 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-05-31 21:01:26.475
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-05-31 21:01:26.475
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@aca2a0b,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@79080255,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-05-31 21:01:33.596
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\PICHAU'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-05-31 21:03:33.702 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-05-31 21:03:41.226
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-05-31 21:03:41.226
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@62158618,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@7c31e01f,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.egit.ui 2 0 2021-05-31 21:03:49.480
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\PICHAU'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-05-31 21:06:47.114 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-05-31 21:06:54.628
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-05-31 21:06:54.628
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@404dc999,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@ef85567,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.e4.ui.workbench 4 0 2021-05-31 21:06:55.636
!MESSAGE Unable to retrieve the bundle from the URI: bundleclass://com.genuitec.eclipse.meexplorer/com.genuitec.eclipse.meexplorer.breadcrumb.e4.BreadCrumbContainer

!ENTRY org.eclipse.e4.ui.workbench 2 0 2021-05-31 21:07:00.201
!MESSAGE Removing PartDescriptorImpl with the "com.genuitec.eclipse.codetogether.ui.main" id and the "CodeTogether" label.It points to the non available "bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" class. Bundle might have been uninstalled

!ENTRY org.eclipse.e4.ui.workbench 2 0 2021-05-31 21:07:00.202
!MESSAGE Removing PartDescriptorImpl with the "com.genuitec.eclipse.codetogether.ui.client.view.TypeHierarchy" id and the "Type Hierarchy" label.It points to the non available "bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" class. Bundle might have been uninstalled

!ENTRY org.eclipse.e4.ui.workbench 2 0 2021-05-31 21:07:00.203
!MESSAGE Removing PartDescriptorImpl with the "com.genuitec.eclipse.codetogether.ui.client.view.CallHierarchy" id and the "Call Hierarchy" label.It points to the non available "bundleclass://org.eclipse.ui.workbench/org.eclipse.ui.internal.e4.compatibility.CompatibilityView" class. Bundle might have been uninstalled

!ENTRY org.eclipse.egit.ui 2 0 2021-05-31 21:07:01.676
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\PICHAU'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-05-31 21:15:06.354 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-05-31 21:15:11.227
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-05-31 21:15:11.227
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@780c0,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1b3bb287,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.e4.ui.workbench 4 0 2021-05-31 21:15:12.241
!MESSAGE Unable to retrieve the bundle from the URI: bundleclass://com.genuitec.eclipse.meexplorer/com.genuitec.eclipse.meexplorer.breadcrumb.e4.BreadCrumbContainer

!ENTRY org.eclipse.egit.ui 2 0 2021-05-31 21:15:18.642
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\PICHAU'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-05-31 21:22:11.742 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-05-31 21:22:16.448
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-05-31 21:22:16.448
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3278d065,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@545f0b6,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.e4.ui.workbench 4 0 2021-05-31 21:22:17.442
!MESSAGE Unable to retrieve the bundle from the URI: bundleclass://com.genuitec.eclipse.meexplorer/com.genuitec.eclipse.meexplorer.breadcrumb.e4.BreadCrumbContainer

!ENTRY org.eclipse.egit.ui 2 0 2021-05-31 21:22:23.332
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\PICHAU'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.jdt.core 4 4 2021-05-31 23:09:31.008
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Scanner;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Random;

public class O_Jogo {

	// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-VARIAVÉIS GLOBAIS-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
	public static Scanner entrada = new Scanner(System.in);
	public static String opcao = "";
	public static int dificuldade = 0;
	public static String nomeJogador = "bobi";
	public static int thread1 = 0;
	public static int thread2 = 0;
	public static int thread3 = 0;
	public static int[] status = { 100, 2 };

	// CORES DO TEXTO
	public static final String RESET = "\u001B[30m";
	public static final String RED = "\u001B[31m";
	public static final String GREEN = "\u001B[32m";
	public static final String YELLOW = "\u001B[33m";
	public static final String BLUE = "\u001B[34m";
	public static final String MAGENTA = "\u001B[35m";
	public static final String CYAN = "\u001B[36m";
	public static final String WHITE = "\u001B[37m";

	// CORES DO FUNDO DO TEXTO
	public static final String RESET_BACKGROUND = "\u001B[0m";
	public static final String BLACK_BACKGROUND = "\u001B[40m";
	public static final String RED_BACKGROUND = "\u001B[41m";
	public static final String GREEN_BACKGROUND = "\u001B[42m";
	public static final String YELLOW_BACKGROUND = "\u001B[43m";
	public static final String BLUE_BACKGROUND = "\u001B[44m";
	public static final String PURPLE_BACKGROUND = "\u001B[45m";
	public static final String CYAN_BACKGROUND = "\u001B[46m";
	public static final String WHITE_BACKGROUND = "\u001B[47m";

	// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-MAIN-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
	public static void main(String[] args) {

		boolean cond = true;
		

		do {

			System.out.print(Tabula1(6, "---Menu---\n\n"));
			System.out.print(Tabula2(2, "[1] Intruções", 6, "[2] Jogar\n"));
			System.out.print(Tabula2(2, "[3] Créditos", 6, "[4] Sair\n"));

			String opcao_Menu = Option();

			switch (opcao_Menu) {

			case "1":
				Instruções();
				break;

			case "2":

				Jogar();
				Hist_1();
				ExecutaTemplo2();
				ExecutaTemplo3(status);
				
				
				break;

			case "3":
				Créditos();
				break;

			case "4":

				cond = false;
				break;

			default:

				System.out.print(RED + Tabula1(6, "Opção não é válida!\n\n") + RESET);

			}

		} while (cond);

	}

	// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-JOGO-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

	// PROCEDIMENTO PARA ARMAZENAR AS INFORMAÇÕES DAS INTRUÇÕES
	public static void Instruções() {

		System.out.print("\n");
		Texto_Formatado("\nO objetivo do jogo é auxiliar o jogador em alguns conhecimentos da matemática."
				+ " Ao longo da jornada, serão apresentados conteúdos sobre a matéria em questão e "
				+ "apresentadas perguntas ao jogador. O mesmo deverá selecionar as opções válidas para que ele possa"
				+ " avançar no jogo e a cada questão, o jogador sofrerá um dano se errar, diminuindo assim sua vida."
				+ " O objetivo final do jogador, é avançar por todos os templos para derrotar o último chefe, sem perder toda a sua vida.");
		System.out.print("\n");
		Sair();

	}

	// PROCEDIMENTO PARA FAZER A 1º CHAMADA DO JOGO, PARA COLETAR AS INFORMAÇÕES DO
	// NOME DO JOGADOR, A DIFICULDADE DO JOGO E A HISTÓRIA INICIAL
	public static void Jogar() {

		Texto_Formatado(Tabula1(4, "---Escolha a sua dificuldade de jogo---\n\n")
				+ Tabula3(1, "[1] Fácil", 3, "[2] Normal", 3, "[3] Difícil"));

		boolean cond = true;

		do {

			String opcao_Menu = Option();
			switch (opcao_Menu) {

			case "1":
				dificuldade = 1;
				cond = false;
				break;

			case "2":
				dificuldade = 2;
				cond = false;
				break;

			case "3":
				dificuldade = 3;
				cond = false;
				break;

			default:
				System.out.print(RED + Tabula1(6, "Opção não é válida!\n\n") + RESET);

			}
		} while (cond);

		Texto_Formatado(Tabula1(4, "   ---Escolha o nome do seu jogador---"));
		nomeJogador = Option();

		boolean cond2 = true;
		do {

			Texto_Formatado(Tabula1(4,
					"---Você deseja que o nome do seu jogador seja " + RED + nomeJogador + RESET + " ?---\n\n")
					+ Tabula2(4, GREEN + "[S]" + RESET, 6, RED + "[N]" + RESET));
			String opcao_Menu = Option();

			switch (opcao_Menu.toUpperCase()) {
			case "S":
				cond2 = false;
				break;
			case "N":
				Texto_Formatado(Tabula1(4, "---Escolha o nome do seu jogador---"));
				nomeJogador = Option();
				break;
			default:
				System.out.print(RED + Tabula1(6, "Opção não é válida!\n\n") + RESET);
			}
		} while (cond2);

	}

	// PROCEDIMENTO PARA ARMAZENAR AS INFORMAÇÕES DOS CRÉDITOS
	public static void Créditos() {

		System.out.print("\n");
		Texto_Formatado(Tabula3(2,"Gustavo Tozeti"\n\t\t-Matheus Cavalcanti\n\t\t\t\t\t-Renan Kesper");
		System.out.print("\n");
		Sair();

	}

	
	// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-HISTÓRIA-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
	
	// PRIMEIRA NARRATIVA DO JOGO
	public static void Hist_1() {

		System.out.print("\n");
		
		Texto_Formatado(
				
				
				Dialogo("Narrador",WHITE) + "\n- Aos escombros, uma leve página, parecida de um diário, pousa sobre o rosto de "+ nomeJogador +". Aos sustos, " + nomeJogador +" acorda e começa a ler a página." +
				
				Dialogo(nomeJogador,WHITE)+ GREEN
				+ "\n- \"Reza a lenda que Ariandre era um lugar próspero, cheio de magia e encanto, onde todos os seres viviam em harmonia e em paz. Um lugar tão belo,"					//TEXTO LIDO PELO PERSONAGEM
				+ " que a matemática era a base de força para grandes magos. Mas isso é claro, antes do grande acontecimento. . .Ninguém sabe ao certo, nem ao menos como,"				
				+ " mas naquela tarde esse lugar tão calmo e pleno, foi reduzido a cinzas e escombros, uma enorme escuridão pairou pelos céus e tomou Ariandre por inteiro "			
				+ "e com um simples clarão. . .tudo foi destruído. Após momentos agoniantes, enfim o motivo disso tudo. . . sim, ele que era apenas uma fábula de centenas de "			
				+ "anos, de contos muito antigos, enfim ressurgiu. . . Ancelot tinha despertado. O grande rei demônio estava presente novamente, "			
				+ "para aprisionar toda a matemática de Ariandre e ser o detentor de toda a magia. Já se passaram alguns meses depois disso tudo, mas agora espero "					
				+ "ter forças para enfrentá-lo, mas a cada dia que se passa nessas catedrais do abismo perco mais e mais da minha sanidade. Talvez eu seja a última esperança "			
				+ "de Ariandre, mas caso alguém esteja lendo isso, significa que Ancelot venceu e Ariandre para sempre estará sob o seu domínio.\"" 									//TEXTO LIDO PELO PERSONAGEM
				
				+ Dialogo(nomeJogador,WHITE) +  GREEN + "\n- Mas. . . mas como? Meses? Estava tudo certo, ele estava em minhas mãos, como foi tudo isso desmoronar. Minha "					//FALA DO PERSONAGEM
				+ "cabeça dói, são memórias que me vem, mas o que será que aconteceu? Por que eu estou nas catedrais e porque Ariandre está destruída? Será isso um sonho?"
				+ " Eu preciso descobrir o que aconteceu, mas me sinto estranho. Parece que não tenho mais meus poderes. Será que eu consigo canalizar algo??"
				
				+ Dialogo("Narrador",WHITE) + "\n- "+nomeJogador+ " tenta utilizar, uma de suas magias vinda através dos poderes da matemática, mas sem sucesso! "
				+ "E como em um turbilhão de memórias, "+nomeJogador+" começa a se lembrar daquele fatídico dia.\n\n"
						
				+Tabula1(4,"Alguns meses antes...") 
				
				+ Dialogo(nomeJogador,WHITE) +  GREEN + "\n - Finalmente, depois de anos de estudos e cálculos, finalmente irei despertar Ancelot e enfim obter o seu"
				+ " poder supremo."
				
				+ Dialogo("Narrador",WHITE) + "\n- "+nomeJogador+ " por mais que fosse extremamente forte, jamais saberia que o terrível Ancelot portava de uma maldição, que "
				+ "quem o invoca-se traria destruição ao seu mundo. Ao passo em que o ritual de invocação se iniciava, um grande portal cheio de trevas se abriu no chão e dele "
				+ "saía o fim dos tempos."
				
				+ Dialogo("Ancelot",WHITE) +  RED + "\n - Finalmente livre!!"	
				
				+ Dialogo(nomeJogador,WHITE) +  GREEN + "\n - Jamais Ancelot, eu "+ nomeJogador +" sou o ser mais supremo de toda Ariandre, você não é pareo para os meus poderes. Apenas te "
				+ "invoquei para obter toda sua fonte de poder e assim te derrotá-lo para sempre. "
				
				+ Dialogo("Ancelot",WHITE) +  RED + "\n - Tolo, você não é a primeira pessoa a tentar isso. Vocês todos tentam, mas todos esquecem da maldição!!"	
				
				+ Dialogo(nomeJogador,WHITE) +  GREEN + "\n - Maldição? Que maldição?!"
				
				+ Dialogo("Ancelot",WHITE) +  RED + "\n - Pelo visto, você não está preparado HAHAHAHAH. Mas talvez o que eu faça aqui, sirva de lição para você."
				
				+ Dialogo("Narrador",WHITE) + "\n- E com uma enorme força e magia, que surpreendia até "+nomeJogador+", Ancelot conseguiu drenar todos os seus poderes. Com vários feixes de luz, "
				+ nomeJogador+" via seus poderes se esvaindo ao longo de si."
				
				+ Dialogo("Ancelot",WHITE) +  RED + "\n - "+nomeJogador+", você me parece interessante. Irei espalhar esses seus poderes nas mais profundas terras de Ariandre e caso você sobreviva, terá seus "
				+ "poderes de volta para me enfrentar."
				
				+ Dialogo("Narrador",WHITE) + "\n- Com um imenso clarão, tudo ficou em silêncio. Até agora...\n\n"
				
				+Tabula1(4,"Atualmente...")
				
				+ Dialogo(nomeJogador,WHITE) +  GREEN + "\n - Droga! Preciso recuperar meus poderes e derrotar Ancelot. Mas onde estou?"
				
				+ Dialogo("Narrador",WHITE) + "\n- "+nomeJogador+" olha em volta e se depara com escombros e ruínas. Mas começa a perceber que existem símbolos escritos nas paredes que são familiares. "
				+ "Estes símbolos remetem a algumas descrições dos templos da perdição das catedrais. É de grande espanto, pois "+nomeJogador+" ao reconhecer às escritas, lembrou que os templos eram mitos da terra "
				+ "antiga e que eram locais responsáveis por um grande armazenamento de magia."
				
				+ Dialogo(nomeJogador,WHITE) +  GREEN + "\n - Se ele disse que meus poderes estão nas mais profundas terras de Ariandre, então só podem estar espalhados entre os três templos daqui. "
				+ "Preciso ir em frente!"
				
				);
		
		System.out.print("\n");

	}

	
	// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-FERRAMENTAS DE TEXTO-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

	// PROCEDIMENTO CRIADO PARA FORMATAR QUALQUER TEXTO, PARA PADRONIZAR O LAYOUT DA
	// MENSAGEM COM BASE EM UM VALOR PRÉ DETERMINADO
	public static void Texto_Formatado(String frase) {

		String texto = frase;
		String[] palavras = texto.split(" ");

		int contadorQntLetras = 0;
		int limiteLinha = 140;

		for (int i = 0; i < limiteLinha; i++) {
			System.out.print(RED + "=" + RESET);
		}
		System.out.print("\n");

		for (String palavra : palavras) {

			if (contadorQntLetras + palavra.length() >= limiteLinha) {
				contadorQntLetras = 0;
				System.out.print("\n");
			}

			System.out.print(palavra + " ");
			Timer2();
			if (palavra.length()>20){
				contadorQntLetras = 0;
			}
			else {
			contadorQntLetras += palavra.length() + 1;
			}
			
			}
		System.out.println("\n");

		for (int i = 0; i < limiteLinha; i++) {
			System.out.print(RED + "=" + RESET);
		}

	}

	// PROCEDIMENTOS CRIADOS PARA TABULAR QUALQUER TEXTO, PARA PADRONIZAR O LAYOUT DA
	// MENSAGEM
	public static String Tabula1(int t, String s) {

		String tab = "\t";
		String frase = "";
		for (int i = 0; i <= t; i++) {
			frase += tab;
		}
		frase += s;

		return frase;
	}

	public static String Tabula2(int t, String s, int tt, String ss) {

		String tab = "\t";
		String frase = "";

		for (int i = 0; i <= t; i++) {
			frase += tab;
		}
		frase += s;
		for (int i = 0; i <= tt; i++) {
			frase += tab;
		}
		frase += ss;
		return frase;
	}

	public static String Tabula3(int t, String s, int tt, String ss, int ttt, String sss) {

		String tab = "\t";
		String frase = "";

		for (int i = 0; i <= t; i++) {
			frase += tab;
		}
		frase += s;
		for (int i = 0; i <= tt; i++) {
			frase += tab;
		}
		frase += ss;
		for (int i = 0; i <= ttt; i++) {
			frase += tab;
		}
		frase += sss;
		return frase;
	}

	// PROCEDIMENTOS CRIADO PARA PADRONIZAR OS DIÁLOGOS
	public static String Dialogo(String Nome, String Cor) {
		String texto = "\n\n" + BLACK_BACKGROUND + Cor +Nome+ RESET + RESET_BACKGROUND;
		return texto;
		}
	
	// PROCEDIMENTOS CRIADO PARA PRINTAR A MENSAGEM ANTES DO BOSS
	static void FormataTexto1(String frase) {

		String[] palavra = frase.split(" ");

		for (String each : palavra) {
			System.out.print(each + " ");
			Timer2();
		}
	}

	// PROCEDIMENTOS CRIADO PARA PRINTAR A MENSAGEM DE GAME OVER
	static void FormataTexto2(String frase) {

		String[] palavra = frase.split(" ");

		for (String each : palavra) {
			System.out.print(each);
			Timer2();
		}

		System.out.print(" ");
	}
	
	// PROCEDIMENTOS CRIADO PARA ARMAZENAR A COLEÇÃO DE FRASES PARA ACERTOS
	static void Vitoria_Frase () {
		
		ArrayList<String> vitoria = new ArrayList();
		vitoria.add("Acertou novamente, droga droga droga...\n");
		vitoria.add("Vejo que acertou mais uma...\n");
		
		Collections.shuffle(vitoria);
		Collections.shuffle(vitoria);
		
		
		System.out.println(Dialogo("Ancelot",WHITE) +  RED + " - " + vitoria.get(0) + RESET);
		
	}
	
	// PROCEDIMENTOS CRIADO PARA ARMAZENAR A COLEÇÃO COLEÇÃO DE FRASES PARA ERROS
	static void Derrota_Frase () {
		
		ArrayList<String> derrota = new ArrayList();
		derrota.add("Você não conseguirá prosseguir nem que tente mil vezes.\n");
		derrota.add("Você não é capaz de seguir em frente\n");
		
		Collections.shuffle(derrota);
		Collections.shuffle(derrota);
		
		System.out.println(Dialogo("Ancelot",WHITE) +  RED + " - " + derrota.get(0) + RESET);
	}
	
	// PROCEDIMENTOS CRIADO PARA MOSTRAR MENSAGEM DE ACORDO COM A VIDA 
	// DO PERSONAGEM
	static void AcertouResposta(int healthPoints) {
		System.out.println("\nA resposta está...");
		Timer();
		System.out.println("...");
		Timer();
		System.out.println("...");
		Timer();
		System.out.println(GREEN + "Certa! :D\n" + RESET);

		if (healthPoints >= 30 && healthPoints < 65) {
			System.out.println("Parece que foi um desafio para você.");
		}
		if (healthPoints < 30) {
			System.out.println("Foi por pouco que você conseguiu passar!");
		}

	}
	
	// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-FERRAMENTAS DE INPUT-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

	// FUNÇÃO CRIADA PARA RETONAR UMA OPÇÃO DESEJADA DO USUÁRIO
	public static String Option() {
		System.out.print(BLACK_BACKGROUND + WHITE + "\n***Digite sua opção:" + RESET + RESET_BACKGROUND + " ");
		opcao = entrada.next();
		System.out.print("\n");
		return opcao;
	}

	// PROCEDIMENTO CRIADO PARA SAIR DE UMA OPÇÃO DE UM MENU
	public static void Sair() {
		Scanner sc = new Scanner(System.in);
		System.out.print("\nPressione a tecla ENTER para voltar!\n");
		sc.nextLine();
		System.out.println(" ");
	}

	
	// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-FERRAMENTAS DO JOGO-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

	// FUNÇÃO CRIADA PARA CALCULAR O DANO
	static int DanoRespostaErrada(int healthPoints) {
		Random dado = new Random();
		int jogada;

		System.out.println("\nA resposta está...");
		Timer();
		System.out.println("...");
		Timer();
		System.out.println("...");
		Timer();
		System.out.println(RED + "Errada :(" + RESET);
		System.out.println("\nAgora iremos jogar o dado para saber quanto de dano você irá tomar.");
		System.out.println("O número que caiu no dado é...");
		Timer();
		System.out.println("...");
		Timer();
		System.out.println("...");
		Timer();

		jogada = dado.nextInt(20) + 1;

		System.out.printf("**\t%d\t**\n", jogada);

		if (jogada <= 5) {
			System.out.println("Parece que você deu sorte e se esquivou do dano.");
		} else if (jogada > 5 && jogada <= 15) {
			System.out.println("Você levou 20 de dano");
			healthPoints = healthPoints - (20 + (5 * dificuldade));
		} else if (jogada > 15) {
			System.out.println("Você tomou dano crítico!");
			healthPoints = healthPoints - (30 + (5 * dificuldade));
		}

		System.out.printf("Total HP: %d\n\n", healthPoints);
		return healthPoints;
	}

	// PROCEDIMENTO CRIADO PARA DAR GAME-OVER AO JOGO
	static void GameOver() {
		System.out.println("Seu HP chegou a 0");

		String game = "G A M E";
		String over = "O V E R";

		FormataTexto2(game);
		FormataTexto2(over);

		System.out.println("\n");
	}

	// FUNÇÃO CRIADA PARA USAR POTIONS
	static int[] UsePotion(int healthPoints, int qntPotions) {

		Scanner input = new Scanner(System.in);
		boolean condicao = true;
		char opcao = 0;
		int[] status = new int[2];

		System.out.printf("HP atual: %d\nQuantidade de potions: %d\n\n", healthPoints, qntPotions);

		do {
			try {
				System.out.println("Você tem certeza que quer usar uma potion?\n" + GREEN + "[S]" + RESET + " ou " + RED
						+ "[N]\n" + RESET);
				System.out.print("Escolha: ");
				opcao = input.next().toUpperCase().charAt(0);
			} catch (Exception e) {
				System.out.println("Caracter invalido.");
			}

			if (qntPotions > 0) {
				switch (opcao) {
				case 'S':
					healthPoints = healthPoints + 20;
					qntPotions--;

					if (healthPoints > 100) {
						do {
							healthPoints--;
						} while (healthPoints != 100);
					}
					System.out.println("Você usou uma potion.");
					System.out.printf("Quantidade potions: %d\n", qntPotions);
					System.out.printf("Total HP: %d\n\n", healthPoints);
					condicao = false;
					break;
				case 'N':
					System.out.println("Você guardou a potion de volta na bolsa\n");
					condicao = false;
					break;
				}
			} else {
				System.out.println("Você não tem potions");
				condicao = false;
			}

		} while (condicao);

		status[0] = healthPoints;
		status[1] = qntPotions;

		return status;
	}

	// PROCEDIMENTOS DE TEMPO PARA IMPRIMIR MENSAGENS
	static void Timer() {
		try {
			Thread.sleep(thread1);
		} catch (Exception e) {

		}
	}

	static void Timer2() {
		try {
			Thread.sleep(thread2);
		} catch (Exception e) {

		}
	}

	static void Timer3() {
		try {
			Thread.sleep(thread3);
		} catch (Exception e) {

		}
	}

	// FUNÇÃO CRIADA PARA GERAR AS PERGUNTAS AO JOGADOR
	static int[] ProcessoAlternativas_Geral(String[] opcoes, int[] status, String respostaCerta) {
		// Area para declarar variaveis
		Scanner sc = new Scanner(System.in);
		String resposta;
		boolean condicao = true;

		System.out.printf("[ A ] %S\n", opcoes[0]);
		Timer2();
		System.out.printf("[ B ] %S\n", opcoes[1]);
		Timer2();
		System.out.printf("[ C ] %S\n", opcoes[2]);
		Timer2();
		System.out.printf("[ D ] %S\n", opcoes[3]);
		Timer2();
		System.out.printf("[ E ] %S\n\n", opcoes[4]);
		Timer2();
		System.out.println("Resposta certa: " + respostaCerta.toUpperCase());
		Timer2();

		////////////////////////////////////////////////////////////////////////
		// Area para processo de alternativas
		do {

			resposta = Option().toUpperCase();
			if (status[0] <= 0) {
				GameOver();
				condicao = false;
			}

			switch (resposta.charAt(0)) {
			case 'A':
				if (opcoes[0].equals(respostaCerta)) {
					AcertouResposta(status[0]);
					condicao = false;
				} else {
					status[0] = DanoRespostaErrada(status[0]);
					if (status[0] <= 0) {
						GameOver();
						condicao = false;
					}
				}
				break;
			case 'B':
				if (opcoes[1].equals(respostaCerta)) {
					AcertouResposta(status[0]);
					condicao = false;
				} else {
					status[0] = DanoRespostaErrada(status[0]);
					if (status[0] <= 0) {
						GameOver();
						condicao = false;
					}
				}
				break;

			case 'C':
				if (opcoes[2].equals(respostaCerta)) {
					AcertouResposta(status[0]);
					condicao = false;
				} else {
					status[0] = DanoRespostaErrada(status[0]);
					if (status[0] <= 0) {
						GameOver();
						condicao = false;
					}
				}
				break;
			case 'D':
				if (opcoes[3].equals(respostaCerta)) {
					AcertouResposta(status[0]);
					condicao = false;
				} else {
					status[0] = DanoRespostaErrada(status[0]);
					if (status[0] <= 0) {
						GameOver();
						condicao = false;
					}
				}
				break;
			case 'E':
				if (opcoes[4].equals(respostaCerta)) {
					AcertouResposta(status[0]);
					condicao = false;
				} else {
					status[0] = DanoRespostaErrada(status[0]);
					if (status[0] <= 0) {
						GameOver();
						condicao = false;
					}
				}
				break;
			case 'P':
				status = UsePotion(status[0], status[1]);
			}
		} while (condicao);

		return status;
	}

		
// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-TEMPLOS-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

	// TEMPLO 3
	static int[] ExecutaTemplo3(int[] status) {
		Scanner sc = new Scanner(System.in);
		boolean condicao = true;

		do {
			status = Desafio1_Templo3(status);
			if (status[0] > 0) {
				System.out.println("\nVocê concluiu o primeiro desafio!");
				Timer2();
				System.out.println("Parabéns, você ganhou uma Poção!");
				status[1]++;
				Timer2();
				System.out.println("HP: " + status[0]);
				Timer2();
				System.out.println("Poção: " + status[1]);
				Timer();
				System.out.println(" ");

				condicao = false;
			} else {
				System.out.println("Você terá que refazer o desafio\n");
				status[0] = 100;
			}
		} while (condicao);

		System.out.print("\nAperte ENTER para começar o segundo Deafio");
		sc.nextLine();
		System.out.println(" ");

		do {
			status = Desafio2_Templo3(status);
			if (status[0] > 0) {
				System.out.println("\nVocê concluiu o segundo desafio!");
				Timer2();
				System.out.println("Parabéns, você ganhou uma Poção!");
				status[1]++;
				Timer2();
				System.out.println("HP: " + status[0]);
				Timer2();
				System.out.println("Poção: " + status[1]);
				Timer();
				System.out.println(" ");

				condicao = false;
			} else {
				System.out.println("Você terá que refazer o desafio\n");
				status[0] = 100;
			}
		} while (condicao);

		System.out.print("\nAperte ENTER para começar o último Deafio");
		sc.nextLine();
		System.out.println(" ");

		do {
			status = Desafio3_Templo3(status);
			if (status[0] > 0) {
				System.out.println("\nVocê concluiu o último desafio!");
				Timer2();
				System.out.println("Parabéns, você ganhou uma Poção!");
				status[1]++;
				Timer2();
				System.out.println("HP: " + status[0]);
				Timer2();
				System.out.println("Poção: " + status[1]);
				Timer();
				System.out.println(" ");

				condicao = false;
			} else {
				System.out.println("Você terá que refazer o desafio\n");
				status[0] = 100;
			}
		} while (condicao);

		Timer();
		System.out.println("Você conseguiu concluiro o Templo das Conversões");
		Timer2();
		FormataTexto1("Você está preparado para o ");
		FormataTexto2("F I N A L ");
		FormataTexto2("B O S S ");
		FormataTexto2("? ? ?");
		System.out.println("\n");
		return status;
	}

	// DESAFIO É CONVERTER UM NÚMERO QUE ESTÁ EM UMA BASE PARA OUTRA
	static int[] Desafio1_Templo3(int[] status) {
		int baseInicial, baseConversao;
		String respostaCerta;

		String[] numeroInicial = new String[1];
		String[] opcoes = new String[5];
		ArrayList<String> respostaErrada = new ArrayList();

		////////////////////////////////////////////////////////////////////////
		// Area para preparar os numeros
		baseInicial = DeterminaBase_Templo3(); // Determinando a base standard

		do {
			baseConversao = DeterminaBase_Templo3(); // Determinando a base de conversao
		} while (baseConversao == baseInicial);

		numeroInicial[0] = DeterminaNumero_Templo3(baseInicial); // Determinando o numero standard

		respostaCerta = DeterminaNumeroConv_Templo3(numeroInicial, baseInicial, baseConversao); // Determinando o numero
																								// de conversao (certo)

		respostaErrada.add(respostaCerta); // Adicionando a resposta certa nas opcoes

		for (int i = 0; i < 4; i++) {
			respostaErrada.add(DeterminaOpcoes(baseConversao, respostaCerta)); // Adicionando opcoes erradas
		}

		Collections.shuffle(respostaErrada); // Embaralhando as opcoes para que haja uma aleatoriedade
		Collections.shuffle(respostaErrada);

		for (int i = 0; i < opcoes.length; i++) {
			opcoes[i] = respostaErrada.get(i); // Transferindo as opcoes do ArrayList para uma String[]
		}

		////////////////////////////////////////////////////////////////////////
		// Area de logica do game
		Texto_Formatado(Tabula1(4, "***\tWELCOME TO THE 1ST GAME\t***\n"));

		System.out.printf("\nConverta o numero %S que esta na base %d para a base %d\n\n", numeroInicial[0],
				baseInicial, baseConversao);
		Timer2();

		status = ProcessoAlternativas_Geral(opcoes, status, respostaCerta);

		return status;
	}

	// DESAFIO É SOMAR DOIS NÚMEROS QUE ESTÃO EM UMA BASE E CONVERTER PARA OUTRO
	static int[] Desafio2_Templo3(int[] status) {
		// Area para inicializar variaveis
		int baseInicial, baseConversao;
		String respostaCerta;

		String[] numeroInicial = new String[2];
		String[] opcoes = new String[5];
		ArrayList<String> respostaErrada = new ArrayList();
		////////////////////////////////////////////////////////////////////////
		// Area para declarar os numeros

		baseInicial = DeterminaBase_Templo3(); // Gerar a base standard

		do {
			baseConversao = DeterminaBase_Templo3(); // Gerar a base para conversao
		} while (baseConversao == baseInicial);

		numeroInicial[0] = DeterminaNumero_Templo3(baseInicial); // Gerar o numero standard A
		numeroInicial[1] = DeterminaNumero_Templo3(baseInicial); // Gerar o numero standard B

		respostaCerta = DeterminaNumeroConv_Templo3(numeroInicial, baseInicial, baseConversao); // Gerar a resposta
																								// certa

		respostaErrada.add(respostaCerta); // Adicionando a resposta certa no ArrayList

		for (int i = 0; i <= 3; i++) {
			respostaErrada.add(DeterminaOpcoes(baseConversao, respostaCerta)); // Criando respostas erradas para o
																				// ArrayList
		}

		Collections.shuffle(respostaErrada); // Embaralhando as opcoes
		Collections.shuffle(respostaErrada);

		for (int i = 0; i < opcoes.length; i++) {
			opcoes[i] = respostaErrada.get(i); // Adicionando as opcoes embaralhadas numa String para fazer o desafio
		}

		Texto_Formatado(Tabula1(4, "***\tWELCOME TO THE 2ND GAME\t***\n"));
		Timer2();
		System.out.printf("\nFaça a seguinte conversão:\n%S + %S (na base %d) = X (na base %d)\n\n", numeroInicial[0],
				numeroInicial[1], baseInicial, baseConversao);
		Timer2();

		ProcessoAlternativas_Geral(opcoes, status, respostaCerta);

		return status;
	}

	// DESAFIO É MULTIPLICAR DOIS NÚMEROS QUE ESTÃO EM UMA BASE E CONVERTER PARA OUTRO
	static int[] Desafio3_Templo3(int[] status) {
		// Area para declarar variaveis
		int baseInicial, baseConversao, aux;
		String respostaCerta;

		String[] numeroInicial = new String[2];
		String[] opcoes = new String[5];
		ArrayList<String> respostaErrada = new ArrayList();
		////////////////////////////////////////////////////////////////////////
		// Area para iniciar variaveis
		baseInicial = DeterminaBase_Templo3(); // Gerar a base inicial

		do {
			baseConversao = DeterminaBase_Templo3(); // Gerar a base para conversao
		} while (baseConversao == baseInicial);

		numeroInicial[0] = DeterminaNumero_Templo3(baseInicial); // Gerar numero standard A
		numeroInicial[1] = DeterminaNumero_Templo3(baseInicial); // Gerar numero standard B

		aux = (Integer.parseInt(numeroInicial[0], baseInicial)) * (Integer.parseInt(numeroInicial[1], baseInicial)); // Convertendo
																														// o
																														// produto
																														// dos
																														// numeros
																														// standard
																														// para
																														// int

		respostaCerta = Integer.toString(aux, baseConversao); // Convertendo o produto dos numeros standard para a base
																// de conversao

		respostaErrada.add(respostaCerta); // Adicionando a resposta certa nas opcoes

		for (int i = 0; i <= 3; i++) {
			respostaErrada.add(DeterminaOpcoes(baseConversao, respostaCerta)); // Adicionando as opcoes erradas
		}

		Collections.shuffle(respostaErrada); // Embaralhando as opcoes
		Collections.shuffle(respostaErrada);

		for (int i = 0; i < opcoes.length; i++) {
			opcoes[i] = respostaErrada.get(i);// Adicionando as opcoes em String para fazer o desafio
		}

		Texto_Formatado(Tabula1(4, "***\tWELCOME TO THE 3ND GAME\t***\n"));

		System.out.printf("\nFaça a seguinte conversão:\n%S * %S (na base %d) = X (na base %d)\n\n", numeroInicial[0],
				numeroInicial[1], baseInicial, baseConversao);
		Timer2();

		ProcessoAlternativas_Geral(opcoes, status, respostaCerta);

		return status;
	}

	// FUNÇÕES DO TEMPLO 3
	static int DeterminaBase_Templo3() {

		ArrayList<Integer> bases = new ArrayList();

		bases.add(2);
		bases.add(8);
		bases.add(10);
		bases.add(16);

		Collections.shuffle(bases);
		Collections.shuffle(bases);

		return bases.get(0);
	}

	static String DeterminaNumero_Templo3(int baseInicial) {

		Random dado = new Random();
		int numRandom;
		String baseAconv = null;

		do {
			numRandom = dado.nextInt(2000);
		} while (numRandom <= 50);

		switch (baseInicial) {
		case 2:
			baseAconv = Integer.toBinaryString(numRandom);
			break;
		case 8:
			baseAconv = Integer.toOctalString(numRandom);
			break;
		case 10:
			baseAconv = Integer.toString(numRandom);
			break;
		case 16:
			baseAconv = Integer.toHexString(numRandom);
			break;
		}

		return baseAconv;
	}

	static String DeterminaOpcoes(int baseConversao, String respostaCerta) {
		Random dado = new Random();
		int aux = Integer.parseInt(respostaCerta, baseConversao);
		String opcoesFalsas;

		do {
			aux = aux + dado.nextInt(30);
			aux = aux - 15;
			opcoesFalsas = Integer.toString(aux, baseConversao);
		} while (opcoesFalsas.equals(respostaCerta));

		return opcoesFalsas;
	}

	static String DeterminaNumeroConv_Templo3(String[] numeroInicial, int baseInicial, int baseConversao) {
		int aux = 0;
		String respostaConversao;

		for (int i = 0; i < numeroInicial.length; i++) {
			aux = aux + Integer.parseInt(numeroInicial[i], baseInicial);
		}

		respostaConversao = Integer.toString(aux, baseConversao);

		return respostaConversao;
	}

	// TEMPLO 2
	static void ExecutaTemplo2(){
		Desafio1_Templo2();
		Desafio2_Templo2();
		Desafio3_Templo2();
}
	
	// FUNÇÕES DO TEMPLO 2
	static void Desafio1_Templo2() {
		//variáveis
		int r;
		Random rng = new Random();
		Scanner entrada = new Scanner(System.in);
		String opcao, enunciado;
		boolean repete = true;
				
		//Enunciado
		System.out.println("Olá! Nesse templo nós teremos três testes relacionados a equações do segundo grau.");
				
		//Questão
				
		//RANDOMIZANDO A QUESTÃO E REPETINDO ATÉ O ACERTO OU VIDA = 0
		
		do{
			r = rng.nextInt(3);
		switch(r) {
		//RECEBENDO A QUESTÃO RANDOMIZADA E RESOLVENDO A QUESTÃO.
			case 0:
				enunciado = "Primeiramente me diga, quais são os coeficiêntes dessa equação de segundo grau. 2x² + x – 3 = 0";
				System.out.println(enunciado);
				System.out.println("a) a = -2 b = 0 c = -3 \n"
						+ "b) a = 2 b = 1 c = 3 \n"
						+ "c) a = 2 b = 1 c = -3 \n"
						+ "d) a = 2 b = 0 c = -3");
				
				opcao = Option();
			
				if(opcao.equalsIgnoreCase("c")) {
					AcertouResposta(status[0]);
					Vitoria_Frase();
					repete = false;
				}else {
					DanoRespostaErrada(status[0]);
					Derrota_Frase();
				}
				break;
				
			case 1:
				enunciado = "Primeiramente me diga, quais são os coeficiêntes dessa equação de segundo grau. –3x² + 18x – 15 = 0.";
				System.out.println(enunciado);
				System.out.println("a) a = -3 b = -18 c = -15 \n"
						+ "b) a = 3 b = 18 c = -15 \n"
						+ "c) a = -3 b = 18 c = 15 \n"
						+ "d) a = -3 b = 18 c = -15");
				
				opcao = Option();
				
				if(opcao.equalsIgnoreCase("d")) {
					AcertouResposta(status[0]);
					Vitoria_Frase();
					repete = false;
				}else {
					DanoRespostaErrada(status[0]);
					Derrota_Frase();
				}
				break;
				
			case 2:
				enunciado = "Primeiramente me diga, quais são os coeficiêntes dessa equação de segundo grau. 3x² – x – 1 = 0.";
				System.out.println(enunciado);
				
				System.out.println("a) a = -3 b = -1 c = -1 \n"
						+ "b) a = 3 b = -1 c = -1 \n"
						+ "c) a = -3 b = 0 c = 1 \n"
						+ "d) a = 3 b = -1 c = 1");
				
				opcao = Option();
				
				if(opcao.equalsIgnoreCase("b")) {
					AcertouResposta(status[0]);
					Vitoria_Frase();
					repete = false;
				}else {
					DanoRespostaErrada(status[0]);
					Derrota_Frase();
				}
				break;
		}
		
	}while(repete);
		}
	
	static void Desafio2_Templo2() {
		//variáveis
		int r;
		Random rng = new Random();
		Scanner entrada = new Scanner(System.in);
		String opcao, enunciado;
		boolean repete = true;
		//Enunciado
		System.out.println("Aaaah, sim, vejo que você foi capaz de passar pelo meu primeiro teste! Maravilhoso, vamos apimentar um pouco mais as coisas");
		
		//Randomizando a questão
		
		
		//RECEBENDO A QUESTÃO RANDOMIZADA E RESOLVENDO A QUESTÃO.
		do {
			r = rng.nextInt(3);
		switch(r) {
		case 0:
			enunciado = "Qual é a maior raiz da equação -2x² + 3x + 5 = 0?";
			System.out.println(enunciado);
			System.out.println("a) -1\n"
					+ "b) -2,5\n"
					+ "c)2\n"
					+ "d)2,5\n");
			
			opcao = Option();
			
			if(opcao.equalsIgnoreCase("d")) {
				
				AcertouResposta(status[0]);
				Vitoria_Frase();
				repete = false;
			}else {
				DanoRespostaErrada(status[0]);
				Derrota_Frase();
			}
			break;
		case 1:
			enunciado = "Qual é a menor raiz da equação 2x² + 7x + 5 = 0";
			System.out.println(enunciado);
			System.out.println("a) -1 \n"
					+ "b) 1\n"
					+ "c) -5/2\n"
					+ "d) -2");
			
			opcao = Option();	
			
			if(opcao.equalsIgnoreCase("c")) {
				AcertouResposta(status[0]);
				Vitoria_Frase();
				repete = false;
				}else {
					DanoRespostaErrada(status[0]);
					Derrota_Frase();
				
				}
			break;
		case 2:
			enunciado = "Quais são as duas raízes da equação 3x² – x – 2 = 0";
			System.out.println(enunciado);
			System.out.println("a) x1 = 2/3 x2 = 1\n"
					+ "b) x1 = -2/3 x2 = -1 \n"
					+ "c) x1 = -2/3 x2 = 1 \n"
					+ "d) x1 = -1 x2 = 2/3");
			
			opcao = Option();
			if(opcao.equalsIgnoreCase("c")) {
				AcertouResposta(status[0]);
				Vitoria_Frase();
				repete = false;
				}else {
					DanoRespostaErrada(status[0]);
					Derrota_Frase();
				
				}
			break;
			
		}
		}while(repete);	
	
	}
	
	static void Desafio3_Templo2() {
		//Variaveis
		int r;
		Random rng = new Random();
		Scanner entrada = new Scanner(System.in);
		String opcao, enunciado;
		boolean repete = true;
		//Enunciado
		System.out.println("TUDO QUE EU JOGO PARA VOCÊ, ESTÁ CONSEGUINDO RESOLVER... Bom...você é bom, faz tempo que não uso todo o meu poder, "
				+ "agora você conhecerá a minha fúria, dúvido que irá conseguir responder as próximas questões...");
		do {
			r = rng.nextInt(3);
		switch(r) {
		case 0:
			enunciado = "Qual é a resolução da seguinte equação do segundo grau x² – 4x – 5 = 0?";
			System.out.println(enunciado);
			System.out.println("a) x1 = 1 x2 = 5"
					+ "b) x1 = -1 x2 = 5\n"
					+ "c) x1 = -1 x2 = -5\n"
					+ "d) x1 = -5 x2 = 1\n");
			
			opcao = Option();
			
			if(opcao.equalsIgnoreCase("b")) {
				
				AcertouResposta(status[0]);
				Vitoria_Frase();
				repete = false;
			}else {
				DanoRespostaErrada(status[0]);
				Derrota_Frase();
				}
			break;
		case 1:
			enunciado = "Eu quero que me diga, temos na equação 10x² – 1000 = 0, duas raízes reais e distintas, a e b, que podem ser encontradas. "
					+ "Mostre a mim que sabe! Determine a² + b²";
			System.out.println(enunciado);
			System.out.println("a) 100 \n"
					+ "b) 50 \n"
					+ "c) 250\n"
					+ "d) 200");
			
			opcao = Option();	
			
			if(opcao.equalsIgnoreCase("d")) {
				AcertouResposta(status[0]);
				Vitoria_Frase();
				repete = false;
				}else {
					DanoRespostaErrada(status[0]);
					Derrota_Frase();
				
				}
			break;
		case 2:
			enunciado = "Quero que me diga qual será o resultado do produto das duas raízes da equação 5x² - 125 = 0";
			System.out.println(enunciado);
			System.out.println("a) -25\n"
					+ "b) x1 = 20 "
					+ "c) x1 = 25"
					+ "d) x1 = 30");
			
			opcao = Option();
			if(opcao.equalsIgnoreCase("a")) {
				AcertouResposta(status[0]);
				Vitoria_Frase();
				repete = false;
				}else {
					DanoRespostaErrada(status[0]);
					Derrota_Frase();
				
				}
			break;
			
		}
		}while(repete);	
		
		
	}
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-05-31 23:09:31.010
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-05-31 23:09:31.011
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-05-31 23:09:33.030
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Scanner;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Random;

public class O_Jogo {

	// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-VARIAVÉIS GLOBAIS-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
	public static Scanner entrada = new Scanner(System.in);
	public static String opcao = "";
	public static int dificuldade = 0;
	public static String nomeJogador = "bobi";
	public static int thread1 = 0;
	public static int thread2 = 0;
	public static int thread3 = 0;
	public static int[] status = { 100, 2 };

	// CORES DO TEXTO
	public static final String RESET = "\u001B[30m";
	public static final String RED = "\u001B[31m";
	public static final String GREEN = "\u001B[32m";
	public static final String YELLOW = "\u001B[33m";
	public static final String BLUE = "\u001B[34m";
	public static final String MAGENTA = "\u001B[35m";
	public static final String CYAN = "\u001B[36m";
	public static final String WHITE = "\u001B[37m";

	// CORES DO FUNDO DO TEXTO
	public static final String RESET_BACKGROUND = "\u001B[0m";
	public static final String BLACK_BACKGROUND = "\u001B[40m";
	public static final String RED_BACKGROUND = "\u001B[41m";
	public static final String GREEN_BACKGROUND = "\u001B[42m";
	public static final String YELLOW_BACKGROUND = "\u001B[43m";
	public static final String BLUE_BACKGROUND = "\u001B[44m";
	public static final String PURPLE_BACKGROUND = "\u001B[45m";
	public static final String CYAN_BACKGROUND = "\u001B[46m";
	public static final String WHITE_BACKGROUND = "\u001B[47m";

	// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-MAIN-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
	public static void main(String[] args) {

		boolean cond = true;
		

		do {

			System.out.print(Tabula1(6, "---Menu---\n\n"));
			System.out.print(Tabula2(2, "[1] Intruções", 6, "[2] Jogar\n"));
			System.out.print(Tabula2(2, "[3] Créditos", 6, "[4] Sair\n"));

			String opcao_Menu = Option();

			switch (opcao_Menu) {

			case "1":
				Instruções();
				break;

			case "2":

				Jogar();
				Hist_1();
				ExecutaTemplo2();
				ExecutaTemplo3(status);
				
				
				break;

			case "3":
				Créditos();
				break;

			case "4":

				cond = false;
				break;

			default:

				System.out.print(RED + Tabula1(6, "Opção não é válida!\n\n") + RESET);

			}

		} while (cond);

	}

	// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-JOGO-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

	// PROCEDIMENTO PARA ARMAZENAR AS INFORMAÇÕES DAS INTRUÇÕES
	public static void Instruções() {

		System.out.print("\n");
		Texto_Formatado("\nO objetivo do jogo é auxiliar o jogador em alguns conhecimentos da matemática."
				+ " Ao longo da jornada, serão apresentados conteúdos sobre a matéria em questão e "
				+ "apresentadas perguntas ao jogador. O mesmo deverá selecionar as opções válidas para que ele possa"
				+ " avançar no jogo e a cada questão, o jogador sofrerá um dano se errar, diminuindo assim sua vida."
				+ " O objetivo final do jogador, é avançar por todos os templos para derrotar o último chefe, sem perder toda a sua vida.");
		System.out.print("\n");
		Sair();

	}

	// PROCEDIMENTO PARA FAZER A 1º CHAMADA DO JOGO, PARA COLETAR AS INFORMAÇÕES DO
	// NOME DO JOGADOR, A DIFICULDADE DO JOGO E A HISTÓRIA INICIAL
	public static void Jogar() {

		Texto_Formatado(Tabula1(4, "---Escolha a sua dificuldade de jogo---\n\n")
				+ Tabula3(1, "[1] Fácil", 3, "[2] Normal", 3, "[3] Difícil"));

		boolean cond = true;

		do {

			String opcao_Menu = Option();
			switch (opcao_Menu) {

			case "1":
				dificuldade = 1;
				cond = false;
				break;

			case "2":
				dificuldade = 2;
				cond = false;
				break;

			case "3":
				dificuldade = 3;
				cond = false;
				break;

			default:
				System.out.print(RED + Tabula1(6, "Opção não é válida!\n\n") + RESET);

			}
		} while (cond);

		Texto_Formatado(Tabula1(4, "   ---Escolha o nome do seu jogador---"));
		nomeJogador = Option();

		boolean cond2 = true;
		do {

			Texto_Formatado(Tabula1(4,
					"---Você deseja que o nome do seu jogador seja " + RED + nomeJogador + RESET + " ?---\n\n")
					+ Tabula2(4, GREEN + "[S]" + RESET, 6, RED + "[N]" + RESET));
			String opcao_Menu = Option();

			switch (opcao_Menu.toUpperCase()) {
			case "S":
				cond2 = false;
				break;
			case "N":
				Texto_Formatado(Tabula1(4, "---Escolha o nome do seu jogador---"));
				nomeJogador = Option();
				break;
			default:
				System.out.print(RED + Tabula1(6, "Opção não é válida!\n\n") + RESET);
			}
		} while (cond2);

	}

	// PROCEDIMENTO PARA ARMAZENAR AS INFORMAÇÕES DOS CRÉDITOS
	public static void Créditos() {

		System.out.print("\n");
		Texto_Formatado(Tabula3(2,"Gustavo Tozeti"t-Matheus Cavalcanti\n\t\t\t\t\t-Renan Kesper");
		System.out.print("\n");
		Sair();

	}

	
	// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-HISTÓRIA-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
	
	// PRIMEIRA NARRATIVA DO JOGO
	public static void Hist_1() {

		System.out.print("\n");
		
		Texto_Formatado(
				
				
				Dialogo("Narrador",WHITE) + "\n- Aos escombros, uma leve página, parecida de um diário, pousa sobre o rosto de "+ nomeJogador +". Aos sustos, " + nomeJogador +" acorda e começa a ler a página." +
				
				Dialogo(nomeJogador,WHITE)+ GREEN
				+ "\n- \"Reza a lenda que Ariandre era um lugar próspero, cheio de magia e encanto, onde todos os seres viviam em harmonia e em paz. Um lugar tão belo,"					//TEXTO LIDO PELO PERSONAGEM
				+ " que a matemática era a base de força para grandes magos. Mas isso é claro, antes do grande acontecimento. . .Ninguém sabe ao certo, nem ao menos como,"				
				+ " mas naquela tarde esse lugar tão calmo e pleno, foi reduzido a cinzas e escombros, uma enorme escuridão pairou pelos céus e tomou Ariandre por inteiro "			
				+ "e com um simples clarão. . .tudo foi destruído. Após momentos agoniantes, enfim o motivo disso tudo. . . sim, ele que era apenas uma fábula de centenas de "			
				+ "anos, de contos muito antigos, enfim ressurgiu. . . Ancelot tinha despertado. O grande rei demônio estava presente novamente, "			
				+ "para aprisionar toda a matemática de Ariandre e ser o detentor de toda a magia. Já se passaram alguns meses depois disso tudo, mas agora espero "					
				+ "ter forças para enfrentá-lo, mas a cada dia que se passa nessas catedrais do abismo perco mais e mais da minha sanidade. Talvez eu seja a última esperança "			
				+ "de Ariandre, mas caso alguém esteja lendo isso, significa que Ancelot venceu e Ariandre para sempre estará sob o seu domínio.\"" 									//TEXTO LIDO PELO PERSONAGEM
				
				+ Dialogo(nomeJogador,WHITE) +  GREEN + "\n- Mas. . . mas como? Meses? Estava tudo certo, ele estava em minhas mãos, como foi tudo isso desmoronar. Minha "					//FALA DO PERSONAGEM
				+ "cabeça dói, são memórias que me vem, mas o que será que aconteceu? Por que eu estou nas catedrais e porque Ariandre está destruída? Será isso um sonho?"
				+ " Eu preciso descobrir o que aconteceu, mas me sinto estranho. Parece que não tenho mais meus poderes. Será que eu consigo canalizar algo??"
				
				+ Dialogo("Narrador",WHITE) + "\n- "+nomeJogador+ " tenta utilizar, uma de suas magias vinda através dos poderes da matemática, mas sem sucesso! "
				+ "E como em um turbilhão de memórias, "+nomeJogador+" começa a se lembrar daquele fatídico dia.\n\n"
						
				+Tabula1(4,"Alguns meses antes...") 
				
				+ Dialogo(nomeJogador,WHITE) +  GREEN + "\n - Finalmente, depois de anos de estudos e cálculos, finalmente irei despertar Ancelot e enfim obter o seu"
				+ " poder supremo."
				
				+ Dialogo("Narrador",WHITE) + "\n- "+nomeJogador+ " por mais que fosse extremamente forte, jamais saberia que o terrível Ancelot portava de uma maldição, que "
				+ "quem o invoca-se traria destruição ao seu mundo. Ao passo em que o ritual de invocação se iniciava, um grande portal cheio de trevas se abriu no chão e dele "
				+ "saía o fim dos tempos."
				
				+ Dialogo("Ancelot",WHITE) +  RED + "\n - Finalmente livre!!"	
				
				+ Dialogo(nomeJogador,WHITE) +  GREEN + "\n - Jamais Ancelot, eu "+ nomeJogador +" sou o ser mais supremo de toda Ariandre, você não é pareo para os meus poderes. Apenas te "
				+ "invoquei para obter toda sua fonte de poder e assim te derrotá-lo para sempre. "
				
				+ Dialogo("Ancelot",WHITE) +  RED + "\n - Tolo, você não é a primeira pessoa a tentar isso. Vocês todos tentam, mas todos esquecem da maldição!!"	
				
				+ Dialogo(nomeJogador,WHITE) +  GREEN + "\n - Maldição? Que maldição?!"
				
				+ Dialogo("Ancelot",WHITE) +  RED + "\n - Pelo visto, você não está preparado HAHAHAHAH. Mas talvez o que eu faça aqui, sirva de lição para você."
				
				+ Dialogo("Narrador",WHITE) + "\n- E com uma enorme força e magia, que surpreendia até "+nomeJogador+", Ancelot conseguiu drenar todos os seus poderes. Com vários feixes de luz, "
				+ nomeJogador+" via seus poderes se esvaindo ao longo de si."
				
				+ Dialogo("Ancelot",WHITE) +  RED + "\n - "+nomeJogador+", você me parece interessante. Irei espalhar esses seus poderes nas mais profundas terras de Ariandre e caso você sobreviva, terá seus "
				+ "poderes de volta para me enfrentar."
				
				+ Dialogo("Narrador",WHITE) + "\n- Com um imenso clarão, tudo ficou em silêncio. Até agora...\n\n"
				
				+Tabula1(4,"Atualmente...")
				
				+ Dialogo(nomeJogador,WHITE) +  GREEN + "\n - Droga! Preciso recuperar meus poderes e derrotar Ancelot. Mas onde estou?"
				
				+ Dialogo("Narrador",WHITE) + "\n- "+nomeJogador+" olha em volta e se depara com escombros e ruínas. Mas começa a perceber que existem símbolos escritos nas paredes que são familiares. "
				+ "Estes símbolos remetem a algumas descrições dos templos da perdição das catedrais. É de grande espanto, pois "+nomeJogador+" ao reconhecer às escritas, lembrou que os templos eram mitos da terra "
				+ "antiga e que eram locais responsáveis por um grande armazenamento de magia."
				
				+ Dialogo(nomeJogador,WHITE) +  GREEN + "\n - Se ele disse que meus poderes estão nas mais profundas terras de Ariandre, então só podem estar espalhados entre os três templos daqui. "
				+ "Preciso ir em frente!"
				
				);
		
		System.out.print("\n");

	}

	
	// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-FERRAMENTAS DE TEXTO-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

	// PROCEDIMENTO CRIADO PARA FORMATAR QUALQUER TEXTO, PARA PADRONIZAR O LAYOUT DA
	// MENSAGEM COM BASE EM UM VALOR PRÉ DETERMINADO
	public static void Texto_Formatado(String frase) {

		String texto = frase;
		String[] palavras = texto.split(" ");

		int contadorQntLetras = 0;
		int limiteLinha = 140;

		for (int i = 0; i < limiteLinha; i++) {
			System.out.print(RED + "=" + RESET);
		}
		System.out.print("\n");

		for (String palavra : palavras) {

			if (contadorQntLetras + palavra.length() >= limiteLinha) {
				contadorQntLetras = 0;
				System.out.print("\n");
			}

			System.out.print(palavra + " ");
			Timer2();
			if (palavra.length()>20){
				contadorQntLetras = 0;
			}
			else {
			contadorQntLetras += palavra.length() + 1;
			}
			
			}
		System.out.println("\n");

		for (int i = 0; i < limiteLinha; i++) {
			System.out.print(RED + "=" + RESET);
		}

	}

	// PROCEDIMENTOS CRIADOS PARA TABULAR QUALQUER TEXTO, PARA PADRONIZAR O LAYOUT DA
	// MENSAGEM
	public static String Tabula1(int t, String s) {

		String tab = "\t";
		String frase = "";
		for (int i = 0; i <= t; i++) {
			frase += tab;
		}
		frase += s;

		return frase;
	}

	public static String Tabula2(int t, String s, int tt, String ss) {

		String tab = "\t";
		String frase = "";

		for (int i = 0; i <= t; i++) {
			frase += tab;
		}
		frase += s;
		for (int i = 0; i <= tt; i++) {
			frase += tab;
		}
		frase += ss;
		return frase;
	}

	public static String Tabula3(int t, String s, int tt, String ss, int ttt, String sss) {

		String tab = "\t";
		String frase = "";

		for (int i = 0; i <= t; i++) {
			frase += tab;
		}
		frase += s;
		for (int i = 0; i <= tt; i++) {
			frase += tab;
		}
		frase += ss;
		for (int i = 0; i <= ttt; i++) {
			frase += tab;
		}
		frase += sss;
		return frase;
	}

	// PROCEDIMENTOS CRIADO PARA PADRONIZAR OS DIÁLOGOS
	public static String Dialogo(String Nome, String Cor) {
		String texto = "\n\n" + BLACK_BACKGROUND + Cor +Nome+ RESET + RESET_BACKGROUND;
		return texto;
		}
	
	// PROCEDIMENTOS CRIADO PARA PRINTAR A MENSAGEM ANTES DO BOSS
	static void FormataTexto1(String frase) {

		String[] palavra = frase.split(" ");

		for (String each : palavra) {
			System.out.print(each + " ");
			Timer2();
		}
	}

	// PROCEDIMENTOS CRIADO PARA PRINTAR A MENSAGEM DE GAME OVER
	static void FormataTexto2(String frase) {

		String[] palavra = frase.split(" ");

		for (String each : palavra) {
			System.out.print(each);
			Timer2();
		}

		System.out.print(" ");
	}
	
	// PROCEDIMENTOS CRIADO PARA ARMAZENAR A COLEÇÃO DE FRASES PARA ACERTOS
	static void Vitoria_Frase () {
		
		ArrayList<String> vitoria = new ArrayList();
		vitoria.add("Acertou novamente, droga droga droga...\n");
		vitoria.add("Vejo que acertou mais uma...\n");
		
		Collections.shuffle(vitoria);
		Collections.shuffle(vitoria);
		
		
		System.out.println(Dialogo("Ancelot",WHITE) +  RED + " - " + vitoria.get(0) + RESET);
		
	}
	
	// PROCEDIMENTOS CRIADO PARA ARMAZENAR A COLEÇÃO COLEÇÃO DE FRASES PARA ERROS
	static void Derrota_Frase () {
		
		ArrayList<String> derrota = new ArrayList();
		derrota.add("Você não conseguirá prosseguir nem que tente mil vezes.\n");
		derrota.add("Você não é capaz de seguir em frente\n");
		
		Collections.shuffle(derrota);
		Collections.shuffle(derrota);
		
		System.out.println(Dialogo("Ancelot",WHITE) +  RED + " - " + derrota.get(0) + RESET);
	}
	
	// PROCEDIMENTOS CRIADO PARA MOSTRAR MENSAGEM DE ACORDO COM A VIDA 
	// DO PERSONAGEM
	static void AcertouResposta(int healthPoints) {
		System.out.println("\nA resposta está...");
		Timer();
		System.out.println("...");
		Timer();
		System.out.println("...");
		Timer();
		System.out.println(GREEN + "Certa! :D\n" + RESET);

		if (healthPoints >= 30 && healthPoints < 65) {
			System.out.println("Parece que foi um desafio para você.");
		}
		if (healthPoints < 30) {
			System.out.println("Foi por pouco que você conseguiu passar!");
		}

	}
	
	// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-FERRAMENTAS DE INPUT-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

	// FUNÇÃO CRIADA PARA RETONAR UMA OPÇÃO DESEJADA DO USUÁRIO
	public static String Option() {
		System.out.print(BLACK_BACKGROUND + WHITE + "\n***Digite sua opção:" + RESET + RESET_BACKGROUND + " ");
		opcao = entrada.next();
		System.out.print("\n");
		return opcao;
	}

	// PROCEDIMENTO CRIADO PARA SAIR DE UMA OPÇÃO DE UM MENU
	public static void Sair() {
		Scanner sc = new Scanner(System.in);
		System.out.print("\nPressione a tecla ENTER para voltar!\n");
		sc.nextLine();
		System.out.println(" ");
	}

	
	// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-FERRAMENTAS DO JOGO-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

	// FUNÇÃO CRIADA PARA CALCULAR O DANO
	static int DanoRespostaErrada(int healthPoints) {
		Random dado = new Random();
		int jogada;

		System.out.println("\nA resposta está...");
		Timer();
		System.out.println("...");
		Timer();
		System.out.println("...");
		Timer();
		System.out.println(RED + "Errada :(" + RESET);
		System.out.println("\nAgora iremos jogar o dado para saber quanto de dano você irá tomar.");
		System.out.println("O número que caiu no dado é...");
		Timer();
		System.out.println("...");
		Timer();
		System.out.println("...");
		Timer();

		jogada = dado.nextInt(20) + 1;

		System.out.printf("**\t%d\t**\n", jogada);

		if (jogada <= 5) {
			System.out.println("Parece que você deu sorte e se esquivou do dano.");
		} else if (jogada > 5 && jogada <= 15) {
			System.out.println("Você levou 20 de dano");
			healthPoints = healthPoints - (20 + (5 * dificuldade));
		} else if (jogada > 15) {
			System.out.println("Você tomou dano crítico!");
			healthPoints = healthPoints - (30 + (5 * dificuldade));
		}

		System.out.printf("Total HP: %d\n\n", healthPoints);
		return healthPoints;
	}

	// PROCEDIMENTO CRIADO PARA DAR GAME-OVER AO JOGO
	static void GameOver() {
		System.out.println("Seu HP chegou a 0");

		String game = "G A M E";
		String over = "O V E R";

		FormataTexto2(game);
		FormataTexto2(over);

		System.out.println("\n");
	}

	// FUNÇÃO CRIADA PARA USAR POTIONS
	static int[] UsePotion(int healthPoints, int qntPotions) {

		Scanner input = new Scanner(System.in);
		boolean condicao = true;
		char opcao = 0;
		int[] status = new int[2];

		System.out.printf("HP atual: %d\nQuantidade de potions: %d\n\n", healthPoints, qntPotions);

		do {
			try {
				System.out.println("Você tem certeza que quer usar uma potion?\n" + GREEN + "[S]" + RESET + " ou " + RED
						+ "[N]\n" + RESET);
				System.out.print("Escolha: ");
				opcao = input.next().toUpperCase().charAt(0);
			} catch (Exception e) {
				System.out.println("Caracter invalido.");
			}

			if (qntPotions > 0) {
				switch (opcao) {
				case 'S':
					healthPoints = healthPoints + 20;
					qntPotions--;

					if (healthPoints > 100) {
						do {
							healthPoints--;
						} while (healthPoints != 100);
					}
					System.out.println("Você usou uma potion.");
					System.out.printf("Quantidade potions: %d\n", qntPotions);
					System.out.printf("Total HP: %d\n\n", healthPoints);
					condicao = false;
					break;
				case 'N':
					System.out.println("Você guardou a potion de volta na bolsa\n");
					condicao = false;
					break;
				}
			} else {
				System.out.println("Você não tem potions");
				condicao = false;
			}

		} while (condicao);

		status[0] = healthPoints;
		status[1] = qntPotions;

		return status;
	}

	// PROCEDIMENTOS DE TEMPO PARA IMPRIMIR MENSAGENS
	static void Timer() {
		try {
			Thread.sleep(thread1);
		} catch (Exception e) {

		}
	}

	static void Timer2() {
		try {
			Thread.sleep(thread2);
		} catch (Exception e) {

		}
	}

	static void Timer3() {
		try {
			Thread.sleep(thread3);
		} catch (Exception e) {

		}
	}

	// FUNÇÃO CRIADA PARA GERAR AS PERGUNTAS AO JOGADOR
	static int[] ProcessoAlternativas_Geral(String[] opcoes, int[] status, String respostaCerta) {
		// Area para declarar variaveis
		Scanner sc = new Scanner(System.in);
		String resposta;
		boolean condicao = true;

		System.out.printf("[ A ] %S\n", opcoes[0]);
		Timer2();
		System.out.printf("[ B ] %S\n", opcoes[1]);
		Timer2();
		System.out.printf("[ C ] %S\n", opcoes[2]);
		Timer2();
		System.out.printf("[ D ] %S\n", opcoes[3]);
		Timer2();
		System.out.printf("[ E ] %S\n\n", opcoes[4]);
		Timer2();
		System.out.println("Resposta certa: " + respostaCerta.toUpperCase());
		Timer2();

		////////////////////////////////////////////////////////////////////////
		// Area para processo de alternativas
		do {

			resposta = Option().toUpperCase();
			if (status[0] <= 0) {
				GameOver();
				condicao = false;
			}

			switch (resposta.charAt(0)) {
			case 'A':
				if (opcoes[0].equals(respostaCerta)) {
					AcertouResposta(status[0]);
					condicao = false;
				} else {
					status[0] = DanoRespostaErrada(status[0]);
					if (status[0] <= 0) {
						GameOver();
						condicao = false;
					}
				}
				break;
			case 'B':
				if (opcoes[1].equals(respostaCerta)) {
					AcertouResposta(status[0]);
					condicao = false;
				} else {
					status[0] = DanoRespostaErrada(status[0]);
					if (status[0] <= 0) {
						GameOver();
						condicao = false;
					}
				}
				break;

			case 'C':
				if (opcoes[2].equals(respostaCerta)) {
					AcertouResposta(status[0]);
					condicao = false;
				} else {
					status[0] = DanoRespostaErrada(status[0]);
					if (status[0] <= 0) {
						GameOver();
						condicao = false;
					}
				}
				break;
			case 'D':
				if (opcoes[3].equals(respostaCerta)) {
					AcertouResposta(status[0]);
					condicao = false;
				} else {
					status[0] = DanoRespostaErrada(status[0]);
					if (status[0] <= 0) {
						GameOver();
						condicao = false;
					}
				}
				break;
			case 'E':
				if (opcoes[4].equals(respostaCerta)) {
					AcertouResposta(status[0]);
					condicao = false;
				} else {
					status[0] = DanoRespostaErrada(status[0]);
					if (status[0] <= 0) {
						GameOver();
						condicao = false;
					}
				}
				break;
			case 'P':
				status = UsePotion(status[0], status[1]);
			}
		} while (condicao);

		return status;
	}

		
// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-TEMPLOS-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

	// TEMPLO 3
	static int[] ExecutaTemplo3(int[] status) {
		Scanner sc = new Scanner(System.in);
		boolean condicao = true;

		do {
			status = Desafio1_Templo3(status);
			if (status[0] > 0) {
				System.out.println("\nVocê concluiu o primeiro desafio!");
				Timer2();
				System.out.println("Parabéns, você ganhou uma Poção!");
				status[1]++;
				Timer2();
				System.out.println("HP: " + status[0]);
				Timer2();
				System.out.println("Poção: " + status[1]);
				Timer();
				System.out.println(" ");

				condicao = false;
			} else {
				System.out.println("Você terá que refazer o desafio\n");
				status[0] = 100;
			}
		} while (condicao);

		System.out.print("\nAperte ENTER para começar o segundo Deafio");
		sc.nextLine();
		System.out.println(" ");

		do {
			status = Desafio2_Templo3(status);
			if (status[0] > 0) {
				System.out.println("\nVocê concluiu o segundo desafio!");
				Timer2();
				System.out.println("Parabéns, você ganhou uma Poção!");
				status[1]++;
				Timer2();
				System.out.println("HP: " + status[0]);
				Timer2();
				System.out.println("Poção: " + status[1]);
				Timer();
				System.out.println(" ");

				condicao = false;
			} else {
				System.out.println("Você terá que refazer o desafio\n");
				status[0] = 100;
			}
		} while (condicao);

		System.out.print("\nAperte ENTER para começar o último Deafio");
		sc.nextLine();
		System.out.println(" ");

		do {
			status = Desafio3_Templo3(status);
			if (status[0] > 0) {
				System.out.println("\nVocê concluiu o último desafio!");
				Timer2();
				System.out.println("Parabéns, você ganhou uma Poção!");
				status[1]++;
				Timer2();
				System.out.println("HP: " + status[0]);
				Timer2();
				System.out.println("Poção: " + status[1]);
				Timer();
				System.out.println(" ");

				condicao = false;
			} else {
				System.out.println("Você terá que refazer o desafio\n");
				status[0] = 100;
			}
		} while (condicao);

		Timer();
		System.out.println("Você conseguiu concluiro o Templo das Conversões");
		Timer2();
		FormataTexto1("Você está preparado para o ");
		FormataTexto2("F I N A L ");
		FormataTexto2("B O S S ");
		FormataTexto2("? ? ?");
		System.out.println("\n");
		return status;
	}

	// DESAFIO É CONVERTER UM NÚMERO QUE ESTÁ EM UMA BASE PARA OUTRA
	static int[] Desafio1_Templo3(int[] status) {
		int baseInicial, baseConversao;
		String respostaCerta;

		String[] numeroInicial = new String[1];
		String[] opcoes = new String[5];
		ArrayList<String> respostaErrada = new ArrayList();

		////////////////////////////////////////////////////////////////////////
		// Area para preparar os numeros
		baseInicial = DeterminaBase_Templo3(); // Determinando a base standard

		do {
			baseConversao = DeterminaBase_Templo3(); // Determinando a base de conversao
		} while (baseConversao == baseInicial);

		numeroInicial[0] = DeterminaNumero_Templo3(baseInicial); // Determinando o numero standard

		respostaCerta = DeterminaNumeroConv_Templo3(numeroInicial, baseInicial, baseConversao); // Determinando o numero
																								// de conversao (certo)

		respostaErrada.add(respostaCerta); // Adicionando a resposta certa nas opcoes

		for (int i = 0; i < 4; i++) {
			respostaErrada.add(DeterminaOpcoes(baseConversao, respostaCerta)); // Adicionando opcoes erradas
		}

		Collections.shuffle(respostaErrada); // Embaralhando as opcoes para que haja uma aleatoriedade
		Collections.shuffle(respostaErrada);

		for (int i = 0; i < opcoes.length; i++) {
			opcoes[i] = respostaErrada.get(i); // Transferindo as opcoes do ArrayList para uma String[]
		}

		////////////////////////////////////////////////////////////////////////
		// Area de logica do game
		Texto_Formatado(Tabula1(4, "***\tWELCOME TO THE 1ST GAME\t***\n"));

		System.out.printf("\nConverta o numero %S que esta na base %d para a base %d\n\n", numeroInicial[0],
				baseInicial, baseConversao);
		Timer2();

		status = ProcessoAlternativas_Geral(opcoes, status, respostaCerta);

		return status;
	}

	// DESAFIO É SOMAR DOIS NÚMEROS QUE ESTÃO EM UMA BASE E CONVERTER PARA OUTRO
	static int[] Desafio2_Templo3(int[] status) {
		// Area para inicializar variaveis
		int baseInicial, baseConversao;
		String respostaCerta;

		String[] numeroInicial = new String[2];
		String[] opcoes = new String[5];
		ArrayList<String> respostaErrada = new ArrayList();
		////////////////////////////////////////////////////////////////////////
		// Area para declarar os numeros

		baseInicial = DeterminaBase_Templo3(); // Gerar a base standard

		do {
			baseConversao = DeterminaBase_Templo3(); // Gerar a base para conversao
		} while (baseConversao == baseInicial);

		numeroInicial[0] = DeterminaNumero_Templo3(baseInicial); // Gerar o numero standard A
		numeroInicial[1] = DeterminaNumero_Templo3(baseInicial); // Gerar o numero standard B

		respostaCerta = DeterminaNumeroConv_Templo3(numeroInicial, baseInicial, baseConversao); // Gerar a resposta
																								// certa

		respostaErrada.add(respostaCerta); // Adicionando a resposta certa no ArrayList

		for (int i = 0; i <= 3; i++) {
			respostaErrada.add(DeterminaOpcoes(baseConversao, respostaCerta)); // Criando respostas erradas para o
																				// ArrayList
		}

		Collections.shuffle(respostaErrada); // Embaralhando as opcoes
		Collections.shuffle(respostaErrada);

		for (int i = 0; i < opcoes.length; i++) {
			opcoes[i] = respostaErrada.get(i); // Adicionando as opcoes embaralhadas numa String para fazer o desafio
		}

		Texto_Formatado(Tabula1(4, "***\tWELCOME TO THE 2ND GAME\t***\n"));
		Timer2();
		System.out.printf("\nFaça a seguinte conversão:\n%S + %S (na base %d) = X (na base %d)\n\n", numeroInicial[0],
				numeroInicial[1], baseInicial, baseConversao);
		Timer2();

		ProcessoAlternativas_Geral(opcoes, status, respostaCerta);

		return status;
	}

	// DESAFIO É MULTIPLICAR DOIS NÚMEROS QUE ESTÃO EM UMA BASE E CONVERTER PARA OUTRO
	static int[] Desafio3_Templo3(int[] status) {
		// Area para declarar variaveis
		int baseInicial, baseConversao, aux;
		String respostaCerta;

		String[] numeroInicial = new String[2];
		String[] opcoes = new String[5];
		ArrayList<String> respostaErrada = new ArrayList();
		////////////////////////////////////////////////////////////////////////
		// Area para iniciar variaveis
		baseInicial = DeterminaBase_Templo3(); // Gerar a base inicial

		do {
			baseConversao = DeterminaBase_Templo3(); // Gerar a base para conversao
		} while (baseConversao == baseInicial);

		numeroInicial[0] = DeterminaNumero_Templo3(baseInicial); // Gerar numero standard A
		numeroInicial[1] = DeterminaNumero_Templo3(baseInicial); // Gerar numero standard B

		aux = (Integer.parseInt(numeroInicial[0], baseInicial)) * (Integer.parseInt(numeroInicial[1], baseInicial)); // Convertendo
																														// o
																														// produto
																														// dos
																														// numeros
																														// standard
																														// para
																														// int

		respostaCerta = Integer.toString(aux, baseConversao); // Convertendo o produto dos numeros standard para a base
																// de conversao

		respostaErrada.add(respostaCerta); // Adicionando a resposta certa nas opcoes

		for (int i = 0; i <= 3; i++) {
			respostaErrada.add(DeterminaOpcoes(baseConversao, respostaCerta)); // Adicionando as opcoes erradas
		}

		Collections.shuffle(respostaErrada); // Embaralhando as opcoes
		Collections.shuffle(respostaErrada);

		for (int i = 0; i < opcoes.length; i++) {
			opcoes[i] = respostaErrada.get(i);// Adicionando as opcoes em String para fazer o desafio
		}

		Texto_Formatado(Tabula1(4, "***\tWELCOME TO THE 3ND GAME\t***\n"));

		System.out.printf("\nFaça a seguinte conversão:\n%S * %S (na base %d) = X (na base %d)\n\n", numeroInicial[0],
				numeroInicial[1], baseInicial, baseConversao);
		Timer2();

		ProcessoAlternativas_Geral(opcoes, status, respostaCerta);

		return status;
	}

	// FUNÇÕES DO TEMPLO 3
	static int DeterminaBase_Templo3() {

		ArrayList<Integer> bases = new ArrayList();

		bases.add(2);
		bases.add(8);
		bases.add(10);
		bases.add(16);

		Collections.shuffle(bases);
		Collections.shuffle(bases);

		return bases.get(0);
	}

	static String DeterminaNumero_Templo3(int baseInicial) {

		Random dado = new Random();
		int numRandom;
		String baseAconv = null;

		do {
			numRandom = dado.nextInt(2000);
		} while (numRandom <= 50);

		switch (baseInicial) {
		case 2:
			baseAconv = Integer.toBinaryString(numRandom);
			break;
		case 8:
			baseAconv = Integer.toOctalString(numRandom);
			break;
		case 10:
			baseAconv = Integer.toString(numRandom);
			break;
		case 16:
			baseAconv = Integer.toHexString(numRandom);
			break;
		}

		return baseAconv;
	}

	static String DeterminaOpcoes(int baseConversao, String respostaCerta) {
		Random dado = new Random();
		int aux = Integer.parseInt(respostaCerta, baseConversao);
		String opcoesFalsas;

		do {
			aux = aux + dado.nextInt(30);
			aux = aux - 15;
			opcoesFalsas = Integer.toString(aux, baseConversao);
		} while (opcoesFalsas.equals(respostaCerta));

		return opcoesFalsas;
	}

	static String DeterminaNumeroConv_Templo3(String[] numeroInicial, int baseInicial, int baseConversao) {
		int aux = 0;
		String respostaConversao;

		for (int i = 0; i < numeroInicial.length; i++) {
			aux = aux + Integer.parseInt(numeroInicial[i], baseInicial);
		}

		respostaConversao = Integer.toString(aux, baseConversao);

		return respostaConversao;
	}

	// TEMPLO 2
	static void ExecutaTemplo2(){
		Desafio1_Templo2();
		Desafio2_Templo2();
		Desafio3_Templo2();
}
	
	// FUNÇÕES DO TEMPLO 2
	static void Desafio1_Templo2() {
		//variáveis
		int r;
		Random rng = new Random();
		Scanner entrada = new Scanner(System.in);
		String opcao, enunciado;
		boolean repete = true;
				
		//Enunciado
		System.out.println("Olá! Nesse templo nós teremos três testes relacionados a equações do segundo grau.");
				
		//Questão
				
		//RANDOMIZANDO A QUESTÃO E REPETINDO ATÉ O ACERTO OU VIDA = 0
		
		do{
			r = rng.nextInt(3);
		switch(r) {
		//RECEBENDO A QUESTÃO RANDOMIZADA E RESOLVENDO A QUESTÃO.
			case 0:
				enunciado = "Primeiramente me diga, quais são os coeficiêntes dessa equação de segundo grau. 2x² + x – 3 = 0";
				System.out.println(enunciado);
				System.out.println("a) a = -2 b = 0 c = -3 \n"
						+ "b) a = 2 b = 1 c = 3 \n"
						+ "c) a = 2 b = 1 c = -3 \n"
						+ "d) a = 2 b = 0 c = -3");
				
				opcao = Option();
			
				if(opcao.equalsIgnoreCase("c")) {
					AcertouResposta(status[0]);
					Vitoria_Frase();
					repete = false;
				}else {
					DanoRespostaErrada(status[0]);
					Derrota_Frase();
				}
				break;
				
			case 1:
				enunciado = "Primeiramente me diga, quais são os coeficiêntes dessa equação de segundo grau. –3x² + 18x – 15 = 0.";
				System.out.println(enunciado);
				System.out.println("a) a = -3 b = -18 c = -15 \n"
						+ "b) a = 3 b = 18 c = -15 \n"
						+ "c) a = -3 b = 18 c = 15 \n"
						+ "d) a = -3 b = 18 c = -15");
				
				opcao = Option();
				
				if(opcao.equalsIgnoreCase("d")) {
					AcertouResposta(status[0]);
					Vitoria_Frase();
					repete = false;
				}else {
					DanoRespostaErrada(status[0]);
					Derrota_Frase();
				}
				break;
				
			case 2:
				enunciado = "Primeiramente me diga, quais são os coeficiêntes dessa equação de segundo grau. 3x² – x – 1 = 0.";
				System.out.println(enunciado);
				
				System.out.println("a) a = -3 b = -1 c = -1 \n"
						+ "b) a = 3 b = -1 c = -1 \n"
						+ "c) a = -3 b = 0 c = 1 \n"
						+ "d) a = 3 b = -1 c = 1");
				
				opcao = Option();
				
				if(opcao.equalsIgnoreCase("b")) {
					AcertouResposta(status[0]);
					Vitoria_Frase();
					repete = false;
				}else {
					DanoRespostaErrada(status[0]);
					Derrota_Frase();
				}
				break;
		}
		
	}while(repete);
		}
	
	static void Desafio2_Templo2() {
		//variáveis
		int r;
		Random rng = new Random();
		Scanner entrada = new Scanner(System.in);
		String opcao, enunciado;
		boolean repete = true;
		//Enunciado
		System.out.println("Aaaah, sim, vejo que você foi capaz de passar pelo meu primeiro teste! Maravilhoso, vamos apimentar um pouco mais as coisas");
		
		//Randomizando a questão
		
		
		//RECEBENDO A QUESTÃO RANDOMIZADA E RESOLVENDO A QUESTÃO.
		do {
			r = rng.nextInt(3);
		switch(r) {
		case 0:
			enunciado = "Qual é a maior raiz da equação -2x² + 3x + 5 = 0?";
			System.out.println(enunciado);
			System.out.println("a) -1\n"
					+ "b) -2,5\n"
					+ "c)2\n"
					+ "d)2,5\n");
			
			opcao = Option();
			
			if(opcao.equalsIgnoreCase("d")) {
				
				AcertouResposta(status[0]);
				Vitoria_Frase();
				repete = false;
			}else {
				DanoRespostaErrada(status[0]);
				Derrota_Frase();
			}
			break;
		case 1:
			enunciado = "Qual é a menor raiz da equação 2x² + 7x + 5 = 0";
			System.out.println(enunciado);
			System.out.println("a) -1 \n"
					+ "b) 1\n"
					+ "c) -5/2\n"
					+ "d) -2");
			
			opcao = Option();	
			
			if(opcao.equalsIgnoreCase("c")) {
				AcertouResposta(status[0]);
				Vitoria_Frase();
				repete = false;
				}else {
					DanoRespostaErrada(status[0]);
					Derrota_Frase();
				
				}
			break;
		case 2:
			enunciado = "Quais são as duas raízes da equação 3x² – x – 2 = 0";
			System.out.println(enunciado);
			System.out.println("a) x1 = 2/3 x2 = 1\n"
					+ "b) x1 = -2/3 x2 = -1 \n"
					+ "c) x1 = -2/3 x2 = 1 \n"
					+ "d) x1 = -1 x2 = 2/3");
			
			opcao = Option();
			if(opcao.equalsIgnoreCase("c")) {
				AcertouResposta(status[0]);
				Vitoria_Frase();
				repete = false;
				}else {
					DanoRespostaErrada(status[0]);
					Derrota_Frase();
				
				}
			break;
			
		}
		}while(repete);	
	
	}
	
	static void Desafio3_Templo2() {
		//Variaveis
		int r;
		Random rng = new Random();
		Scanner entrada = new Scanner(System.in);
		String opcao, enunciado;
		boolean repete = true;
		//Enunciado
		System.out.println("TUDO QUE EU JOGO PARA VOCÊ, ESTÁ CONSEGUINDO RESOLVER... Bom...você é bom, faz tempo que não uso todo o meu poder, "
				+ "agora você conhecerá a minha fúria, dúvido que irá conseguir responder as próximas questões...");
		do {
			r = rng.nextInt(3);
		switch(r) {
		case 0:
			enunciado = "Qual é a resolução da seguinte equação do segundo grau x² – 4x – 5 = 0?";
			System.out.println(enunciado);
			System.out.println("a) x1 = 1 x2 = 5"
					+ "b) x1 = -1 x2 = 5\n"
					+ "c) x1 = -1 x2 = -5\n"
					+ "d) x1 = -5 x2 = 1\n");
			
			opcao = Option();
			
			if(opcao.equalsIgnoreCase("b")) {
				
				AcertouResposta(status[0]);
				Vitoria_Frase();
				repete = false;
			}else {
				DanoRespostaErrada(status[0]);
				Derrota_Frase();
				}
			break;
		case 1:
			enunciado = "Eu quero que me diga, temos na equação 10x² – 1000 = 0, duas raízes reais e distintas, a e b, que podem ser encontradas. "
					+ "Mostre a mim que sabe! Determine a² + b²";
			System.out.println(enunciado);
			System.out.println("a) 100 \n"
					+ "b) 50 \n"
					+ "c) 250\n"
					+ "d) 200");
			
			opcao = Option();	
			
			if(opcao.equalsIgnoreCase("d")) {
				AcertouResposta(status[0]);
				Vitoria_Frase();
				repete = false;
				}else {
					DanoRespostaErrada(status[0]);
					Derrota_Frase();
				
				}
			break;
		case 2:
			enunciado = "Quero que me diga qual será o resultado do produto das duas raízes da equação 5x² - 125 = 0";
			System.out.println(enunciado);
			System.out.println("a) -25\n"
					+ "b) x1 = 20 "
					+ "c) x1 = 25"
					+ "d) x1 = 30");
			
			opcao = Option();
			if(opcao.equalsIgnoreCase("a")) {
				AcertouResposta(status[0]);
				Vitoria_Frase();
				repete = false;
				}else {
					DanoRespostaErrada(status[0]);
					Derrota_Frase();
				
				}
			break;
			
		}
		}while(repete);	
		
		
	}
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-05-31 23:09:33.032
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-05-31 23:09:33.033
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-05-31 23:09:35.566
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Scanner;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Random;

public class O_Jogo {

	// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-VARIAVÉIS GLOBAIS-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
	public static Scanner entrada = new Scanner(System.in);
	public static String opcao = "";
	public static int dificuldade = 0;
	public static String nomeJogador = "bobi";
	public static int thread1 = 0;
	public static int thread2 = 0;
	public static int thread3 = 0;
	public static int[] status = { 100, 2 };

	// CORES DO TEXTO
	public static final String RESET = "\u001B[30m";
	public static final String RED = "\u001B[31m";
	public static final String GREEN = "\u001B[32m";
	public static final String YELLOW = "\u001B[33m";
	public static final String BLUE = "\u001B[34m";
	public static final String MAGENTA = "\u001B[35m";
	public static final String CYAN = "\u001B[36m";
	public static final String WHITE = "\u001B[37m";

	// CORES DO FUNDO DO TEXTO
	public static final String RESET_BACKGROUND = "\u001B[0m";
	public static final String BLACK_BACKGROUND = "\u001B[40m";
	public static final String RED_BACKGROUND = "\u001B[41m";
	public static final String GREEN_BACKGROUND = "\u001B[42m";
	public static final String YELLOW_BACKGROUND = "\u001B[43m";
	public static final String BLUE_BACKGROUND = "\u001B[44m";
	public static final String PURPLE_BACKGROUND = "\u001B[45m";
	public static final String CYAN_BACKGROUND = "\u001B[46m";
	public static final String WHITE_BACKGROUND = "\u001B[47m";

	// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-MAIN-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
	public static void main(String[] args) {

		boolean cond = true;
		

		do {

			System.out.print(Tabula1(6, "---Menu---\n\n"));
			System.out.print(Tabula2(2, "[1] Intruções", 6, "[2] Jogar\n"));
			System.out.print(Tabula2(2, "[3] Créditos", 6, "[4] Sair\n"));

			String opcao_Menu = Option();

			switch (opcao_Menu) {

			case "1":
				Instruções();
				break;

			case "2":

				Jogar();
				Hist_1();
				ExecutaTemplo2();
				ExecutaTemplo3(status);
				
				
				break;

			case "3":
				Créditos();
				break;

			case "4":

				cond = false;
				break;

			default:

				System.out.print(RED + Tabula1(6, "Opção não é válida!\n\n") + RESET);

			}

		} while (cond);

	}

	// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-JOGO-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

	// PROCEDIMENTO PARA ARMAZENAR AS INFORMAÇÕES DAS INTRUÇÕES
	public static void Instruções() {

		System.out.print("\n");
		Texto_Formatado("\nO objetivo do jogo é auxiliar o jogador em alguns conhecimentos da matemática."
				+ " Ao longo da jornada, serão apresentados conteúdos sobre a matéria em questão e "
				+ "apresentadas perguntas ao jogador. O mesmo deverá selecionar as opções válidas para que ele possa"
				+ " avançar no jogo e a cada questão, o jogador sofrerá um dano se errar, diminuindo assim sua vida."
				+ " O objetivo final do jogador, é avançar por todos os templos para derrotar o último chefe, sem perder toda a sua vida.");
		System.out.print("\n");
		Sair();

	}

	// PROCEDIMENTO PARA FAZER A 1º CHAMADA DO JOGO, PARA COLETAR AS INFORMAÇÕES DO
	// NOME DO JOGADOR, A DIFICULDADE DO JOGO E A HISTÓRIA INICIAL
	public static void Jogar() {

		Texto_Formatado(Tabula1(4, "---Escolha a sua dificuldade de jogo---\n\n")
				+ Tabula3(1, "[1] Fácil", 3, "[2] Normal", 3, "[3] Difícil"));

		boolean cond = true;

		do {

			String opcao_Menu = Option();
			switch (opcao_Menu) {

			case "1":
				dificuldade = 1;
				cond = false;
				break;

			case "2":
				dificuldade = 2;
				cond = false;
				break;

			case "3":
				dificuldade = 3;
				cond = false;
				break;

			default:
				System.out.print(RED + Tabula1(6, "Opção não é válida!\n\n") + RESET);

			}
		} while (cond);

		Texto_Formatado(Tabula1(4, "   ---Escolha o nome do seu jogador---"));
		nomeJogador = Option();

		boolean cond2 = true;
		do {

			Texto_Formatado(Tabula1(4,
					"---Você deseja que o nome do seu jogador seja " + RED + nomeJogador + RESET + " ?---\n\n")
					+ Tabula2(4, GREEN + "[S]" + RESET, 6, RED + "[N]" + RESET));
			String opcao_Menu = Option();

			switch (opcao_Menu.toUpperCase()) {
			case "S":
				cond2 = false;
				break;
			case "N":
				Texto_Formatado(Tabula1(4, "---Escolha o nome do seu jogador---"));
				nomeJogador = Option();
				break;
			default:
				System.out.print(RED + Tabula1(6, "Opção não é válida!\n\n") + RESET);
			}
		} while (cond2);

	}

	// PROCEDIMENTO PARA ARMAZENAR AS INFORMAÇÕES DOS CRÉDITOS
	public static void Créditos() {

		System.out.print("\n");
		Texto_Formatado(Tabula3(2,"Gustavo Tozeti",2t-Matheus Cavalcanti\n\t\t\t\t\t-Renan Kesper");
		System.out.print("\n");
		Sair();

	}

	
	// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-HISTÓRIA-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
	
	// PRIMEIRA NARRATIVA DO JOGO
	public static void Hist_1() {

		System.out.print("\n");
		
		Texto_Formatado(
				
				
				Dialogo("Narrador",WHITE) + "\n- Aos escombros, uma leve página, parecida de um diário, pousa sobre o rosto de "+ nomeJogador +". Aos sustos, " + nomeJogador +" acorda e começa a ler a página." +
				
				Dialogo(nomeJogador,WHITE)+ GREEN
				+ "\n- \"Reza a lenda que Ariandre era um lugar próspero, cheio de magia e encanto, onde todos os seres viviam em harmonia e em paz. Um lugar tão belo,"					//TEXTO LIDO PELO PERSONAGEM
				+ " que a matemática era a base de força para grandes magos. Mas isso é claro, antes do grande acontecimento. . .Ninguém sabe ao certo, nem ao menos como,"				
				+ " mas naquela tarde esse lugar tão calmo e pleno, foi reduzido a cinzas e escombros, uma enorme escuridão pairou pelos céus e tomou Ariandre por inteiro "			
				+ "e com um simples clarão. . .tudo foi destruído. Após momentos agoniantes, enfim o motivo disso tudo. . . sim, ele que era apenas uma fábula de centenas de "			
				+ "anos, de contos muito antigos, enfim ressurgiu. . . Ancelot tinha despertado. O grande rei demônio estava presente novamente, "			
				+ "para aprisionar toda a matemática de Ariandre e ser o detentor de toda a magia. Já se passaram alguns meses depois disso tudo, mas agora espero "					
				+ "ter forças para enfrentá-lo, mas a cada dia que se passa nessas catedrais do abismo perco mais e mais da minha sanidade. Talvez eu seja a última esperança "			
				+ "de Ariandre, mas caso alguém esteja lendo isso, significa que Ancelot venceu e Ariandre para sempre estará sob o seu domínio.\"" 									//TEXTO LIDO PELO PERSONAGEM
				
				+ Dialogo(nomeJogador,WHITE) +  GREEN + "\n- Mas. . . mas como? Meses? Estava tudo certo, ele estava em minhas mãos, como foi tudo isso desmoronar. Minha "					//FALA DO PERSONAGEM
				+ "cabeça dói, são memórias que me vem, mas o que será que aconteceu? Por que eu estou nas catedrais e porque Ariandre está destruída? Será isso um sonho?"
				+ " Eu preciso descobrir o que aconteceu, mas me sinto estranho. Parece que não tenho mais meus poderes. Será que eu consigo canalizar algo??"
				
				+ Dialogo("Narrador",WHITE) + "\n- "+nomeJogador+ " tenta utilizar, uma de suas magias vinda através dos poderes da matemática, mas sem sucesso! "
				+ "E como em um turbilhão de memórias, "+nomeJogador+" começa a se lembrar daquele fatídico dia.\n\n"
						
				+Tabula1(4,"Alguns meses antes...") 
				
				+ Dialogo(nomeJogador,WHITE) +  GREEN + "\n - Finalmente, depois de anos de estudos e cálculos, finalmente irei despertar Ancelot e enfim obter o seu"
				+ " poder supremo."
				
				+ Dialogo("Narrador",WHITE) + "\n- "+nomeJogador+ " por mais que fosse extremamente forte, jamais saberia que o terrível Ancelot portava de uma maldição, que "
				+ "quem o invoca-se traria destruição ao seu mundo. Ao passo em que o ritual de invocação se iniciava, um grande portal cheio de trevas se abriu no chão e dele "
				+ "saía o fim dos tempos."
				
				+ Dialogo("Ancelot",WHITE) +  RED + "\n - Finalmente livre!!"	
				
				+ Dialogo(nomeJogador,WHITE) +  GREEN + "\n - Jamais Ancelot, eu "+ nomeJogador +" sou o ser mais supremo de toda Ariandre, você não é pareo para os meus poderes. Apenas te "
				+ "invoquei para obter toda sua fonte de poder e assim te derrotá-lo para sempre. "
				
				+ Dialogo("Ancelot",WHITE) +  RED + "\n - Tolo, você não é a primeira pessoa a tentar isso. Vocês todos tentam, mas todos esquecem da maldição!!"	
				
				+ Dialogo(nomeJogador,WHITE) +  GREEN + "\n - Maldição? Que maldição?!"
				
				+ Dialogo("Ancelot",WHITE) +  RED + "\n - Pelo visto, você não está preparado HAHAHAHAH. Mas talvez o que eu faça aqui, sirva de lição para você."
				
				+ Dialogo("Narrador",WHITE) + "\n- E com uma enorme força e magia, que surpreendia até "+nomeJogador+", Ancelot conseguiu drenar todos os seus poderes. Com vários feixes de luz, "
				+ nomeJogador+" via seus poderes se esvaindo ao longo de si."
				
				+ Dialogo("Ancelot",WHITE) +  RED + "\n - "+nomeJogador+", você me parece interessante. Irei espalhar esses seus poderes nas mais profundas terras de Ariandre e caso você sobreviva, terá seus "
				+ "poderes de volta para me enfrentar."
				
				+ Dialogo("Narrador",WHITE) + "\n- Com um imenso clarão, tudo ficou em silêncio. Até agora...\n\n"
				
				+Tabula1(4,"Atualmente...")
				
				+ Dialogo(nomeJogador,WHITE) +  GREEN + "\n - Droga! Preciso recuperar meus poderes e derrotar Ancelot. Mas onde estou?"
				
				+ Dialogo("Narrador",WHITE) + "\n- "+nomeJogador+" olha em volta e se depara com escombros e ruínas. Mas começa a perceber que existem símbolos escritos nas paredes que são familiares. "
				+ "Estes símbolos remetem a algumas descrições dos templos da perdição das catedrais. É de grande espanto, pois "+nomeJogador+" ao reconhecer às escritas, lembrou que os templos eram mitos da terra "
				+ "antiga e que eram locais responsáveis por um grande armazenamento de magia."
				
				+ Dialogo(nomeJogador,WHITE) +  GREEN + "\n - Se ele disse que meus poderes estão nas mais profundas terras de Ariandre, então só podem estar espalhados entre os três templos daqui. "
				+ "Preciso ir em frente!"
				
				);
		
		System.out.print("\n");

	}

	
	// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-FERRAMENTAS DE TEXTO-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

	// PROCEDIMENTO CRIADO PARA FORMATAR QUALQUER TEXTO, PARA PADRONIZAR O LAYOUT DA
	// MENSAGEM COM BASE EM UM VALOR PRÉ DETERMINADO
	public static void Texto_Formatado(String frase) {

		String texto = frase;
		String[] palavras = texto.split(" ");

		int contadorQntLetras = 0;
		int limiteLinha = 140;

		for (int i = 0; i < limiteLinha; i++) {
			System.out.print(RED + "=" + RESET);
		}
		System.out.print("\n");

		for (String palavra : palavras) {

			if (contadorQntLetras + palavra.length() >= limiteLinha) {
				contadorQntLetras = 0;
				System.out.print("\n");
			}

			System.out.print(palavra + " ");
			Timer2();
			if (palavra.length()>20){
				contadorQntLetras = 0;
			}
			else {
			contadorQntLetras += palavra.length() + 1;
			}
			
			}
		System.out.println("\n");

		for (int i = 0; i < limiteLinha; i++) {
			System.out.print(RED + "=" + RESET);
		}

	}

	// PROCEDIMENTOS CRIADOS PARA TABULAR QUALQUER TEXTO, PARA PADRONIZAR O LAYOUT DA
	// MENSAGEM
	public static String Tabula1(int t, String s) {

		String tab = "\t";
		String frase = "";
		for (int i = 0; i <= t; i++) {
			frase += tab;
		}
		frase += s;

		return frase;
	}

	public static String Tabula2(int t, String s, int tt, String ss) {

		String tab = "\t";
		String frase = "";

		for (int i = 0; i <= t; i++) {
			frase += tab;
		}
		frase += s;
		for (int i = 0; i <= tt; i++) {
			frase += tab;
		}
		frase += ss;
		return frase;
	}

	public static String Tabula3(int t, String s, int tt, String ss, int ttt, String sss) {

		String tab = "\t";
		String frase = "";

		for (int i = 0; i <= t; i++) {
			frase += tab;
		}
		frase += s;
		for (int i = 0; i <= tt; i++) {
			frase += tab;
		}
		frase += ss;
		for (int i = 0; i <= ttt; i++) {
			frase += tab;
		}
		frase += sss;
		return frase;
	}

	// PROCEDIMENTOS CRIADO PARA PADRONIZAR OS DIÁLOGOS
	public static String Dialogo(String Nome, String Cor) {
		String texto = "\n\n" + BLACK_BACKGROUND + Cor +Nome+ RESET + RESET_BACKGROUND;
		return texto;
		}
	
	// PROCEDIMENTOS CRIADO PARA PRINTAR A MENSAGEM ANTES DO BOSS
	static void FormataTexto1(String frase) {

		String[] palavra = frase.split(" ");

		for (String each : palavra) {
			System.out.print(each + " ");
			Timer2();
		}
	}

	// PROCEDIMENTOS CRIADO PARA PRINTAR A MENSAGEM DE GAME OVER
	static void FormataTexto2(String frase) {

		String[] palavra = frase.split(" ");

		for (String each : palavra) {
			System.out.print(each);
			Timer2();
		}

		System.out.print(" ");
	}
	
	// PROCEDIMENTOS CRIADO PARA ARMAZENAR A COLEÇÃO DE FRASES PARA ACERTOS
	static void Vitoria_Frase () {
		
		ArrayList<String> vitoria = new ArrayList();
		vitoria.add("Acertou novamente, droga droga droga...\n");
		vitoria.add("Vejo que acertou mais uma...\n");
		
		Collections.shuffle(vitoria);
		Collections.shuffle(vitoria);
		
		
		System.out.println(Dialogo("Ancelot",WHITE) +  RED + " - " + vitoria.get(0) + RESET);
		
	}
	
	// PROCEDIMENTOS CRIADO PARA ARMAZENAR A COLEÇÃO COLEÇÃO DE FRASES PARA ERROS
	static void Derrota_Frase () {
		
		ArrayList<String> derrota = new ArrayList();
		derrota.add("Você não conseguirá prosseguir nem que tente mil vezes.\n");
		derrota.add("Você não é capaz de seguir em frente\n");
		
		Collections.shuffle(derrota);
		Collections.shuffle(derrota);
		
		System.out.println(Dialogo("Ancelot",WHITE) +  RED + " - " + derrota.get(0) + RESET);
	}
	
	// PROCEDIMENTOS CRIADO PARA MOSTRAR MENSAGEM DE ACORDO COM A VIDA 
	// DO PERSONAGEM
	static void AcertouResposta(int healthPoints) {
		System.out.println("\nA resposta está...");
		Timer();
		System.out.println("...");
		Timer();
		System.out.println("...");
		Timer();
		System.out.println(GREEN + "Certa! :D\n" + RESET);

		if (healthPoints >= 30 && healthPoints < 65) {
			System.out.println("Parece que foi um desafio para você.");
		}
		if (healthPoints < 30) {
			System.out.println("Foi por pouco que você conseguiu passar!");
		}

	}
	
	// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-FERRAMENTAS DE INPUT-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

	// FUNÇÃO CRIADA PARA RETONAR UMA OPÇÃO DESEJADA DO USUÁRIO
	public static String Option() {
		System.out.print(BLACK_BACKGROUND + WHITE + "\n***Digite sua opção:" + RESET + RESET_BACKGROUND + " ");
		opcao = entrada.next();
		System.out.print("\n");
		return opcao;
	}

	// PROCEDIMENTO CRIADO PARA SAIR DE UMA OPÇÃO DE UM MENU
	public static void Sair() {
		Scanner sc = new Scanner(System.in);
		System.out.print("\nPressione a tecla ENTER para voltar!\n");
		sc.nextLine();
		System.out.println(" ");
	}

	
	// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-FERRAMENTAS DO JOGO-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

	// FUNÇÃO CRIADA PARA CALCULAR O DANO
	static int DanoRespostaErrada(int healthPoints) {
		Random dado = new Random();
		int jogada;

		System.out.println("\nA resposta está...");
		Timer();
		System.out.println("...");
		Timer();
		System.out.println("...");
		Timer();
		System.out.println(RED + "Errada :(" + RESET);
		System.out.println("\nAgora iremos jogar o dado para saber quanto de dano você irá tomar.");
		System.out.println("O número que caiu no dado é...");
		Timer();
		System.out.println("...");
		Timer();
		System.out.println("...");
		Timer();

		jogada = dado.nextInt(20) + 1;

		System.out.printf("**\t%d\t**\n", jogada);

		if (jogada <= 5) {
			System.out.println("Parece que você deu sorte e se esquivou do dano.");
		} else if (jogada > 5 && jogada <= 15) {
			System.out.println("Você levou 20 de dano");
			healthPoints = healthPoints - (20 + (5 * dificuldade));
		} else if (jogada > 15) {
			System.out.println("Você tomou dano crítico!");
			healthPoints = healthPoints - (30 + (5 * dificuldade));
		}

		System.out.printf("Total HP: %d\n\n", healthPoints);
		return healthPoints;
	}

	// PROCEDIMENTO CRIADO PARA DAR GAME-OVER AO JOGO
	static void GameOver() {
		System.out.println("Seu HP chegou a 0");

		String game = "G A M E";
		String over = "O V E R";

		FormataTexto2(game);
		FormataTexto2(over);

		System.out.println("\n");
	}

	// FUNÇÃO CRIADA PARA USAR POTIONS
	static int[] UsePotion(int healthPoints, int qntPotions) {

		Scanner input = new Scanner(System.in);
		boolean condicao = true;
		char opcao = 0;
		int[] status = new int[2];

		System.out.printf("HP atual: %d\nQuantidade de potions: %d\n\n", healthPoints, qntPotions);

		do {
			try {
				System.out.println("Você tem certeza que quer usar uma potion?\n" + GREEN + "[S]" + RESET + " ou " + RED
						+ "[N]\n" + RESET);
				System.out.print("Escolha: ");
				opcao = input.next().toUpperCase().charAt(0);
			} catch (Exception e) {
				System.out.println("Caracter invalido.");
			}

			if (qntPotions > 0) {
				switch (opcao) {
				case 'S':
					healthPoints = healthPoints + 20;
					qntPotions--;

					if (healthPoints > 100) {
						do {
							healthPoints--;
						} while (healthPoints != 100);
					}
					System.out.println("Você usou uma potion.");
					System.out.printf("Quantidade potions: %d\n", qntPotions);
					System.out.printf("Total HP: %d\n\n", healthPoints);
					condicao = false;
					break;
				case 'N':
					System.out.println("Você guardou a potion de volta na bolsa\n");
					condicao = false;
					break;
				}
			} else {
				System.out.println("Você não tem potions");
				condicao = false;
			}

		} while (condicao);

		status[0] = healthPoints;
		status[1] = qntPotions;

		return status;
	}

	// PROCEDIMENTOS DE TEMPO PARA IMPRIMIR MENSAGENS
	static void Timer() {
		try {
			Thread.sleep(thread1);
		} catch (Exception e) {

		}
	}

	static void Timer2() {
		try {
			Thread.sleep(thread2);
		} catch (Exception e) {

		}
	}

	static void Timer3() {
		try {
			Thread.sleep(thread3);
		} catch (Exception e) {

		}
	}

	// FUNÇÃO CRIADA PARA GERAR AS PERGUNTAS AO JOGADOR
	static int[] ProcessoAlternativas_Geral(String[] opcoes, int[] status, String respostaCerta) {
		// Area para declarar variaveis
		Scanner sc = new Scanner(System.in);
		String resposta;
		boolean condicao = true;

		System.out.printf("[ A ] %S\n", opcoes[0]);
		Timer2();
		System.out.printf("[ B ] %S\n", opcoes[1]);
		Timer2();
		System.out.printf("[ C ] %S\n", opcoes[2]);
		Timer2();
		System.out.printf("[ D ] %S\n", opcoes[3]);
		Timer2();
		System.out.printf("[ E ] %S\n\n", opcoes[4]);
		Timer2();
		System.out.println("Resposta certa: " + respostaCerta.toUpperCase());
		Timer2();

		////////////////////////////////////////////////////////////////////////
		// Area para processo de alternativas
		do {

			resposta = Option().toUpperCase();
			if (status[0] <= 0) {
				GameOver();
				condicao = false;
			}

			switch (resposta.charAt(0)) {
			case 'A':
				if (opcoes[0].equals(respostaCerta)) {
					AcertouResposta(status[0]);
					condicao = false;
				} else {
					status[0] = DanoRespostaErrada(status[0]);
					if (status[0] <= 0) {
						GameOver();
						condicao = false;
					}
				}
				break;
			case 'B':
				if (opcoes[1].equals(respostaCerta)) {
					AcertouResposta(status[0]);
					condicao = false;
				} else {
					status[0] = DanoRespostaErrada(status[0]);
					if (status[0] <= 0) {
						GameOver();
						condicao = false;
					}
				}
				break;

			case 'C':
				if (opcoes[2].equals(respostaCerta)) {
					AcertouResposta(status[0]);
					condicao = false;
				} else {
					status[0] = DanoRespostaErrada(status[0]);
					if (status[0] <= 0) {
						GameOver();
						condicao = false;
					}
				}
				break;
			case 'D':
				if (opcoes[3].equals(respostaCerta)) {
					AcertouResposta(status[0]);
					condicao = false;
				} else {
					status[0] = DanoRespostaErrada(status[0]);
					if (status[0] <= 0) {
						GameOver();
						condicao = false;
					}
				}
				break;
			case 'E':
				if (opcoes[4].equals(respostaCerta)) {
					AcertouResposta(status[0]);
					condicao = false;
				} else {
					status[0] = DanoRespostaErrada(status[0]);
					if (status[0] <= 0) {
						GameOver();
						condicao = false;
					}
				}
				break;
			case 'P':
				status = UsePotion(status[0], status[1]);
			}
		} while (condicao);

		return status;
	}

		
// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-TEMPLOS-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

	// TEMPLO 3
	static int[] ExecutaTemplo3(int[] status) {
		Scanner sc = new Scanner(System.in);
		boolean condicao = true;

		do {
			status = Desafio1_Templo3(status);
			if (status[0] > 0) {
				System.out.println("\nVocê concluiu o primeiro desafio!");
				Timer2();
				System.out.println("Parabéns, você ganhou uma Poção!");
				status[1]++;
				Timer2();
				System.out.println("HP: " + status[0]);
				Timer2();
				System.out.println("Poção: " + status[1]);
				Timer();
				System.out.println(" ");

				condicao = false;
			} else {
				System.out.println("Você terá que refazer o desafio\n");
				status[0] = 100;
			}
		} while (condicao);

		System.out.print("\nAperte ENTER para começar o segundo Deafio");
		sc.nextLine();
		System.out.println(" ");

		do {
			status = Desafio2_Templo3(status);
			if (status[0] > 0) {
				System.out.println("\nVocê concluiu o segundo desafio!");
				Timer2();
				System.out.println("Parabéns, você ganhou uma Poção!");
				status[1]++;
				Timer2();
				System.out.println("HP: " + status[0]);
				Timer2();
				System.out.println("Poção: " + status[1]);
				Timer();
				System.out.println(" ");

				condicao = false;
			} else {
				System.out.println("Você terá que refazer o desafio\n");
				status[0] = 100;
			}
		} while (condicao);

		System.out.print("\nAperte ENTER para começar o último Deafio");
		sc.nextLine();
		System.out.println(" ");

		do {
			status = Desafio3_Templo3(status);
			if (status[0] > 0) {
				System.out.println("\nVocê concluiu o último desafio!");
				Timer2();
				System.out.println("Parabéns, você ganhou uma Poção!");
				status[1]++;
				Timer2();
				System.out.println("HP: " + status[0]);
				Timer2();
				System.out.println("Poção: " + status[1]);
				Timer();
				System.out.println(" ");

				condicao = false;
			} else {
				System.out.println("Você terá que refazer o desafio\n");
				status[0] = 100;
			}
		} while (condicao);

		Timer();
		System.out.println("Você conseguiu concluiro o Templo das Conversões");
		Timer2();
		FormataTexto1("Você está preparado para o ");
		FormataTexto2("F I N A L ");
		FormataTexto2("B O S S ");
		FormataTexto2("? ? ?");
		System.out.println("\n");
		return status;
	}

	// DESAFIO É CONVERTER UM NÚMERO QUE ESTÁ EM UMA BASE PARA OUTRA
	static int[] Desafio1_Templo3(int[] status) {
		int baseInicial, baseConversao;
		String respostaCerta;

		String[] numeroInicial = new String[1];
		String[] opcoes = new String[5];
		ArrayList<String> respostaErrada = new ArrayList();

		////////////////////////////////////////////////////////////////////////
		// Area para preparar os numeros
		baseInicial = DeterminaBase_Templo3(); // Determinando a base standard

		do {
			baseConversao = DeterminaBase_Templo3(); // Determinando a base de conversao
		} while (baseConversao == baseInicial);

		numeroInicial[0] = DeterminaNumero_Templo3(baseInicial); // Determinando o numero standard

		respostaCerta = DeterminaNumeroConv_Templo3(numeroInicial, baseInicial, baseConversao); // Determinando o numero
																								// de conversao (certo)

		respostaErrada.add(respostaCerta); // Adicionando a resposta certa nas opcoes

		for (int i = 0; i < 4; i++) {
			respostaErrada.add(DeterminaOpcoes(baseConversao, respostaCerta)); // Adicionando opcoes erradas
		}

		Collections.shuffle(respostaErrada); // Embaralhando as opcoes para que haja uma aleatoriedade
		Collections.shuffle(respostaErrada);

		for (int i = 0; i < opcoes.length; i++) {
			opcoes[i] = respostaErrada.get(i); // Transferindo as opcoes do ArrayList para uma String[]
		}

		////////////////////////////////////////////////////////////////////////
		// Area de logica do game
		Texto_Formatado(Tabula1(4, "***\tWELCOME TO THE 1ST GAME\t***\n"));

		System.out.printf("\nConverta o numero %S que esta na base %d para a base %d\n\n", numeroInicial[0],
				baseInicial, baseConversao);
		Timer2();

		status = ProcessoAlternativas_Geral(opcoes, status, respostaCerta);

		return status;
	}

	// DESAFIO É SOMAR DOIS NÚMEROS QUE ESTÃO EM UMA BASE E CONVERTER PARA OUTRO
	static int[] Desafio2_Templo3(int[] status) {
		// Area para inicializar variaveis
		int baseInicial, baseConversao;
		String respostaCerta;

		String[] numeroInicial = new String[2];
		String[] opcoes = new String[5];
		ArrayList<String> respostaErrada = new ArrayList();
		////////////////////////////////////////////////////////////////////////
		// Area para declarar os numeros

		baseInicial = DeterminaBase_Templo3(); // Gerar a base standard

		do {
			baseConversao = DeterminaBase_Templo3(); // Gerar a base para conversao
		} while (baseConversao == baseInicial);

		numeroInicial[0] = DeterminaNumero_Templo3(baseInicial); // Gerar o numero standard A
		numeroInicial[1] = DeterminaNumero_Templo3(baseInicial); // Gerar o numero standard B

		respostaCerta = DeterminaNumeroConv_Templo3(numeroInicial, baseInicial, baseConversao); // Gerar a resposta
																								// certa

		respostaErrada.add(respostaCerta); // Adicionando a resposta certa no ArrayList

		for (int i = 0; i <= 3; i++) {
			respostaErrada.add(DeterminaOpcoes(baseConversao, respostaCerta)); // Criando respostas erradas para o
																				// ArrayList
		}

		Collections.shuffle(respostaErrada); // Embaralhando as opcoes
		Collections.shuffle(respostaErrada);

		for (int i = 0; i < opcoes.length; i++) {
			opcoes[i] = respostaErrada.get(i); // Adicionando as opcoes embaralhadas numa String para fazer o desafio
		}

		Texto_Formatado(Tabula1(4, "***\tWELCOME TO THE 2ND GAME\t***\n"));
		Timer2();
		System.out.printf("\nFaça a seguinte conversão:\n%S + %S (na base %d) = X (na base %d)\n\n", numeroInicial[0],
				numeroInicial[1], baseInicial, baseConversao);
		Timer2();

		ProcessoAlternativas_Geral(opcoes, status, respostaCerta);

		return status;
	}

	// DESAFIO É MULTIPLICAR DOIS NÚMEROS QUE ESTÃO EM UMA BASE E CONVERTER PARA OUTRO
	static int[] Desafio3_Templo3(int[] status) {
		// Area para declarar variaveis
		int baseInicial, baseConversao, aux;
		String respostaCerta;

		String[] numeroInicial = new String[2];
		String[] opcoes = new String[5];
		ArrayList<String> respostaErrada = new ArrayList();
		////////////////////////////////////////////////////////////////////////
		// Area para iniciar variaveis
		baseInicial = DeterminaBase_Templo3(); // Gerar a base inicial

		do {
			baseConversao = DeterminaBase_Templo3(); // Gerar a base para conversao
		} while (baseConversao == baseInicial);

		numeroInicial[0] = DeterminaNumero_Templo3(baseInicial); // Gerar numero standard A
		numeroInicial[1] = DeterminaNumero_Templo3(baseInicial); // Gerar numero standard B

		aux = (Integer.parseInt(numeroInicial[0], baseInicial)) * (Integer.parseInt(numeroInicial[1], baseInicial)); // Convertendo
																														// o
																														// produto
																														// dos
																														// numeros
																														// standard
																														// para
																														// int

		respostaCerta = Integer.toString(aux, baseConversao); // Convertendo o produto dos numeros standard para a base
																// de conversao

		respostaErrada.add(respostaCerta); // Adicionando a resposta certa nas opcoes

		for (int i = 0; i <= 3; i++) {
			respostaErrada.add(DeterminaOpcoes(baseConversao, respostaCerta)); // Adicionando as opcoes erradas
		}

		Collections.shuffle(respostaErrada); // Embaralhando as opcoes
		Collections.shuffle(respostaErrada);

		for (int i = 0; i < opcoes.length; i++) {
			opcoes[i] = respostaErrada.get(i);// Adicionando as opcoes em String para fazer o desafio
		}

		Texto_Formatado(Tabula1(4, "***\tWELCOME TO THE 3ND GAME\t***\n"));

		System.out.printf("\nFaça a seguinte conversão:\n%S * %S (na base %d) = X (na base %d)\n\n", numeroInicial[0],
				numeroInicial[1], baseInicial, baseConversao);
		Timer2();

		ProcessoAlternativas_Geral(opcoes, status, respostaCerta);

		return status;
	}

	// FUNÇÕES DO TEMPLO 3
	static int DeterminaBase_Templo3() {

		ArrayList<Integer> bases = new ArrayList();

		bases.add(2);
		bases.add(8);
		bases.add(10);
		bases.add(16);

		Collections.shuffle(bases);
		Collections.shuffle(bases);

		return bases.get(0);
	}

	static String DeterminaNumero_Templo3(int baseInicial) {

		Random dado = new Random();
		int numRandom;
		String baseAconv = null;

		do {
			numRandom = dado.nextInt(2000);
		} while (numRandom <= 50);

		switch (baseInicial) {
		case 2:
			baseAconv = Integer.toBinaryString(numRandom);
			break;
		case 8:
			baseAconv = Integer.toOctalString(numRandom);
			break;
		case 10:
			baseAconv = Integer.toString(numRandom);
			break;
		case 16:
			baseAconv = Integer.toHexString(numRandom);
			break;
		}

		return baseAconv;
	}

	static String DeterminaOpcoes(int baseConversao, String respostaCerta) {
		Random dado = new Random();
		int aux = Integer.parseInt(respostaCerta, baseConversao);
		String opcoesFalsas;

		do {
			aux = aux + dado.nextInt(30);
			aux = aux - 15;
			opcoesFalsas = Integer.toString(aux, baseConversao);
		} while (opcoesFalsas.equals(respostaCerta));

		return opcoesFalsas;
	}

	static String DeterminaNumeroConv_Templo3(String[] numeroInicial, int baseInicial, int baseConversao) {
		int aux = 0;
		String respostaConversao;

		for (int i = 0; i < numeroInicial.length; i++) {
			aux = aux + Integer.parseInt(numeroInicial[i], baseInicial);
		}

		respostaConversao = Integer.toString(aux, baseConversao);

		return respostaConversao;
	}

	// TEMPLO 2
	static void ExecutaTemplo2(){
		Desafio1_Templo2();
		Desafio2_Templo2();
		Desafio3_Templo2();
}
	
	// FUNÇÕES DO TEMPLO 2
	static void Desafio1_Templo2() {
		//variáveis
		int r;
		Random rng = new Random();
		Scanner entrada = new Scanner(System.in);
		String opcao, enunciado;
		boolean repete = true;
				
		//Enunciado
		System.out.println("Olá! Nesse templo nós teremos três testes relacionados a equações do segundo grau.");
				
		//Questão
				
		//RANDOMIZANDO A QUESTÃO E REPETINDO ATÉ O ACERTO OU VIDA = 0
		
		do{
			r = rng.nextInt(3);
		switch(r) {
		//RECEBENDO A QUESTÃO RANDOMIZADA E RESOLVENDO A QUESTÃO.
			case 0:
				enunciado = "Primeiramente me diga, quais são os coeficiêntes dessa equação de segundo grau. 2x² + x – 3 = 0";
				System.out.println(enunciado);
				System.out.println("a) a = -2 b = 0 c = -3 \n"
						+ "b) a = 2 b = 1 c = 3 \n"
						+ "c) a = 2 b = 1 c = -3 \n"
						+ "d) a = 2 b = 0 c = -3");
				
				opcao = Option();
			
				if(opcao.equalsIgnoreCase("c")) {
					AcertouResposta(status[0]);
					Vitoria_Frase();
					repete = false;
				}else {
					DanoRespostaErrada(status[0]);
					Derrota_Frase();
				}
				break;
				
			case 1:
				enunciado = "Primeiramente me diga, quais são os coeficiêntes dessa equação de segundo grau. –3x² + 18x – 15 = 0.";
				System.out.println(enunciado);
				System.out.println("a) a = -3 b = -18 c = -15 \n"
						+ "b) a = 3 b = 18 c = -15 \n"
						+ "c) a = -3 b = 18 c = 15 \n"
						+ "d) a = -3 b = 18 c = -15");
				
				opcao = Option();
				
				if(opcao.equalsIgnoreCase("d")) {
					AcertouResposta(status[0]);
					Vitoria_Frase();
					repete = false;
				}else {
					DanoRespostaErrada(status[0]);
					Derrota_Frase();
				}
				break;
				
			case 2:
				enunciado = "Primeiramente me diga, quais são os coeficiêntes dessa equação de segundo grau. 3x² – x – 1 = 0.";
				System.out.println(enunciado);
				
				System.out.println("a) a = -3 b = -1 c = -1 \n"
						+ "b) a = 3 b = -1 c = -1 \n"
						+ "c) a = -3 b = 0 c = 1 \n"
						+ "d) a = 3 b = -1 c = 1");
				
				opcao = Option();
				
				if(opcao.equalsIgnoreCase("b")) {
					AcertouResposta(status[0]);
					Vitoria_Frase();
					repete = false;
				}else {
					DanoRespostaErrada(status[0]);
					Derrota_Frase();
				}
				break;
		}
		
	}while(repete);
		}
	
	static void Desafio2_Templo2() {
		//variáveis
		int r;
		Random rng = new Random();
		Scanner entrada = new Scanner(System.in);
		String opcao, enunciado;
		boolean repete = true;
		//Enunciado
		System.out.println("Aaaah, sim, vejo que você foi capaz de passar pelo meu primeiro teste! Maravilhoso, vamos apimentar um pouco mais as coisas");
		
		//Randomizando a questão
		
		
		//RECEBENDO A QUESTÃO RANDOMIZADA E RESOLVENDO A QUESTÃO.
		do {
			r = rng.nextInt(3);
		switch(r) {
		case 0:
			enunciado = "Qual é a maior raiz da equação -2x² + 3x + 5 = 0?";
			System.out.println(enunciado);
			System.out.println("a) -1\n"
					+ "b) -2,5\n"
					+ "c)2\n"
					+ "d)2,5\n");
			
			opcao = Option();
			
			if(opcao.equalsIgnoreCase("d")) {
				
				AcertouResposta(status[0]);
				Vitoria_Frase();
				repete = false;
			}else {
				DanoRespostaErrada(status[0]);
				Derrota_Frase();
			}
			break;
		case 1:
			enunciado = "Qual é a menor raiz da equação 2x² + 7x + 5 = 0";
			System.out.println(enunciado);
			System.out.println("a) -1 \n"
					+ "b) 1\n"
					+ "c) -5/2\n"
					+ "d) -2");
			
			opcao = Option();	
			
			if(opcao.equalsIgnoreCase("c")) {
				AcertouResposta(status[0]);
				Vitoria_Frase();
				repete = false;
				}else {
					DanoRespostaErrada(status[0]);
					Derrota_Frase();
				
				}
			break;
		case 2:
			enunciado = "Quais são as duas raízes da equação 3x² – x – 2 = 0";
			System.out.println(enunciado);
			System.out.println("a) x1 = 2/3 x2 = 1\n"
					+ "b) x1 = -2/3 x2 = -1 \n"
					+ "c) x1 = -2/3 x2 = 1 \n"
					+ "d) x1 = -1 x2 = 2/3");
			
			opcao = Option();
			if(opcao.equalsIgnoreCase("c")) {
				AcertouResposta(status[0]);
				Vitoria_Frase();
				repete = false;
				}else {
					DanoRespostaErrada(status[0]);
					Derrota_Frase();
				
				}
			break;
			
		}
		}while(repete);	
	
	}
	
	static void Desafio3_Templo2() {
		//Variaveis
		int r;
		Random rng = new Random();
		Scanner entrada = new Scanner(System.in);
		String opcao, enunciado;
		boolean repete = true;
		//Enunciado
		System.out.println("TUDO QUE EU JOGO PARA VOCÊ, ESTÁ CONSEGUINDO RESOLVER... Bom...você é bom, faz tempo que não uso todo o meu poder, "
				+ "agora você conhecerá a minha fúria, dúvido que irá conseguir responder as próximas questões...");
		do {
			r = rng.nextInt(3);
		switch(r) {
		case 0:
			enunciado = "Qual é a resolução da seguinte equação do segundo grau x² – 4x – 5 = 0?";
			System.out.println(enunciado);
			System.out.println("a) x1 = 1 x2 = 5"
					+ "b) x1 = -1 x2 = 5\n"
					+ "c) x1 = -1 x2 = -5\n"
					+ "d) x1 = -5 x2 = 1\n");
			
			opcao = Option();
			
			if(opcao.equalsIgnoreCase("b")) {
				
				AcertouResposta(status[0]);
				Vitoria_Frase();
				repete = false;
			}else {
				DanoRespostaErrada(status[0]);
				Derrota_Frase();
				}
			break;
		case 1:
			enunciado = "Eu quero que me diga, temos na equação 10x² – 1000 = 0, duas raízes reais e distintas, a e b, que podem ser encontradas. "
					+ "Mostre a mim que sabe! Determine a² + b²";
			System.out.println(enunciado);
			System.out.println("a) 100 \n"
					+ "b) 50 \n"
					+ "c) 250\n"
					+ "d) 200");
			
			opcao = Option();	
			
			if(opcao.equalsIgnoreCase("d")) {
				AcertouResposta(status[0]);
				Vitoria_Frase();
				repete = false;
				}else {
					DanoRespostaErrada(status[0]);
					Derrota_Frase();
				
				}
			break;
		case 2:
			enunciado = "Quero que me diga qual será o resultado do produto das duas raízes da equação 5x² - 125 = 0";
			System.out.println(enunciado);
			System.out.println("a) -25\n"
					+ "b) x1 = 20 "
					+ "c) x1 = 25"
					+ "d) x1 = 30");
			
			opcao = Option();
			if(opcao.equalsIgnoreCase("a")) {
				AcertouResposta(status[0]);
				Vitoria_Frase();
				repete = false;
				}else {
					DanoRespostaErrada(status[0]);
					Derrota_Frase();
				
				}
			break;
			
		}
		}while(repete);	
		
		
	}
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-05-31 23:09:35.568
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-05-31 23:09:35.569
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)
!SESSION 2021-06-01 20:00:30.720 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-06-01 20:00:39.253
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-06-01 20:00:39.253
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4888425d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3c8758d1,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.e4.ui.workbench 4 0 2021-06-01 20:00:40.428
!MESSAGE Unable to retrieve the bundle from the URI: bundleclass://com.genuitec.eclipse.meexplorer/com.genuitec.eclipse.meexplorer.breadcrumb.e4.BreadCrumbContainer

!ENTRY org.eclipse.ui.workbench.texteditor 4 2 2021-06-01 20:00:47.376
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.ui.workbench.texteditor".
!STACK 0
java.util.ConcurrentModificationException
	at java.base/java.util.ArrayList$Itr.checkForComodification(ArrayList.java:1013)
	at java.base/java.util.ArrayList$Itr.next(ArrayList.java:967)
	at org.eclipse.jdt.internal.ui.text.spelling.engine.AbstractSpellDictionary.isCorrect(AbstractSpellDictionary.java:535)
	at org.eclipse.jdt.internal.ui.text.spelling.engine.DefaultSpellChecker.isCorrect(DefaultSpellChecker.java:301)
	at org.eclipse.jdt.internal.ui.text.spelling.engine.DefaultSpellChecker.execute(DefaultSpellChecker.java:240)
	at org.eclipse.jdt.internal.ui.text.spelling.JavaSpellingEngine.check(JavaSpellingEngine.java:59)
	at org.eclipse.jdt.internal.ui.text.spelling.SpellingEngine.check(SpellingEngine.java:95)
	at org.eclipse.jdt.internal.ui.text.spelling.DefaultSpellingEngine.check(DefaultSpellingEngine.java:79)
	at org.eclipse.ui.texteditor.spelling.SpellingService$1.run(SpellingService.java:108)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.ui.texteditor.spelling.SpellingService.check(SpellingService.java:114)
	at org.eclipse.ui.texteditor.spelling.SpellingReconcileStrategy.reconcile(SpellingReconcileStrategy.java:190)
	at org.eclipse.jdt.internal.ui.text.spelling.JavaSpellingReconcileStrategy.reconcile(JavaSpellingReconcileStrategy.java:133)
	at org.eclipse.ui.texteditor.spelling.SpellingReconcileStrategy.initialReconcile(SpellingReconcileStrategy.java:165)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.initialReconcile(CompositeReconcilingStrategy.java:125)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.initialReconcile(JavaCompositeReconcilingStrategy.java:139)
	at org.eclipse.jface.text.reconciler.MonoReconciler.initialProcess(MonoReconciler.java:98)
	at org.eclipse.jdt.internal.ui.text.JavaReconciler.initialProcess(JavaReconciler.java:419)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:177)

!ENTRY org.eclipse.egit.ui 2 0 2021-06-01 20:00:48.322
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\PICHAU'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.jdt.core 4 4 2021-06-01 22:58:55.413
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Scanner;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Random;

public class O_Jogo {

	// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-VARIAVÉIS GLOBAIS-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
	public static Scanner entrada = new Scanner(System.in);
	public static String opcao = "";
	public static int dificuldade = 0;
	public static String nomeJogador = "";
	public static int thread1 = 0;
	public static int thread2 = 0;
	public static int thread3 = 0;
	public static int[] status = { 100, 2 };

	// CORES DO TEXTO
	public static final String RESET = "\u001B[30m";
	public static final String RED = "\u001B[31m";
	public static final String GREEN = "\u001B[32m";
	public static final String YELLOW = "\u001B[33m";
	public static final String BLUE = "\u001B[34m";
	public static final String MAGENTA = "\u001B[35m";
	public static final String CYAN = "\u001B[36m";
	public static final String WHITE = "\u001B[37m";
	
	// NEGRITO DO TEXTO 
	public static final String RESET_BOLD = "\u001B[0m";
	public static final String BOLD = "\u001B[1m";
	
	

	// CORES DO FUNDO DO TEXTO
	public static final String RESET_BACKGROUND = "\u001B[0m";
	public static final String BLACK_BACKGROUND = "\u001B[40m";
	public static final String RED_BACKGROUND = "\u001B[41m";
	public static final String GREEN_BACKGROUND = "\u001B[42m";
	public static final String YELLOW_BACKGROUND = "\u001B[43m";
	public static final String BLUE_BACKGROUND = "\u001B[44m";
	public static final String PURPLE_BACKGROUND = "\u001B[45m";
	public static final String CYAN_BACKGROUND = "\u001B[46m";
	public static final String WHITE_BACKGROUND = "\u001B[47m";

	// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-MAIN-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
	public static void main(String[] args) {

		boolean cond = true;
		

		do {

			System.out.print(Tabula1(6, "---Menu---\n\n"));
			System.out.print(Tabula2(2, "[1] Intruções", 6, "[2] Jogar\n"));
			System.out.print(Tabula2(2, "[3] Créditos", 6, "[4] Sair\n"));

			String opcao_Menu = Option();

			switch (opcao_Menu) {

			case "1":
				Instruções();
				break;

			case "2":

				Jogar();
				Hist_1();
				//ExecutaTemplo1();
				Hist_2();
				ExecutaTemplo2();
				ExecutaTemplo3(status);
				
				
				break;

			case "3":
				Créditos();
				break;

			case "4":

				cond = false;
				break;

			default:

				System.out.print(RED + Tabula1(6, "Opção não é válida!\n\n") + RESET);

			}

		} while (cond);

	}

	// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-JOGO-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

	// PROCEDIMENTO PARA ARMAZENAR AS INFORMAÇÕES DAS INTRUÇÕES
	public static void Instruções() {

		System.out.print("\n");
		Texto_Formatado("\nO objetivo do jogo é auxiliar o jogador em alguns conhecimentos da matemática."
				+ " Ao longo da jornada, serão apresentados conteúdos sobre a matéria em questão e "
				+ "apresentadas perguntas ao jogador. O mesmo deverá selecionar as opções válidas para que ele possa"
				+ " avançar no jogo e a cada questão, o jogador sofrerá um dano se errar, diminuindo assim sua vida."
				+ " O objetivo final do jogador, é avançar por todos os templos para derrotar o último chefe, sem perder toda a sua vida.");
		System.out.print("\n");
		Sair();

	}

	// PROCEDIMENTO PARA FAZER A 1º CHAMADA DO JOGO, PARA COLETAR AS INFORMAÇÕES DO
	// NOME DO JOGADOR, A DIFICULDADE DO JOGO E A HISTÓRIA INICIAL
	public static void Jogar() {

		Texto_Formatado(Tabula1(4, "---Escolha a sua dificuldade de jogo---\n\n")
				+ Tabula3(1, "[1] Fácil", 3, "[2] Normal", 3, "[3] Difícil"));

		boolean cond = true;

		do {

			String opcao_Menu = Option();
			switch (opcao_Menu) {

			case "1":
				dificuldade = 1;
				cond = false;
				break;

			case "2":
				dificuldade = 2;
				cond = false;
				break;

			case "3":
				dificuldade = 3;
				cond = false;
				break;

			default:
				System.out.print(RED + Tabula1(6, "Opção não é válida!\n\n") + RESET);

			}
		} while (cond);

		Texto_Formatado(Tabula1(4, "   ---Escolha o nome do seu jogador---"));
		nomeJogador = Option();

		boolean cond2 = true;
		do {

			Texto_Formatado(Tabula1(4,
					"---Você deseja que o nome do seu jogador seja " + RED + nomeJogador + RESET + " ?---\n\n")
					+ Tabula2(4, GREEN + "[S]" + RESET, 6, RED + "[N]" + RESET));
			String opcao_Menu = Option();

			switch (opcao_Menu.toUpperCase()) {
			case "S":
				cond2 = false;
				break;
			case "N":
				Texto_Formatado(Tabula1(4, "---Escolha o nome do seu jogador---"));
				nomeJogador = Option();
				break;
			default:
				System.out.print(RED + Tabula1(6, "Opção não é válida!\n\n") + RESET);
			}
		} while (cond2);

	}

	// PROCEDIMENTO PARA ARMAZENAR AS INFORMAÇÕES DOS CRÉDITOS
	public static void Créditos() {

		System.out.print("\n");
		Texto_Formatado(Tabula3(2,"\nGustavo Tozeti",2,"Matheus Cavalcanti",2,"Renan Kesper"));
		System.out.print("\n");
		Sair();

	}

	
	// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-HISTÓRIA-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
	
	// PRIMEIRA NARRATIVA DO JOGO
	public static void Hist_1() {

		System.out.print("\n");
		
		Texto_Formatado(
				
				
				Dialogo("Narrador",WHITE) + "\n - Aos escombros, uma leve página, parecida de um diário, pousa sobre o rosto de "+ nomeJogador +". Aos sustos, " + nomeJogador +" acorda e começa a ler a página." +
				
				Dialogo(nomeJogador,WHITE)+ GREEN
				+ "\n - \"Reza a lenda que Ariandre era um lugar próspero, cheio de magia e encanto, onde todos os seres viviam em harmonia e em paz. Um lugar tão belo,"					
				+ " que a matemática era a base de força para grandes magos. Mas isso é claro, antes do grande acontecimento. . .Ninguém sabe ao certo, nem ao menos como,"				
				+ " mas naquela tarde esse lugar tão calmo e pleno, foi reduzido a cinzas e escombros, uma enorme escuridão pairou pelos céus e tomou Ariandre por inteiro "			
				+ "e com um simples clarão. . .tudo foi destruído. Após momentos agoniantes, enfim o motivo disso tudo. . . sim, ele que era apenas uma fábula de centenas de "			
				+ "anos, de contos muito antigos, enfim ressurgiu. . . Ancelot tinha despertado. O grande rei demônio estava presente novamente, "			
				+ "para aprisionar toda a matemática de Ariandre e ser o detentor de toda a magia. Já se passaram alguns meses depois disso tudo, mas agora espero "					
				+ "ter forças para enfrentá-lo, mas a cada dia que se passa nessas catedrais do abismo perco mais e mais da minha sanidade. Talvez eu seja a última esperança "			
				+ "de Ariandre, mas caso alguém esteja lendo isso, significa que Ancelot venceu e Ariandre para sempre estará sob o seu domínio.\"" 									
				
				+ Dialogo(nomeJogador,WHITE) +  GREEN + "\n - Mas. . . mas como? Meses? Estava tudo certo, ele estava em minhas mãos, como foi tudo isso desmoronar. Minha "					
				+ "cabeça dói, são memórias que me vem, mas o que será que aconteceu? Por que eu estou nas catedrais e porque Ariandre está destruída? Será isso um sonho?"
				+ " Eu preciso descobrir o que aconteceu, mas me sinto estranho. Parece que não tenho mais meus poderes. Será que eu consigo canalizar algo??"
				
				+ Dialogo("Narrador",WHITE) + "\n - "+nomeJogador+ " tenta utilizar, uma de suas magias vinda através dos poderes da matemática, mas sem sucesso! "
				+ "E como em um turbilhão de memórias, "+nomeJogador+" começa a se lembrar daquele fatídico dia.\n\n"
						
				+Tabula1(4,"Alguns meses antes...") 
				
				+ Dialogo(nomeJogador,WHITE) +  GREEN + "\n - Finalmente, depois de anos de estudos e cálculos, finalmente irei despertar Ancelot e enfim obter o seu"
				+ " poder supremo."
				
				+ Dialogo("Narrador",WHITE) + "\n - "+nomeJogador+ " por mais que fosse extremamente forte, jamais saberia que o terrível Ancelot portava de uma maldição, que "
				+ "quem o invoca-se traria destruição ao seu mundo. Ao passo em que o ritual de invocação se iniciava, um grande portal cheio de trevas se abriu no chão e dele "
				+ "saía o fim dos tempos."
				
				+ Dialogo("Ancelot",WHITE) +  RED + "\n - Finalmente livre!!"	
				
				+ Dialogo(nomeJogador,WHITE) +  GREEN + "\n - Jamais Ancelot, eu "+ nomeJogador +" sou o ser mais supremo de toda Ariandre, você não é pareo para os meus poderes. Apenas te "
				+ "invoquei para obter toda sua fonte de poder e assim te derrotá-lo para sempre. "
				
				+ Dialogo("Ancelot",WHITE) +  RED + "\n - Tolo, você não é a primeira pessoa a tentar isso. Vocês todos tentam, mas todos esquecem da maldição!!"	
				
				+ Dialogo(nomeJogador,WHITE) +  GREEN + "\n - Maldição? Que maldição?!"
				
				+ Dialogo("Ancelot",WHITE) +  RED + "\n - Pelo visto, você não está preparado HAHAHAHAH. Mas talvez o que eu faça aqui, sirva de lição para você."
				
				+ Dialogo("Narrador",WHITE) + "\n - E com uma enorme força e magia, que surpreendia até "+nomeJogador+", Ancelot conseguiu drenar todos os seus poderes. Com vários feixes de luz, "
				+ nomeJogador+" via seus poderes se esvaindo ao longo de si."
				
				+ Dialogo("Ancelot",WHITE) +  RED + "\n - "+nomeJogador+", você me parece interessante. Irei espalhar esses seus poderes nas mais profundas terras de Ariandre e caso você sobreviva, terá seus "
				+ "poderes de volta para me enfrentar."
				
				+ Dialogo("Narrador",WHITE) + "\n - Com um imenso clarão, tudo ficou em silêncio. Até agora...\n\n"
				
				+Tabula1(4,"Atualmente...")
				
				+ Dialogo(nomeJogador,WHITE) +  GREEN + "\n - Droga! Preciso recuperar meus poderes e derrotar Ancelot. Mas onde estou?"
				
				+ Dialogo("Narrador",WHITE) + "\n - "+nomeJogador+" olha em volta e se depara com escombros e ruínas. Mas começa a perceber que existem símbolos escritos nas paredes que são familiares. "
				+ "Estes símbolos remetem a algumas descrições dos templos da perdição das catedrais. É de grande espanto, pois "+nomeJogador+" ao reconhecer às escritas, lembrou que os templos eram mitos da terra "
				+ "antiga e que eram locais responsáveis por um grande armazenamento de magia."
				
				+ Dialogo(nomeJogador,WHITE) +  GREEN + "\n - Se ele disse que meus poderes estão nas mais profundas terras de Ariandre, então só podem estar espalhados entre os três templos daqui. "
				+ "Preciso ir em frente!"
				
				+Dialogo("Narrador",WHITE) + "\n - "+nomeJogador+ "adentra no templo das "+BOLD+"Equações de 1º Grau"+RESET_BOLD+", um lugar que lhe faz relembrar dos seus inícios de treinamento de mago. "
				+ "Tanto é, que esse conhecimento era a base dos seus grandiosos poderes."
						
				+ Dialogo("Narrador",WHITE) + "\n - Os templos possuem feitiços incríveis e fazem com quem adentrar ao local tenha a sabedoria para conquistar o poder armazenado nele. E não foi diferente com esse templo."
				+ nomeJogador+" após passar por um portal mágico do templo, teve uma viagem mística até onde estavam os desafios para recuperar seu poder. Dentro dessa viagem, uma voz desconhecida lhe passou os seguintes "
				+ "ensinamentos…"
				
				+ Dialogo("Voz Desconhecida",WHITE) + CYAN + "\n - Olá "+ nomeJogador+", que bom te ver aqui!!"
				
				+ Dialogo(nomeJogador,WHITE) +  GREEN + "\n - Mas quem é você?"
				
				+ Dialogo("Voz Desconhecida",WHITE) + CYAN + "\n - Não se preocupe, sou apenas um ajudante de Ariandre e estou aqui para ajudar em sua jornada. Não temos muito tempo a frente então serei o mais rápido possível, "
				+ "isso lhe guiará nos seus próximos desafios daqui para frente."
				
				+ Dialogo("Narrador",WHITE) + "\n - E parecendo uma voz familiar, "+ nomeJogador+" escutou os ensinamentos que a voz desconhecida tinha a oferecer."
				
				+ Dialogo("Voz Desconhecida",WHITE) + CYAN + "\n - O poder deste templo são às"+BOLD(" Equações de 1º Grau",CYAN)+", elas serão a base para sua fonte de poder. Para derrotar os desafios à frente, você irá precisar dos "
				+ "conhecimentos básicos a fim de quebrar os feitiços que serão lançados a ti. Então preste muita atenção..."
				
				+ Dialogo("Voz Desconhecida",WHITE) + CYAN + "\n - As equações de primeiro grau são sentenças matemáticas que estabelecem relações de igualdade entre termos conhecidos e desconhecidos, "
				+ "representadas sob a forma: "+BOLD("ax+b = 0",CYAN)+". Donde "+BOLD("a",CYAN)+" e "+BOLD("b",CYAN)+" são números reais, sendo "+BOLD("a",CYAN)+" um valor diferente de zero "+BOLD("(a != 0)",CYAN)+" e "+BOLD("x ",CYAN)+ "representa o "
				+ "valor desconhecido. O valor desconhecido é chamado de "+BOLD("incógnita",CYAN)+" que significa \"termo a determinar\". As equações do 1º grau podem apresentar "+BOLD("uma",CYAN)+" ou "+BOLD("mais",CYAN)+" incógnitas."
				
				+ Dialogo("Voz Desconhecida",WHITE) + CYAN + "\n - O objetivo de resolver uma equação de primeiro grau é "+BOLD("descobrir o valor desconhecido",CYAN)+", ou seja, encontrar o valor da incógnita que "+BOLD("torna a igualdade verdadeira",CYAN)+". Para isso, "
				+ "deve-se "+BOLD("isolar os elementos desconhecidos em um dos lados do sinal de igual e os valores constantes do outro lado",CYAN)+". Contudo, é importante observar que a mudança de posição desses elementos "+BOLD("deve ser feita de forma que a igualdade "
				+ "continue sendo verdadeira",CYAN)+". Quando um termo da equação mudar de lado do sinal de igual, devemos inverter a operação. Assim, se tiver multiplicando, passará dividindo, se tiver somando, passará subtraindo e vice-versa."
				
				+ Dialogo("Voz Desconhecida",WHITE) + CYAN + "\n - Agora você está pronto para o caminho em frente. Espero te ver logo, adeus…"
				
				+ Dialogo("Narrador",WHITE) + "\n - E com essa despedida,"+ nomeJogador+" saiu de sua viagem mística e já estava em apuros."
				
				+ Dialogo("Ancelot",WHITE) +  RED + "\n - Parece que você sobreviveu depois de tudo aquilo e ainda conseguiu chegar até aqui. Você não terá seu poder de volta tão fácil HAHAHHA. Veremos se você é realmente capaz de enfrentar meus 3 feitiços.");
				
								
				
				
		
		System.out.print("\n");

	}

	public static void Hist_2(){
		
		System.out.print("\n");
		
		Texto_Formatado(
				
				Dialogo("Ancelot",WHITE) +  RED + "\n - Impossível, como você conseguiu ? Isso ainda não acabou, nós iremos nos encontrar novamente."
				
				+ Dialogo(nomeJogador,WHITE) +  GREEN + "\n - Onde você estiver, eu estarei lá para te derrotar!"
				
				+ Dialogo("Narrador",WHITE) + "\n - E diante de um clarão Ancelot, desapareceu… Mas no local da batalha grandiosa, uma enorme chama, surgia no meio da arena. Era o poder perdido de "+nomeJogador+",  que ao se aproximar, pode absorver novamente seu poder."
				
				+ Dialogo(nomeJogador,WHITE) +  GREEN + "\n - Como é bom ter meus poderes de volta!"
				
				+ Dialogo("Narrador",WHITE) + "\n - Com a grande primeira batalha travada, "+nomeJogador+" continuou em sua jornada para o próximo templo adentrando no próximo portal."
						
				+ Dialogo("Voz Desconhecida",WHITE) + CYAN + "\n - Olá "+ nomeJogador+", que bom que você sobreviveu!!"
				
				+ Dialogo("Voz Desconhecida",WHITE) + CYAN + "\n - Precisamos continuar sua batalha."
				
				+ Dialogo("Voz Desconhecida",WHITE) + CYAN + "\n - O poder deste templo são às"+BOLD(" Equações de 2º Grau",CYAN)+", elas serão o fortalecimento do seu poder. Para derrotar os desafios à frente, você irá precisar dos "
				+ "conhecimentos básicos a fim de quebrar os feitiços que serão lançados a ti. Então preste muita atenção..."
				
				(Δ
				
				
				
				+ Dialogo("Voz Desconhecida",WHITE) + CYAN + "\n - As equações de primeiro grau são sentenças matemáticas que estabelecem relações de igualdade entre termos conhecidos e desconhecidos, "
				+ "representadas sob a forma: "+BOLD("ax+b = 0",CYAN)+". Donde "+BOLD("a",CYAN)+" e "+BOLD("b",CYAN)+" são números reais, sendo "+BOLD("a",CYAN)+" um valor diferente de zero "+BOLD("(a != 0)",CYAN)+" e "+BOLD("x ",CYAN)+ "representa o "
				+ "valor desconhecido. O valor desconhecido é chamado de "+BOLD("incógnita",CYAN)+" que significa \"termo a determinar\". As equações do 1º grau podem apresentar "+BOLD("uma",CYAN)+" ou "+BOLD("mais",CYAN)+" incógnitas."
				
				+ Dialogo("Voz Desconhecida",WHITE) + CYAN + "\n - O objetivo de resolver uma equação de primeiro grau é "+BOLD("descobrir o valor desconhecido",CYAN)+", ou seja, encontrar o valor da incógnita que "+BOLD("torna a igualdade verdadeira",CYAN)+". Para isso, "
				+ "deve-se "+BOLD("isolar os elementos desconhecidos em um dos lados do sinal de igual e os valores constantes do outro lado",CYAN)+". Contudo, é importante observar que a mudança de posição desses elementos "+BOLD("deve ser feita de forma que a igualdade "
				+ "continue sendo verdadeira",CYAN)+". Quando um termo da equação mudar de lado do sinal de igual, devemos inverter a operação. Assim, se tiver multiplicando, passará dividindo, se tiver somando, passará subtraindo e vice-versa."
				
				
				
				
				
				
				+ Dialogo("Voz Desconhecida",WHITE) + CYAN + "\n - Agora você está pronto para o caminho em frente. Espero te ver logo, adeus…"
				
							
				+ Dialogo("Ancelot",WHITE) +  RED + "\n - Parece que você sobreviveu depois de tudo aquilo e ainda conseguiu chegar até aqui. Você não terá seu poder de volta tão fácil HAHAHHA. Veremos se você é realmente capaz de enfrentar meus 3 feitiços."
				
				
				
				
				);
	
	}	
	
	// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-FERRAMENTAS DE TEXTO-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

	// PROCEDIMENTO CRIADO PARA FORMATAR QUALQUER TEXTO, PARA PADRONIZAR O LAYOUT DA
	// MENSAGEM COM BASE EM UM VALOR PRÉ DETERMINADO
	public static void Texto_Formatado(String frase) {

		String texto = frase;
		String[] palavras = texto.split(" ");

		int contadorQntLetras = 0;
		int limiteLinha = 170;
		

		for (int i = 0; i < limiteLinha; i++) {
			System.out.print(RED + "=" + RESET);
		}
		System.out.print("\n");

		for (String palavra : palavras) {

			if (contadorQntLetras + palavra.length() >= limiteLinha) {
				contadorQntLetras = 0;
				System.out.print("\n");
			}

			System.out.print(palavra + " ");
			Timer2();
			if (palavra.length()>18){
				contadorQntLetras = 0;
			}
			else {
			contadorQntLetras += palavra.length() + 1;
			
			
			}
			
			}
		System.out.println("\n");

		for (int i = 0; i < limiteLinha; i++) {
			System.out.print(RED + "=" + RESET);
		}

	}

	// PROCEDIMENTOS CRIADOS PARA TABULAR QUALQUER TEXTO, PARA PADRONIZAR O LAYOUT DA
	// MENSAGEM
	public static String Tabula1(int t, String s) {

		String tab = "\t";
		String frase = "";
		for (int i = 0; i <= t; i++) {
			frase += tab;
		}
		frase += s;

		return frase;
	}

	public static String Tabula2(int t, String s, int tt, String ss) {

		String tab = "\t";
		String frase = "";

		for (int i = 0; i <= t; i++) {
			frase += tab;
		}
		frase += s;
		for (int i = 0; i <= tt; i++) {
			frase += tab;
		}
		frase += ss;
		return frase;
	}

	public static String Tabula3(int t, String s, int tt, String ss, int ttt, String sss) {

		String tab = "\t";
		String frase = "";

		for (int i = 0; i <= t; i++) {
			frase += tab;
		}
		frase += s;
		for (int i = 0; i <= tt; i++) {
			frase += tab;
		}
		frase += ss;
		for (int i = 0; i <= ttt; i++) {
			frase += tab;
		}
		frase += sss;
		return frase;
	}

	// PROCEDIMENTOS CRIADO PARA PADRONIZAR OS DIÁLOGOS
	public static String Dialogo(String Nome, String Cor) {
		String texto = "\n\n" + BLACK_BACKGROUND + Cor +Nome+ RESET + RESET_BACKGROUND;
		return texto;
		}
	
	public static String BOLD(String frase, String Cor) {
		String texto = RESET + BOLD + frase + RESET_BOLD + Cor;
		return texto;
	}
	
	// PROCEDIMENTOS CRIADO PARA PRINTAR A MENSAGEM ANTES DO BOSS
	static void FormataTexto1(String frase) {

		String[] palavra = frase.split(" ");

		for (String each : palavra) {
			System.out.print(each + " ");
			Timer2();
		}
	}

	// PROCEDIMENTOS CRIADO PARA PRINTAR A MENSAGEM DE GAME OVER
	static void FormataTexto2(String frase) {

		String[] palavra = frase.split(" ");

		for (String each : palavra) {
			System.out.print(each);
			Timer2();
		}

		System.out.print(" ");
	}
	
	// PROCEDIMENTOS CRIADO PARA ARMAZENAR A COLEÇÃO DE FRASES PARA ACERTOS
	static void Vitoria_Frase () {
		
		ArrayList<String> vitoria = new ArrayList();
		vitoria.add("Acertou novamente, droga droga droga...\n");
		vitoria.add("Vejo que acertou mais uma...\n");
		
		Collections.shuffle(vitoria);
		Collections.shuffle(vitoria);
		
		
		System.out.println(Dialogo("Ancelot",WHITE) +  RED + " - " + vitoria.get(0) + RESET);
		
	}
	
	// PROCEDIMENTOS CRIADO PARA ARMAZENAR A COLEÇÃO COLEÇÃO DE FRASES PARA ERROS
	static void Derrota_Frase () {
		
		ArrayList<String> derrota = new ArrayList();
		derrota.add("Você não conseguirá prosseguir nem que tente mil vezes.\n");
		derrota.add("Você não é capaz de seguir em frente\n");
		
		Collections.shuffle(derrota);
		Collections.shuffle(derrota);
		
		System.out.println(Dialogo("Ancelot",WHITE) +  RED + " - " + derrota.get(0) + RESET);
	}
	
	// PROCEDIMENTOS CRIADO PARA MOSTRAR MENSAGEM DE ACORDO COM A VIDA 
	// DO PERSONAGEM
	static void AcertouResposta(int healthPoints) {
		System.out.println("\nA resposta está...");
		Timer();
		System.out.println("...");
		Timer();
		System.out.println("...");
		Timer();
		System.out.println(GREEN + "Certa! :D\n" + RESET);

		if (healthPoints >= 30 && healthPoints < 65) {
			System.out.println("Parece que foi um desafio para você.");
		}
		if (healthPoints < 30) {
			System.out.println("Foi por pouco que você conseguiu passar!");
		}

	}
	
	// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-FERRAMENTAS DE INPUT-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

	// FUNÇÃO CRIADA PARA RETONAR UMA OPÇÃO DESEJADA DO USUÁRIO
	public static String Option() {
		System.out.print(BLACK_BACKGROUND + WHITE + "\n***Digite sua opção:" + RESET + RESET_BACKGROUND + " ");
		opcao = entrada.next();
		System.out.print("\n");
		return opcao;
	}

	// PROCEDIMENTO CRIADO PARA SAIR DE UMA OPÇÃO DE UM MENU
	public static void Sair() {
		Scanner sc = new Scanner(System.in);
		System.out.print("\nPressione a tecla ENTER para voltar!\n");
		sc.nextLine();
		System.out.println(" ");
	}

	
	// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-FERRAMENTAS DO JOGO-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

	// FUNÇÃO CRIADA PARA CALCULAR O DANO
	static int DanoRespostaErrada(int healthPoints) {
		Random dado = new Random();
		int jogada;

		System.out.println("\nA resposta está...");
		Timer();
		System.out.println("...");
		Timer();
		System.out.println("...");
		Timer();
		System.out.println(RED + "Errada :(" + RESET);
		System.out.println("\nAgora iremos jogar o dado para saber quanto de dano você irá tomar.");
		System.out.println("O número que caiu no dado é...");
		Timer();
		System.out.println("...");
		Timer();
		System.out.println("...");
		Timer();

		jogada = dado.nextInt(20) + 1;

		System.out.printf("**\t%d\t**\n", jogada);

		if (jogada <= 5) {
			System.out.println("Parece que você deu sorte e se esquivou do dano.");
		} else if (jogada > 5 && jogada <= 15) {
			System.out.println("Você levou 20 de dano");
			healthPoints = healthPoints - (20 + (5 * dificuldade));
		} else if (jogada > 15) {
			System.out.println("Você tomou dano crítico!");
			healthPoints = healthPoints - (30 + (5 * dificuldade));
		}

		System.out.printf("Total HP: %d\n\n", healthPoints);
		return healthPoints;
	}

	// PROCEDIMENTO CRIADO PARA DAR GAME-OVER AO JOGO
	static void GameOver() {
		System.out.println("Seu HP chegou a 0");

		String game = "G A M E";
		String over = "O V E R";

		FormataTexto2(game);
		FormataTexto2(over);

		System.out.println("\n");
	}

	// FUNÇÃO CRIADA PARA USAR POTIONS
	static int[] UsePotion(int healthPoints, int qntPotions) {

		
		boolean condicao = true;
		char opcao = 0;
		int[] status = new int[2];

		System.out.printf("HP atual: %d\nQuantidade de potions: %d\n\n", healthPoints, qntPotions);

		do {
			try {
				System.out.println("Você tem certeza que quer usar uma potion?\n" + GREEN + "[S]" + RESET + " ou " + RED
						+ "[N]\n" + RESET);
				
				opcao = Option().toUpperCase().charAt(0);
			} catch (Exception e) {
				System.out.println("Caracter inválido.");
			}

			if (qntPotions > 0) {
				switch (opcao) {
				case 'S':
					healthPoints = healthPoints + 20;
					qntPotions--;

					if (healthPoints > 100) {
						do {
							healthPoints--;
						} while (healthPoints != 100);
					}
					System.out.println("Você usou uma potion.");
					System.out.printf("Quantidade potions: %d\n", qntPotions);
					System.out.printf("Total HP: %d\n\n", healthPoints);
					condicao = false;
					break;
				case 'N':
					System.out.println("Você guardou a potion de volta na bolsa\n");
					condicao = false;
					break;
				}
			} else {
				System.out.println("Você não tem potions");
				condicao = false;
			}

		} while (condicao);

		status[0] = healthPoints;
		status[1] = qntPotions;

		return status;
	}

	// PROCEDIMENTOS DE TEMPO PARA IMPRIMIR MENSAGENS
	static void Timer() {
		try {
			Thread.sleep(thread1);
		} catch (Exception e) {

		}
	}

	static void Timer2() {
		try {
			Thread.sleep(thread2);
		} catch (Exception e) {

		}
	}

	static void Timer3() {
		try {
			Thread.sleep(thread3);
		} catch (Exception e) {

		}
	}

	// FUNÇÃO CRIADA PARA GERAR AS PERGUNTAS AO JOGADOR
	static int[] ProcessoAlternativas_Geral(String[] opcoes, int[] status, String respostaCerta) {
		// Area para declarar variaveis
		Scanner sc = new Scanner(System.in);
		String resposta;
		boolean condicao = true;

		System.out.printf("[ A ] %S\n", opcoes[0]);
		Timer2();
		System.out.printf("[ B ] %S\n", opcoes[1]);
		Timer2();
		System.out.printf("[ C ] %S\n", opcoes[2]);
		Timer2();
		System.out.printf("[ D ] %S\n", opcoes[3]);
		Timer2();
		System.out.printf("[ E ] %S\n\n", opcoes[4]);
		Timer2();
		System.out.println("Resposta certa: " + respostaCerta.toUpperCase());
		Timer2();

		////////////////////////////////////////////////////////////////////////
		// Area para processo de alternativas
		do {

			resposta = Option().toUpperCase();
			if (status[0] <= 0) {
				GameOver();
				condicao = false;
			}

			switch (resposta.charAt(0)) {
			case 'A':
				if (opcoes[0].equals(respostaCerta)) {
					AcertouResposta(status[0]);
					condicao = false;
				} else {
					status[0] = DanoRespostaErrada(status[0]);
					if (status[0] <= 0) {
						GameOver();
						condicao = false;
					}
				}
				break;
			case 'B':
				if (opcoes[1].equals(respostaCerta)) {
					AcertouResposta(status[0]);
					condicao = false;
				} else {
					status[0] = DanoRespostaErrada(status[0]);
					if (status[0] <= 0) {
						GameOver();
						condicao = false;
					}
				}
				break;

			case 'C':
				if (opcoes[2].equals(respostaCerta)) {
					AcertouResposta(status[0]);
					condicao = false;
				} else {
					status[0] = DanoRespostaErrada(status[0]);
					if (status[0] <= 0) {
						GameOver();
						condicao = false;
					}
				}
				break;
			case 'D':
				if (opcoes[3].equals(respostaCerta)) {
					AcertouResposta(status[0]);
					condicao = false;
				} else {
					status[0] = DanoRespostaErrada(status[0]);
					if (status[0] <= 0) {
						GameOver();
						condicao = false;
					}
				}
				break;
			case 'E':
				if (opcoes[4].equals(respostaCerta)) {
					AcertouResposta(status[0]);
					condicao = false;
				} else {
					status[0] = DanoRespostaErrada(status[0]);
					if (status[0] <= 0) {
						GameOver();
						condicao = false;
					}
				}
				break;
			case 'P':
				status = UsePotion(status[0], status[1]);
			}
		} while (condicao);

		return status;
	}

		
// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-TEMPLOS-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

	// TEMPLO 3
	static int[] ExecutaTemplo3(int[] status) {
		Scanner sc = new Scanner(System.in);
		boolean condicao = true;

		do {
			status = Desafio1_Templo3(status);
			if (status[0] > 0) {
				System.out.println("\nVocê concluiu o primeiro desafio!");
				Timer2();
				System.out.println("Parabéns, você ganhou uma Poção!");
				status[1]++;
				Timer2();
				System.out.println("HP: " + status[0]);
				Timer2();
				System.out.println("Poção: " + status[1]);
				Timer();
				System.out.println(" ");

				condicao = false;
			} else {
				System.out.println("Você terá que refazer o desafio\n");
				status[0] = 100;
			}
		} while (condicao);

		System.out.print("\nAperte ENTER para começar o segundo Deafio");
		sc.nextLine();
		System.out.println(" ");

		do {
			status = Desafio2_Templo3(status);
			if (status[0] > 0) {
				System.out.println("\nVocê concluiu o segundo desafio!");
				Timer2();
				System.out.println("Parabéns, você ganhou uma Poção!");
				status[1]++;
				Timer2();
				System.out.println("HP: " + status[0]);
				Timer2();
				System.out.println("Poção: " + status[1]);
				Timer();
				System.out.println(" ");

				condicao = false;
			} else {
				System.out.println("Você terá que refazer o desafio\n");
				status[0] = 100;
			}
		} while (condicao);

		System.out.print("\nAperte ENTER para começar o último Deafio");
		sc.nextLine();
		System.out.println(" ");

		do {
			status = Desafio3_Templo3(status);
			if (status[0] > 0) {
				System.out.println("\nVocê concluiu o último desafio!");
				Timer2();
				System.out.println("Parabéns, você ganhou uma Poção!");
				status[1]++;
				Timer2();
				System.out.println("HP: " + status[0]);
				Timer2();
				System.out.println("Poção: " + status[1]);
				Timer();
				System.out.println(" ");

				condicao = false;
			} else {
				System.out.println("Você terá que refazer o desafio\n");
				status[0] = 100;
			}
		} while (condicao);

		Timer();
		System.out.println("Você conseguiu concluir o Templo das Conversões");
		Timer2();
		FormataTexto1("Você está preparado para o ");
		FormataTexto2("F I N A L ");
		FormataTexto2("B O S S ");
		FormataTexto2("? ? ?");
		System.out.println("\n");
		return status;
	}

	// DESAFIO É CONVERTER UM NÚMERO QUE ESTÁ EM UMA BASE PARA OUTRA
	static int[] Desafio1_Templo3(int[] status) {
		int baseInicial, baseConversao;
		String respostaCerta;

		String[] numeroInicial = new String[1];
		String[] opcoes = new String[5];
		ArrayList<String> respostaErrada = new ArrayList();

		////////////////////////////////////////////////////////////////////////
		// Area para preparar os numeros
		baseInicial = DeterminaBase_Templo3(); // Determinando a base standard

		do {
			baseConversao = DeterminaBase_Templo3(); // Determinando a base de conversao
		} while (baseConversao == baseInicial);

		numeroInicial[0] = DeterminaNumero_Templo3(baseInicial); // Determinando o numero standard

		respostaCerta = DeterminaNumeroConv_Templo3(numeroInicial, baseInicial, baseConversao); // Determinando o numero
																								// de conversao (certo)

		respostaErrada.add(respostaCerta); // Adicionando a resposta certa nas opcoes

		for (int i = 0; i < 4; i++) {
			respostaErrada.add(DeterminaOpcoes(baseConversao, respostaCerta)); // Adicionando opcoes erradas
		}

		Collections.shuffle(respostaErrada); // Embaralhando as opcoes para que haja uma aleatoriedade
		Collections.shuffle(respostaErrada);

		for (int i = 0; i < opcoes.length; i++) {
			opcoes[i] = respostaErrada.get(i); // Transferindo as opcoes do ArrayList para uma String[]
		}

		////////////////////////////////////////////////////////////////////////
		// Area de logica do game
		Texto_Formatado(Tabula1(4, "***\tWELCOME TO THE 1ST GAME\t***\n"));

		System.out.printf("\nConverta o numero %S que esta na base %d para a base %d\n\n", numeroInicial[0],
				baseInicial, baseConversao);
		Timer2();

		status = ProcessoAlternativas_Geral(opcoes, status, respostaCerta);

		return status;
	}

	// DESAFIO É SOMAR DOIS NÚMEROS QUE ESTÃO EM UMA BASE E CONVERTER PARA OUTRO
	static int[] Desafio2_Templo3(int[] status) {
		// Area para inicializar variaveis
		int baseInicial, baseConversao;
		String respostaCerta;

		String[] numeroInicial = new String[2];
		String[] opcoes = new String[5];
		ArrayList<String> respostaErrada = new ArrayList();
		////////////////////////////////////////////////////////////////////////
		// Area para declarar os numeros

		baseInicial = DeterminaBase_Templo3(); // Gerar a base standard

		do {
			baseConversao = DeterminaBase_Templo3(); // Gerar a base para conversao
		} while (baseConversao == baseInicial);

		numeroInicial[0] = DeterminaNumero_Templo3(baseInicial); // Gerar o numero standard A
		numeroInicial[1] = DeterminaNumero_Templo3(baseInicial); // Gerar o numero standard B

		respostaCerta = DeterminaNumeroConv_Templo3(numeroInicial, baseInicial, baseConversao); // Gerar a resposta
																								// certa

		respostaErrada.add(respostaCerta); // Adicionando a resposta certa no ArrayList

		for (int i = 0; i <= 3; i++) {
			respostaErrada.add(DeterminaOpcoes(baseConversao, respostaCerta)); // Criando respostas erradas para o
																				// ArrayList
		}

		Collections.shuffle(respostaErrada); // Embaralhando as opcoes
		Collections.shuffle(respostaErrada);

		for (int i = 0; i < opcoes.length; i++) {
			opcoes[i] = respostaErrada.get(i); // Adicionando as opcoes embaralhadas numa String para fazer o desafio
		}

		Texto_Formatado(Tabula1(4, "***\tWELCOME TO THE 2ND GAME\t***\n"));
		Timer2();
		System.out.printf("\nFaça a seguinte conversão:\n%S + %S (na base %d) = X (na base %d)\n\n", numeroInicial[0],
				numeroInicial[1], baseInicial, baseConversao);
		Timer2();

		ProcessoAlternativas_Geral(opcoes, status, respostaCerta);

		return status;
	}

	// DESAFIO É MULTIPLICAR DOIS NÚMEROS QUE ESTÃO EM UMA BASE E CONVERTER PARA OUTRO
	static int[] Desafio3_Templo3(int[] status) {
		// Area para declarar variaveis
		int baseInicial, baseConversao, aux;
		String respostaCerta;

		String[] numeroInicial = new String[2];
		String[] opcoes = new String[5];
		ArrayList<String> respostaErrada = new ArrayList();
		////////////////////////////////////////////////////////////////////////
		// Area para iniciar variaveis
		baseInicial = DeterminaBase_Templo3(); // Gerar a base inicial

		do {
			baseConversao = DeterminaBase_Templo3(); // Gerar a base para conversao
		} while (baseConversao == baseInicial);

		numeroInicial[0] = DeterminaNumero_Templo3(baseInicial); // Gerar numero standard A
		numeroInicial[1] = DeterminaNumero_Templo3(baseInicial); // Gerar numero standard B

		aux = (Integer.parseInt(numeroInicial[0], baseInicial)) * (Integer.parseInt(numeroInicial[1], baseInicial)); // Convertendo
																														// o
																														// produto
																														// dos
																														// numeros
																														// standard
																														// para
																														// int

		respostaCerta = Integer.toString(aux, baseConversao); // Convertendo o produto dos numeros standard para a base
																// de conversao

		respostaErrada.add(respostaCerta); // Adicionando a resposta certa nas opcoes

		for (int i = 0; i <= 3; i++) {
			respostaErrada.add(DeterminaOpcoes(baseConversao, respostaCerta)); // Adicionando as opcoes erradas
		}

		Collections.shuffle(respostaErrada); // Embaralhando as opcoes
		Collections.shuffle(respostaErrada);

		for (int i = 0; i < opcoes.length; i++) {
			opcoes[i] = respostaErrada.get(i);// Adicionando as opcoes em String para fazer o desafio
		}

		Texto_Formatado(Tabula1(4, "***\tWELCOME TO THE 3ND GAME\t***\n"));

		System.out.printf("\nFaça a seguinte conversão:\n%S * %S (na base %d) = X (na base %d)\n\n", numeroInicial[0],
				numeroInicial[1], baseInicial, baseConversao);
		Timer2();

		ProcessoAlternativas_Geral(opcoes, status, respostaCerta);

		return status;
	}

	// FUNÇÕES DO TEMPLO 3
	static int DeterminaBase_Templo3() {

		ArrayList<Integer> bases = new ArrayList();

		bases.add(2);
		bases.add(8);
		bases.add(10);
		bases.add(16);

		Collections.shuffle(bases);
		Collections.shuffle(bases);

		return bases.get(0);
	}

	static String DeterminaNumero_Templo3(int baseInicial) {

		Random dado = new Random();
		int numRandom;
		String baseAconv = null;

		do {
			numRandom = dado.nextInt(2000);
		} while (numRandom <= 50);

		switch (baseInicial) {
		case 2:
			baseAconv = Integer.toBinaryString(numRandom);
			break;
		case 8:
			baseAconv = Integer.toOctalString(numRandom);
			break;
		case 10:
			baseAconv = Integer.toString(numRandom);
			break;
		case 16:
			baseAconv = Integer.toHexString(numRandom);
			break;
		}

		return baseAconv;
	}

	static String DeterminaOpcoes(int baseConversao, String respostaCerta) {
		Random dado = new Random();
		int aux = Integer.parseInt(respostaCerta, baseConversao);
		String opcoesFalsas;

		do {
			aux = aux + dado.nextInt(30);
			aux = aux - 15;
			opcoesFalsas = Integer.toString(aux, baseConversao);
		} while (opcoesFalsas.equals(respostaCerta));

		return opcoesFalsas;
	}

	static String DeterminaNumeroConv_Templo3(String[] numeroInicial, int baseInicial, int baseConversao) {
		int aux = 0;
		String respostaConversao;

		for (int i = 0; i < numeroInicial.length; i++) {
			aux = aux + Integer.parseInt(numeroInicial[i], baseInicial);
		}

		respostaConversao = Integer.toString(aux, baseConversao);

		return respostaConversao;
	}

	// TEMPLO 2
	static void ExecutaTemplo2(){
		Desafio1_Templo2();
		Desafio2_Templo2();
		Desafio3_Templo2();
}
	
	// FUNÇÕES DO TEMPLO 2
	static void Desafio1_Templo2() {
		//variáveis
		int r;
		Random rng = new Random();
		String opcao, enunciado;
		boolean repete = true;
				
		//Enunciado
		System.out.println("Olá! Nesse templo nós teremos três testes relacionados a equações do segundo grau.");
				
		//Questão
				
		//RANDOMIZANDO A QUESTÃO E REPETINDO ATÉ O ACERTO OU VIDA = 0
		
		do{
			r = rng.nextInt(3);
		switch(r) {
		//RECEBENDO A QUESTÃO RANDOMIZADA E RESOLVENDO A QUESTÃO.
			case 0:
				enunciado = "Primeiramente me diga, quais são os coeficiêntes dessa equação de segundo grau. 2x² + x – 3 = 0";
				System.out.println(enunciado);
				System.out.println("a) a = -2 b = 0 c = -3 \n"
						+ "b) a = 2 b = 1 c = 3 \n"
						+ "c) a = 2 b = 1 c = -3 \n"
						+ "d) a = 2 b = 0 c = -3");
				
				opcao = Option();
			
				if(opcao.equalsIgnoreCase("c")) {
					AcertouResposta(status[0]);
					Vitoria_Frase();
					repete = false;
				}else {
					DanoRespostaErrada(status[0]);
					Derrota_Frase();
				}
				break;
				
			case 1:
				enunciado = "Primeiramente me diga, quais são os coeficiêntes dessa equação de segundo grau. –3x² + 18x – 15 = 0.";
				System.out.println(enunciado);
				System.out.println("a) a = -3 b = -18 c = -15 \n"
						+ "b) a = 3 b = 18 c = -15 \n"
						+ "c) a = -3 b = 18 c = 15 \n"
						+ "d) a = -3 b = 18 c = -15");
				
				opcao = Option();
				
				if(opcao.equalsIgnoreCase("d")) {
					AcertouResposta(status[0]);
					Vitoria_Frase();
					repete = false;
				}else {
					DanoRespostaErrada(status[0]);
					Derrota_Frase();
				}
				break;
				
			case 2:
				enunciado = "Primeiramente me diga, quais são os coeficiêntes dessa equação de segundo grau. 3x² – x – 1 = 0.";
				System.out.println(enunciado);
				
				System.out.println("a) a = -3 b = -1 c = -1 \n"
						+ "b) a = 3 b = -1 c = -1 \n"
						+ "c) a = -3 b = 0 c = 1 \n"
						+ "d) a = 3 b = -1 c = 1");
				
				opcao = Option();
				
				if(opcao.equalsIgnoreCase("b")) {
					AcertouResposta(status[0]);
					Vitoria_Frase();
					repete = false;
				}else {
					DanoRespostaErrada(status[0]);
					Derrota_Frase();
				}
				break;
		}
		
	}while(repete);
		}
	
	static void Desafio2_Templo2() {
		//variáveis
		int r;
		Random rng = new Random();
		String opcao, enunciado;
		boolean repete = true;
		//Enunciado
		System.out.println("Aaaah, sim, vejo que você foi capaz de passar pelo meu primeiro teste! Maravilhoso, vamos apimentar um pouco mais as coisas");
		
		//Randomizando a questão
		
		
		//RECEBENDO A QUESTÃO RANDOMIZADA E RESOLVENDO A QUESTÃO.
		do {
			r = rng.nextInt(3);
		switch(r) {
		case 0:
			enunciado = "Qual é a maior raiz da equação -2x² + 3x + 5 = 0?";
			System.out.println(enunciado);
			System.out.println("a) -1\n"
					+ "b) -2,5\n"
					+ "c)2\n"
					+ "d)2,5\n");
			
			opcao = Option();
			
			if(opcao.equalsIgnoreCase("d")) {
				
				AcertouResposta(status[0]);
				Vitoria_Frase();
				repete = false;
			}else {
				DanoRespostaErrada(status[0]);
				Derrota_Frase();
			}
			break;
		case 1:
			enunciado = "Qual é a menor raiz da equação 2x² + 7x + 5 = 0";
			System.out.println(enunciado);
			System.out.println("a) -1 \n"
					+ "b) 1\n"
					+ "c) -5/2\n"
					+ "d) -2");
			
			opcao = Option();	
			
			if(opcao.equalsIgnoreCase("c")) {
				AcertouResposta(status[0]);
				Vitoria_Frase();
				repete = false;
				}else {
					DanoRespostaErrada(status[0]);
					Derrota_Frase();
				
				}
			break;
		case 2:
			enunciado = "Quais são as duas raízes da equação 3x² – x – 2 = 0";
			System.out.println(enunciado);
			System.out.println("a) x1 = 2/3 x2 = 1\n"
					+ "b) x1 = -2/3 x2 = -1 \n"
					+ "c) x1 = -2/3 x2 = 1 \n"
					+ "d) x1 = -1 x2 = 2/3");
			
			opcao = Option();
			if(opcao.equalsIgnoreCase("c")) {
				AcertouResposta(status[0]);
				Vitoria_Frase();
				repete = false;
				}else {
					DanoRespostaErrada(status[0]);
					Derrota_Frase();
				
				}
			break;
			
		}
		}while(repete);	
	
	}
	
	static void Desafio3_Templo2() {
		//Variaveis
		int r;
		Random rng = new Random();
		String opcao, enunciado;
		boolean repete = true;
		//Enunciado
		System.out.println("TUDO QUE EU JOGO PARA VOCÊ, ESTÁ CONSEGUINDO RESOLVER... Bom...você é bom, faz tempo que não uso todo o meu poder, "
				+ "agora você conhecerá a minha fúria, dúvido que irá conseguir responder as próximas questões...");
		do {
			r = rng.nextInt(3);
		switch(r) {
		case 0:
			enunciado = "Qual é a resolução da seguinte equação do segundo grau x² – 4x – 5 = 0?";
			System.out.println(enunciado);
			System.out.println("a) x1 = 1 x2 = 5"
					+ "b) x1 = -1 x2 = 5\n"
					+ "c) x1 = -1 x2 = -5\n"
					+ "d) x1 = -5 x2 = 1\n");
			
			opcao = Option();
			
			if(opcao.equalsIgnoreCase("b")) {
				
				AcertouResposta(status[0]);
				Vitoria_Frase();
				repete = false;
			}else {
				DanoRespostaErrada(status[0]);
				Derrota_Frase();
				}
			break;
		case 1:
			enunciado = "Eu quero que me diga, temos na equação 10x² – 1000 = 0, duas raízes reais e distintas, a e b, que podem ser encontradas. "
					+ "Mostre a mim que sabe! Determine a² + b²";
			System.out.println(enunciado);
			System.out.println("a) 100 \n"
					+ "b) 50 \n"
					+ "c) 250\n"
					+ "d) 200");
			
			opcao = Option();	
			
			if(opcao.equalsIgnoreCase("d")) {
				AcertouResposta(status[0]);
				Vitoria_Frase();
				repete = false;
				}else {
					DanoRespostaErrada(status[0]);
					Derrota_Frase();
				
				}
			break;
		case 2:
			enunciado = "Quero que me diga qual será o resultado do produto das duas raízes da equação 5x² - 125 = 0";
			System.out.println(enunciado);
			System.out.println("a) -25\n"
					+ "b) x1 = 20 "
					+ "c) x1 = 25"
					+ "d) x1 = 30");
			
			opcao = Option();
			if(opcao.equalsIgnoreCase("a")) {
				AcertouResposta(status[0]);
				Vitoria_Frase();
				repete = false;
				}else {
					DanoRespostaErrada(status[0]);
					Derrota_Frase();
				
				}
			break;
			
		}
		}while(repete);	
		
		
	}
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-06-01 22:58:55.414
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-06-01 22:58:55.415
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.core 4 4 2021-06-01 22:58:57.171
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Scanner;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Random;

public class O_Jogo {

	// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-VARIAVÉIS GLOBAIS-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
	public static Scanner entrada = new Scanner(System.in);
	public static String opcao = "";
	public static int dificuldade = 0;
	public static String nomeJogador = "";
	public static int thread1 = 0;
	public static int thread2 = 0;
	public static int thread3 = 0;
	public static int[] status = { 100, 2 };

	// CORES DO TEXTO
	public static final String RESET = "\u001B[30m";
	public static final String RED = "\u001B[31m";
	public static final String GREEN = "\u001B[32m";
	public static final String YELLOW = "\u001B[33m";
	public static final String BLUE = "\u001B[34m";
	public static final String MAGENTA = "\u001B[35m";
	public static final String CYAN = "\u001B[36m";
	public static final String WHITE = "\u001B[37m";
	
	// NEGRITO DO TEXTO 
	public static final String RESET_BOLD = "\u001B[0m";
	public static final String BOLD = "\u001B[1m";
	
	

	// CORES DO FUNDO DO TEXTO
	public static final String RESET_BACKGROUND = "\u001B[0m";
	public static final String BLACK_BACKGROUND = "\u001B[40m";
	public static final String RED_BACKGROUND = "\u001B[41m";
	public static final String GREEN_BACKGROUND = "\u001B[42m";
	public static final String YELLOW_BACKGROUND = "\u001B[43m";
	public static final String BLUE_BACKGROUND = "\u001B[44m";
	public static final String PURPLE_BACKGROUND = "\u001B[45m";
	public static final String CYAN_BACKGROUND = "\u001B[46m";
	public static final String WHITE_BACKGROUND = "\u001B[47m";

	// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-MAIN-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
	public static void main(String[] args) {

		boolean cond = true;
		

		do {

			System.out.print(Tabula1(6, "---Menu---\n\n"));
			System.out.print(Tabula2(2, "[1] Intruções", 6, "[2] Jogar\n"));
			System.out.print(Tabula2(2, "[3] Créditos", 6, "[4] Sair\n"));

			String opcao_Menu = Option();

			switch (opcao_Menu) {

			case "1":
				Instruções();
				break;

			case "2":

				Jogar();
				Hist_1();
				//ExecutaTemplo1();
				Hist_2();
				ExecutaTemplo2();
				ExecutaTemplo3(status);
				
				
				break;

			case "3":
				Créditos();
				break;

			case "4":

				cond = false;
				break;

			default:

				System.out.print(RED + Tabula1(6, "Opção não é válida!\n\n") + RESET);

			}

		} while (cond);

	}

	// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-JOGO-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

	// PROCEDIMENTO PARA ARMAZENAR AS INFORMAÇÕES DAS INTRUÇÕES
	public static void Instruções() {

		System.out.print("\n");
		Texto_Formatado("\nO objetivo do jogo é auxiliar o jogador em alguns conhecimentos da matemática."
				+ " Ao longo da jornada, serão apresentados conteúdos sobre a matéria em questão e "
				+ "apresentadas perguntas ao jogador. O mesmo deverá selecionar as opções válidas para que ele possa"
				+ " avançar no jogo e a cada questão, o jogador sofrerá um dano se errar, diminuindo assim sua vida."
				+ " O objetivo final do jogador, é avançar por todos os templos para derrotar o último chefe, sem perder toda a sua vida.");
		System.out.print("\n");
		Sair();

	}

	// PROCEDIMENTO PARA FAZER A 1º CHAMADA DO JOGO, PARA COLETAR AS INFORMAÇÕES DO
	// NOME DO JOGADOR, A DIFICULDADE DO JOGO E A HISTÓRIA INICIAL
	public static void Jogar() {

		Texto_Formatado(Tabula1(4, "---Escolha a sua dificuldade de jogo---\n\n")
				+ Tabula3(1, "[1] Fácil", 3, "[2] Normal", 3, "[3] Difícil"));

		boolean cond = true;

		do {

			String opcao_Menu = Option();
			switch (opcao_Menu) {

			case "1":
				dificuldade = 1;
				cond = false;
				break;

			case "2":
				dificuldade = 2;
				cond = false;
				break;

			case "3":
				dificuldade = 3;
				cond = false;
				break;

			default:
				System.out.print(RED + Tabula1(6, "Opção não é válida!\n\n") + RESET);

			}
		} while (cond);

		Texto_Formatado(Tabula1(4, "   ---Escolha o nome do seu jogador---"));
		nomeJogador = Option();

		boolean cond2 = true;
		do {

			Texto_Formatado(Tabula1(4,
					"---Você deseja que o nome do seu jogador seja " + RED + nomeJogador + RESET + " ?---\n\n")
					+ Tabula2(4, GREEN + "[S]" + RESET, 6, RED + "[N]" + RESET));
			String opcao_Menu = Option();

			switch (opcao_Menu.toUpperCase()) {
			case "S":
				cond2 = false;
				break;
			case "N":
				Texto_Formatado(Tabula1(4, "---Escolha o nome do seu jogador---"));
				nomeJogador = Option();
				break;
			default:
				System.out.print(RED + Tabula1(6, "Opção não é válida!\n\n") + RESET);
			}
		} while (cond2);

	}

	// PROCEDIMENTO PARA ARMAZENAR AS INFORMAÇÕES DOS CRÉDITOS
	public static void Créditos() {

		System.out.print("\n");
		Texto_Formatado(Tabula3(2,"\nGustavo Tozeti",2,"Matheus Cavalcanti",2,"Renan Kesper"));
		System.out.print("\n");
		Sair();

	}

	
	// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-HISTÓRIA-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
	
	// PRIMEIRA NARRATIVA DO JOGO
	public static void Hist_1() {

		System.out.print("\n");
		
		Texto_Formatado(
				
				
				Dialogo("Narrador",WHITE) + "\n - Aos escombros, uma leve página, parecida de um diário, pousa sobre o rosto de "+ nomeJogador +". Aos sustos, " + nomeJogador +" acorda e começa a ler a página." +
				
				Dialogo(nomeJogador,WHITE)+ GREEN
				+ "\n - \"Reza a lenda que Ariandre era um lugar próspero, cheio de magia e encanto, onde todos os seres viviam em harmonia e em paz. Um lugar tão belo,"					
				+ " que a matemática era a base de força para grandes magos. Mas isso é claro, antes do grande acontecimento. . .Ninguém sabe ao certo, nem ao menos como,"				
				+ " mas naquela tarde esse lugar tão calmo e pleno, foi reduzido a cinzas e escombros, uma enorme escuridão pairou pelos céus e tomou Ariandre por inteiro "			
				+ "e com um simples clarão. . .tudo foi destruído. Após momentos agoniantes, enfim o motivo disso tudo. . . sim, ele que era apenas uma fábula de centenas de "			
				+ "anos, de contos muito antigos, enfim ressurgiu. . . Ancelot tinha despertado. O grande rei demônio estava presente novamente, "			
				+ "para aprisionar toda a matemática de Ariandre e ser o detentor de toda a magia. Já se passaram alguns meses depois disso tudo, mas agora espero "					
				+ "ter forças para enfrentá-lo, mas a cada dia que se passa nessas catedrais do abismo perco mais e mais da minha sanidade. Talvez eu seja a última esperança "			
				+ "de Ariandre, mas caso alguém esteja lendo isso, significa que Ancelot venceu e Ariandre para sempre estará sob o seu domínio.\"" 									
				
				+ Dialogo(nomeJogador,WHITE) +  GREEN + "\n - Mas. . . mas como? Meses? Estava tudo certo, ele estava em minhas mãos, como foi tudo isso desmoronar. Minha "					
				+ "cabeça dói, são memórias que me vem, mas o que será que aconteceu? Por que eu estou nas catedrais e porque Ariandre está destruída? Será isso um sonho?"
				+ " Eu preciso descobrir o que aconteceu, mas me sinto estranho. Parece que não tenho mais meus poderes. Será que eu consigo canalizar algo??"
				
				+ Dialogo("Narrador",WHITE) + "\n - "+nomeJogador+ " tenta utilizar, uma de suas magias vinda através dos poderes da matemática, mas sem sucesso! "
				+ "E como em um turbilhão de memórias, "+nomeJogador+" começa a se lembrar daquele fatídico dia.\n\n"
						
				+Tabula1(4,"Alguns meses antes...") 
				
				+ Dialogo(nomeJogador,WHITE) +  GREEN + "\n - Finalmente, depois de anos de estudos e cálculos, finalmente irei despertar Ancelot e enfim obter o seu"
				+ " poder supremo."
				
				+ Dialogo("Narrador",WHITE) + "\n - "+nomeJogador+ " por mais que fosse extremamente forte, jamais saberia que o terrível Ancelot portava de uma maldição, que "
				+ "quem o invoca-se traria destruição ao seu mundo. Ao passo em que o ritual de invocação se iniciava, um grande portal cheio de trevas se abriu no chão e dele "
				+ "saía o fim dos tempos."
				
				+ Dialogo("Ancelot",WHITE) +  RED + "\n - Finalmente livre!!"	
				
				+ Dialogo(nomeJogador,WHITE) +  GREEN + "\n - Jamais Ancelot, eu "+ nomeJogador +" sou o ser mais supremo de toda Ariandre, você não é pareo para os meus poderes. Apenas te "
				+ "invoquei para obter toda sua fonte de poder e assim te derrotá-lo para sempre. "
				
				+ Dialogo("Ancelot",WHITE) +  RED + "\n - Tolo, você não é a primeira pessoa a tentar isso. Vocês todos tentam, mas todos esquecem da maldição!!"	
				
				+ Dialogo(nomeJogador,WHITE) +  GREEN + "\n - Maldição? Que maldição?!"
				
				+ Dialogo("Ancelot",WHITE) +  RED + "\n - Pelo visto, você não está preparado HAHAHAHAH. Mas talvez o que eu faça aqui, sirva de lição para você."
				
				+ Dialogo("Narrador",WHITE) + "\n - E com uma enorme força e magia, que surpreendia até "+nomeJogador+", Ancelot conseguiu drenar todos os seus poderes. Com vários feixes de luz, "
				+ nomeJogador+" via seus poderes se esvaindo ao longo de si."
				
				+ Dialogo("Ancelot",WHITE) +  RED + "\n - "+nomeJogador+", você me parece interessante. Irei espalhar esses seus poderes nas mais profundas terras de Ariandre e caso você sobreviva, terá seus "
				+ "poderes de volta para me enfrentar."
				
				+ Dialogo("Narrador",WHITE) + "\n - Com um imenso clarão, tudo ficou em silêncio. Até agora...\n\n"
				
				+Tabula1(4,"Atualmente...")
				
				+ Dialogo(nomeJogador,WHITE) +  GREEN + "\n - Droga! Preciso recuperar meus poderes e derrotar Ancelot. Mas onde estou?"
				
				+ Dialogo("Narrador",WHITE) + "\n - "+nomeJogador+" olha em volta e se depara com escombros e ruínas. Mas começa a perceber que existem símbolos escritos nas paredes que são familiares. "
				+ "Estes símbolos remetem a algumas descrições dos templos da perdição das catedrais. É de grande espanto, pois "+nomeJogador+" ao reconhecer às escritas, lembrou que os templos eram mitos da terra "
				+ "antiga e que eram locais responsáveis por um grande armazenamento de magia."
				
				+ Dialogo(nomeJogador,WHITE) +  GREEN + "\n - Se ele disse que meus poderes estão nas mais profundas terras de Ariandre, então só podem estar espalhados entre os três templos daqui. "
				+ "Preciso ir em frente!"
				
				+Dialogo("Narrador",WHITE) + "\n - "+nomeJogador+ "adentra no templo das "+BOLD+"Equações de 1º Grau"+RESET_BOLD+", um lugar que lhe faz relembrar dos seus inícios de treinamento de mago. "
				+ "Tanto é, que esse conhecimento era a base dos seus grandiosos poderes."
						
				+ Dialogo("Narrador",WHITE) + "\n - Os templos possuem feitiços incríveis e fazem com quem adentrar ao local tenha a sabedoria para conquistar o poder armazenado nele. E não foi diferente com esse templo."
				+ nomeJogador+" após passar por um portal mágico do templo, teve uma viagem mística até onde estavam os desafios para recuperar seu poder. Dentro dessa viagem, uma voz desconhecida lhe passou os seguintes "
				+ "ensinamentos…"
				
				+ Dialogo("Voz Desconhecida",WHITE) + CYAN + "\n - Olá "+ nomeJogador+", que bom te ver aqui!!"
				
				+ Dialogo(nomeJogador,WHITE) +  GREEN + "\n - Mas quem é você?"
				
				+ Dialogo("Voz Desconhecida",WHITE) + CYAN + "\n - Não se preocupe, sou apenas um ajudante de Ariandre e estou aqui para ajudar em sua jornada. Não temos muito tempo a frente então serei o mais rápido possível, "
				+ "isso lhe guiará nos seus próximos desafios daqui para frente."
				
				+ Dialogo("Narrador",WHITE) + "\n - E parecendo uma voz familiar, "+ nomeJogador+" escutou os ensinamentos que a voz desconhecida tinha a oferecer."
				
				+ Dialogo("Voz Desconhecida",WHITE) + CYAN + "\n - O poder deste templo são às"+BOLD(" Equações de 1º Grau",CYAN)+", elas serão a base para sua fonte de poder. Para derrotar os desafios à frente, você irá precisar dos "
				+ "conhecimentos básicos a fim de quebrar os feitiços que serão lançados a ti. Então preste muita atenção..."
				
				+ Dialogo("Voz Desconhecida",WHITE) + CYAN + "\n - As equações de primeiro grau são sentenças matemáticas que estabelecem relações de igualdade entre termos conhecidos e desconhecidos, "
				+ "representadas sob a forma: "+BOLD("ax+b = 0",CYAN)+". Donde "+BOLD("a",CYAN)+" e "+BOLD("b",CYAN)+" são números reais, sendo "+BOLD("a",CYAN)+" um valor diferente de zero "+BOLD("(a != 0)",CYAN)+" e "+BOLD("x ",CYAN)+ "representa o "
				+ "valor desconhecido. O valor desconhecido é chamado de "+BOLD("incógnita",CYAN)+" que significa \"termo a determinar\". As equações do 1º grau podem apresentar "+BOLD("uma",CYAN)+" ou "+BOLD("mais",CYAN)+" incógnitas."
				
				+ Dialogo("Voz Desconhecida",WHITE) + CYAN + "\n - O objetivo de resolver uma equação de primeiro grau é "+BOLD("descobrir o valor desconhecido",CYAN)+", ou seja, encontrar o valor da incógnita que "+BOLD("torna a igualdade verdadeira",CYAN)+". Para isso, "
				+ "deve-se "+BOLD("isolar os elementos desconhecidos em um dos lados do sinal de igual e os valores constantes do outro lado",CYAN)+". Contudo, é importante observar que a mudança de posição desses elementos "+BOLD("deve ser feita de forma que a igualdade "
				+ "continue sendo verdadeira",CYAN)+". Quando um termo da equação mudar de lado do sinal de igual, devemos inverter a operação. Assim, se tiver multiplicando, passará dividindo, se tiver somando, passará subtraindo e vice-versa."
				
				+ Dialogo("Voz Desconhecida",WHITE) + CYAN + "\n - Agora você está pronto para o caminho em frente. Espero te ver logo, adeus…"
				
				+ Dialogo("Narrador",WHITE) + "\n - E com essa despedida,"+ nomeJogador+" saiu de sua viagem mística e já estava em apuros."
				
				+ Dialogo("Ancelot",WHITE) +  RED + "\n - Parece que você sobreviveu depois de tudo aquilo e ainda conseguiu chegar até aqui. Você não terá seu poder de volta tão fácil HAHAHHA. Veremos se você é realmente capaz de enfrentar meus 3 feitiços.");
				
								
				
				
		
		System.out.print("\n");

	}

	public static void Hist_2(){
		
		System.out.print("\n");
		
		Texto_Formatado(
				
				Dialogo("Ancelot",WHITE) +  RED + "\n - Impossível, como você conseguiu ? Isso ainda não acabou, nós iremos nos encontrar novamente."
				
				+ Dialogo(nomeJogador,WHITE) +  GREEN + "\n - Onde você estiver, eu estarei lá para te derrotar!"
				
				+ Dialogo("Narrador",WHITE) + "\n - E diante de um clarão Ancelot, desapareceu… Mas no local da batalha grandiosa, uma enorme chama, surgia no meio da arena. Era o poder perdido de "+nomeJogador+",  que ao se aproximar, pode absorver novamente seu poder."
				
				+ Dialogo(nomeJogador,WHITE) +  GREEN + "\n - Como é bom ter meus poderes de volta!"
				
				+ Dialogo("Narrador",WHITE) + "\n - Com a grande primeira batalha travada, "+nomeJogador+" continuou em sua jornada para o próximo templo adentrando no próximo portal."
						
				+ Dialogo("Voz Desconhecida",WHITE) + CYAN + "\n - Olá "+ nomeJogador+", que bom que você sobreviveu!!"
				
				+ Dialogo("Voz Desconhecida",WHITE) + CYAN + "\n - Precisamos continuar sua batalha."
				
				+ Dialogo("Voz Desconhecida",WHITE) + CYAN + "\n - O poder deste templo são às"+BOLD(" Equações de 2º Grau",CYAN)+", elas serão o fortalecimento do seu poder. Para derrotar os desafios à frente, você irá precisar dos "
				+ "conhecimentos básicos a fim de quebrar os feitiços que serão lançados a ti. Então preste muita atenção..."
				
				(Δ
				
				
				
				+ Dialogo("Voz Desconhecida",WHITE) + CYAN + "\n - As equações de primeiro grau são sentenças matemáticas que estabelecem relações de igualdade entre termos conhecidos e desconhecidos, "
				+ "representadas sob a forma: "+BOLD("ax+b = 0",CYAN)+". Donde "+BOLD("a",CYAN)+" e "+BOLD("b",CYAN)+" são números reais, sendo "+BOLD("a",CYAN)+" um valor diferente de zero "+BOLD("(a != 0)",CYAN)+" e "+BOLD("x ",CYAN)+ "representa o "
				+ "valor desconhecido. O valor desconhecido é chamado de "+BOLD("incógnita",CYAN)+" que significa \"termo a determinar\". As equações do 1º grau podem apresentar "+BOLD("uma",CYAN)+" ou "+BOLD("mais",CYAN)+" incógnitas."
				
				+ Dialogo("Voz Desconhecida",WHITE) + CYAN + "\n - O objetivo de resolver uma equação de primeiro grau é "+BOLD("descobrir o valor desconhecido",CYAN)+", ou seja, encontrar o valor da incógnita que "+BOLD("torna a igualdade verdadeira",CYAN)+". Para isso, "
				+ "deve-se "+BOLD("isolar os elementos desconhecidos em um dos lados do sinal de igual e os valores constantes do outro lado",CYAN)+". Contudo, é importante observar que a mudança de posição desses elementos "+BOLD("deve ser feita de forma que a igualdade "
				+ "continue sendo verdadeira",CYAN)+". Quando um termo da equação mudar de lado do sinal de igual, devemos inverter a operação. Assim, se tiver multiplicando, passará dividindo, se tiver somando, passará subtraindo e vice-versa."
				
				
				
				
				
				
				+ Dialogo("Voz Desconhecida",WHITE) + CYAN + "\n - Agora você está pronto para o caminho em frente. Espero te ver logo, adeus…"
				
							
				+ Dialogo("Ancelot",WHITE) +  RED + "\n - Parece que você sobreviveu depois de tudo aquilo e ainda conseguiu chegar até aqui. Você não terá seu poder de volta tão fácil HAHAHHA. Veremos se você é realmente capaz de enfrentar meus 3 feitiços."
				
				
				
				
				);
	
	}	
	
	// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-FERRAMENTAS DE TEXTO-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

	// PROCEDIMENTO CRIADO PARA FORMATAR QUALQUER TEXTO, PARA PADRONIZAR O LAYOUT DA
	// MENSAGEM COM BASE EM UM VALOR PRÉ DETERMINADO
	public static void Texto_Formatado(String frase) {

		String texto = frase;
		String[] palavras = texto.split(" ");

		int contadorQntLetras = 0;
		int limiteLinha = 170;
		

		for (int i = 0; i < limiteLinha; i++) {
			System.out.print(RED + "=" + RESET);
		}
		System.out.print("\n");

		for (String palavra : palavras) {

			if (contadorQntLetras + palavra.length() >= limiteLinha) {
				contadorQntLetras = 0;
				System.out.print("\n");
			}

			System.out.print(palavra + " ");
			Timer2();
			if (palavra.length()>18){
				contadorQntLetras = 0;
			}
			else {
			contadorQntLetras += palavra.length() + 1;
			
			
			}
			
			}
		System.out.println("\n");

		for (int i = 0; i < limiteLinha; i++) {
			System.out.print(RED + "=" + RESET);
		}

	}

	// PROCEDIMENTOS CRIADOS PARA TABULAR QUALQUER TEXTO, PARA PADRONIZAR O LAYOUT DA
	// MENSAGEM
	public static String Tabula1(int t, String s) {

		String tab = "\t";
		String frase = "";
		for (int i = 0; i <= t; i++) {
			frase += tab;
		}
		frase += s;

		return frase;
	}

	public static String Tabula2(int t, String s, int tt, String ss) {

		String tab = "\t";
		String frase = "";

		for (int i = 0; i <= t; i++) {
			frase += tab;
		}
		frase += s;
		for (int i = 0; i <= tt; i++) {
			frase += tab;
		}
		frase += ss;
		return frase;
	}

	public static String Tabula3(int t, String s, int tt, String ss, int ttt, String sss) {

		String tab = "\t";
		String frase = "";

		for (int i = 0; i <= t; i++) {
			frase += tab;
		}
		frase += s;
		for (int i = 0; i <= tt; i++) {
			frase += tab;
		}
		frase += ss;
		for (int i = 0; i <= ttt; i++) {
			frase += tab;
		}
		frase += sss;
		return frase;
	}

	// PROCEDIMENTOS CRIADO PARA PADRONIZAR OS DIÁLOGOS
	public static String Dialogo(String Nome, String Cor) {
		String texto = "\n\n" + BLACK_BACKGROUND + Cor +Nome+ RESET + RESET_BACKGROUND;
		return texto;
		}
	
	public static String BOLD(String frase, String Cor) {
		String texto = RESET + BOLD + frase + RESET_BOLD + Cor;
		return texto;
	}
	
	// PROCEDIMENTOS CRIADO PARA PRINTAR A MENSAGEM ANTES DO BOSS
	static void FormataTexto1(String frase) {

		String[] palavra = frase.split(" ");

		for (String each : palavra) {
			System.out.print(each + " ");
			Timer2();
		}
	}

	// PROCEDIMENTOS CRIADO PARA PRINTAR A MENSAGEM DE GAME OVER
	static void FormataTexto2(String frase) {

		String[] palavra = frase.split(" ");

		for (String each : palavra) {
			System.out.print(each);
			Timer2();
		}

		System.out.print(" ");
	}
	
	// PROCEDIMENTOS CRIADO PARA ARMAZENAR A COLEÇÃO DE FRASES PARA ACERTOS
	static void Vitoria_Frase () {
		
		ArrayList<String> vitoria = new ArrayList();
		vitoria.add("Acertou novamente, droga droga droga...\n");
		vitoria.add("Vejo que acertou mais uma...\n");
		
		Collections.shuffle(vitoria);
		Collections.shuffle(vitoria);
		
		
		System.out.println(Dialogo("Ancelot",WHITE) +  RED + " - " + vitoria.get(0) + RESET);
		
	}
	
	// PROCEDIMENTOS CRIADO PARA ARMAZENAR A COLEÇÃO COLEÇÃO DE FRASES PARA ERROS
	static void Derrota_Frase () {
		
		ArrayList<String> derrota = new ArrayList();
		derrota.add("Você não conseguirá prosseguir nem que tente mil vezes.\n");
		derrota.add("Você não é capaz de seguir em frente\n");
		
		Collections.shuffle(derrota);
		Collections.shuffle(derrota);
		
		System.out.println(Dialogo("Ancelot",WHITE) +  RED + " - " + derrota.get(0) + RESET);
	}
	
	// PROCEDIMENTOS CRIADO PARA MOSTRAR MENSAGEM DE ACORDO COM A VIDA 
	// DO PERSONAGEM
	static void AcertouResposta(int healthPoints) {
		System.out.println("\nA resposta está...");
		Timer();
		System.out.println("...");
		Timer();
		System.out.println("...");
		Timer();
		System.out.println(GREEN + "Certa! :D\n" + RESET);

		if (healthPoints >= 30 && healthPoints < 65) {
			System.out.println("Parece que foi um desafio para você.");
		}
		if (healthPoints < 30) {
			System.out.println("Foi por pouco que você conseguiu passar!");
		}

	}
	
	// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-FERRAMENTAS DE INPUT-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

	// FUNÇÃO CRIADA PARA RETONAR UMA OPÇÃO DESEJADA DO USUÁRIO
	public static String Option() {
		System.out.print(BLACK_BACKGROUND + WHITE + "\n***Digite sua opção:" + RESET + RESET_BACKGROUND + " ");
		opcao = entrada.next();
		System.out.print("\n");
		return opcao;
	}

	// PROCEDIMENTO CRIADO PARA SAIR DE UMA OPÇÃO DE UM MENU
	public static void Sair() {
		Scanner sc = new Scanner(System.in);
		System.out.print("\nPressione a tecla ENTER para voltar!\n");
		sc.nextLine();
		System.out.println(" ");
	}

	
	// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-FERRAMENTAS DO JOGO-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

	// FUNÇÃO CRIADA PARA CALCULAR O DANO
	static int DanoRespostaErrada(int healthPoints) {
		Random dado = new Random();
		int jogada;

		System.out.println("\nA resposta está...");
		Timer();
		System.out.println("...");
		Timer();
		System.out.println("...");
		Timer();
		System.out.println(RED + "Errada :(" + RESET);
		System.out.println("\nAgora iremos jogar o dado para saber quanto de dano você irá tomar.");
		System.out.println("O número que caiu no dado é...");
		Timer();
		System.out.println("...");
		Timer();
		System.out.println("...");
		Timer();

		jogada = dado.nextInt(20) + 1;

		System.out.printf("**\t%d\t**\n", jogada);

		if (jogada <= 5) {
			System.out.println("Parece que você deu sorte e se esquivou do dano.");
		} else if (jogada > 5 && jogada <= 15) {
			System.out.println("Você levou 20 de dano");
			healthPoints = healthPoints - (20 + (5 * dificuldade));
		} else if (jogada > 15) {
			System.out.println("Você tomou dano crítico!");
			healthPoints = healthPoints - (30 + (5 * dificuldade));
		}

		System.out.printf("Total HP: %d\n\n", healthPoints);
		return healthPoints;
	}

	// PROCEDIMENTO CRIADO PARA DAR GAME-OVER AO JOGO
	static void GameOver() {
		System.out.println("Seu HP chegou a 0");

		String game = "G A M E";
		String over = "O V E R";

		FormataTexto2(game);
		FormataTexto2(over);

		System.out.println("\n");
	}

	// FUNÇÃO CRIADA PARA USAR POTIONS
	static int[] UsePotion(int healthPoints, int qntPotions) {

		
		boolean condicao = true;
		char opcao = 0;
		int[] status = new int[2];

		System.out.printf("HP atual: %d\nQuantidade de potions: %d\n\n", healthPoints, qntPotions);

		do {
			try {
				System.out.println("Você tem certeza que quer usar uma potion?\n" + GREEN + "[S]" + RESET + " ou " + RED
						+ "[N]\n" + RESET);
				
				opcao = Option().toUpperCase().charAt(0);
			} catch (Exception e) {
				System.out.println("Caracter inválido.");
			}

			if (qntPotions > 0) {
				switch (opcao) {
				case 'S':
					healthPoints = healthPoints + 20;
					qntPotions--;

					if (healthPoints > 100) {
						do {
							healthPoints--;
						} while (healthPoints != 100);
					}
					System.out.println("Você usou uma potion.");
					System.out.printf("Quantidade potions: %d\n", qntPotions);
					System.out.printf("Total HP: %d\n\n", healthPoints);
					condicao = false;
					break;
				case 'N':
					System.out.println("Você guardou a potion de volta na bolsa\n");
					condicao = false;
					break;
				}
			} else {
				System.out.println("Você não tem potions");
				condicao = false;
			}

		} while (condicao);

		status[0] = healthPoints;
		status[1] = qntPotions;

		return status;
	}

	// PROCEDIMENTOS DE TEMPO PARA IMPRIMIR MENSAGENS
	static void Timer() {
		try {
			Thread.sleep(thread1);
		} catch (Exception e) {

		}
	}

	static void Timer2() {
		try {
			Thread.sleep(thread2);
		} catch (Exception e) {

		}
	}

	static void Timer3() {
		try {
			Thread.sleep(thread3);
		} catch (Exception e) {

		}
	}

	// FUNÇÃO CRIADA PARA GERAR AS PERGUNTAS AO JOGADOR
	static int[] ProcessoAlternativas_Geral(String[] opcoes, int[] status, String respostaCerta) {
		// Area para declarar variaveis
		Scanner sc = new Scanner(System.in);
		String resposta;
		boolean condicao = true;

		System.out.printf("[ A ] %S\n", opcoes[0]);
		Timer2();
		System.out.printf("[ B ] %S\n", opcoes[1]);
		Timer2();
		System.out.printf("[ C ] %S\n", opcoes[2]);
		Timer2();
		System.out.printf("[ D ] %S\n", opcoes[3]);
		Timer2();
		System.out.printf("[ E ] %S\n\n", opcoes[4]);
		Timer2();
		System.out.println("Resposta certa: " + respostaCerta.toUpperCase());
		Timer2();

		////////////////////////////////////////////////////////////////////////
		// Area para processo de alternativas
		do {

			resposta = Option().toUpperCase();
			if (status[0] <= 0) {
				GameOver();
				condicao = false;
			}

			switch (resposta.charAt(0)) {
			case 'A':
				if (opcoes[0].equals(respostaCerta)) {
					AcertouResposta(status[0]);
					condicao = false;
				} else {
					status[0] = DanoRespostaErrada(status[0]);
					if (status[0] <= 0) {
						GameOver();
						condicao = false;
					}
				}
				break;
			case 'B':
				if (opcoes[1].equals(respostaCerta)) {
					AcertouResposta(status[0]);
					condicao = false;
				} else {
					status[0] = DanoRespostaErrada(status[0]);
					if (status[0] <= 0) {
						GameOver();
						condicao = false;
					}
				}
				break;

			case 'C':
				if (opcoes[2].equals(respostaCerta)) {
					AcertouResposta(status[0]);
					condicao = false;
				} else {
					status[0] = DanoRespostaErrada(status[0]);
					if (status[0] <= 0) {
						GameOver();
						condicao = false;
					}
				}
				break;
			case 'D':
				if (opcoes[3].equals(respostaCerta)) {
					AcertouResposta(status[0]);
					condicao = false;
				} else {
					status[0] = DanoRespostaErrada(status[0]);
					if (status[0] <= 0) {
						GameOver();
						condicao = false;
					}
				}
				break;
			case 'E':
				if (opcoes[4].equals(respostaCerta)) {
					AcertouResposta(status[0]);
					condicao = false;
				} else {
					status[0] = DanoRespostaErrada(status[0]);
					if (status[0] <= 0) {
						GameOver();
						condicao = false;
					}
				}
				break;
			case 'P':
				status = UsePotion(status[0], status[1]);
			}
		} while (condicao);

		return status;
	}

		
// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-TEMPLOS-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

	// TEMPLO 3
	static int[] ExecutaTemplo3(int[] status) {
		Scanner sc = new Scanner(System.in);
		boolean condicao = true;

		do {
			status = Desafio1_Templo3(status);
			if (status[0] > 0) {
				System.out.println("\nVocê concluiu o primeiro desafio!");
				Timer2();
				System.out.println("Parabéns, você ganhou uma Poção!");
				status[1]++;
				Timer2();
				System.out.println("HP: " + status[0]);
				Timer2();
				System.out.println("Poção: " + status[1]);
				Timer();
				System.out.println(" ");

				condicao = false;
			} else {
				System.out.println("Você terá que refazer o desafio\n");
				status[0] = 100;
			}
		} while (condicao);

		System.out.print("\nAperte ENTER para começar o segundo Deafio");
		sc.nextLine();
		System.out.println(" ");

		do {
			status = Desafio2_Templo3(status);
			if (status[0] > 0) {
				System.out.println("\nVocê concluiu o segundo desafio!");
				Timer2();
				System.out.println("Parabéns, você ganhou uma Poção!");
				status[1]++;
				Timer2();
				System.out.println("HP: " + status[0]);
				Timer2();
				System.out.println("Poção: " + status[1]);
				Timer();
				System.out.println(" ");

				condicao = false;
			} else {
				System.out.println("Você terá que refazer o desafio\n");
				status[0] = 100;
			}
		} while (condicao);

		System.out.print("\nAperte ENTER para começar o último Deafio");
		sc.nextLine();
		System.out.println(" ");

		do {
			status = Desafio3_Templo3(status);
			if (status[0] > 0) {
				System.out.println("\nVocê concluiu o último desafio!");
				Timer2();
				System.out.println("Parabéns, você ganhou uma Poção!");
				status[1]++;
				Timer2();
				System.out.println("HP: " + status[0]);
				Timer2();
				System.out.println("Poção: " + status[1]);
				Timer();
				System.out.println(" ");

				condicao = false;
			} else {
				System.out.println("Você terá que refazer o desafio\n");
				status[0] = 100;
			}
		} while (condicao);

		Timer();
		System.out.println("Você conseguiu concluir o Templo das Conversões");
		Timer2();
		FormataTexto1("Você está preparado para o ");
		FormataTexto2("F I N A L ");
		FormataTexto2("B O S S ");
		FormataTexto2("? ? ?");
		System.out.println("\n");
		return status;
	}

	// DESAFIO É CONVERTER UM NÚMERO QUE ESTÁ EM UMA BASE PARA OUTRA
	static int[] Desafio1_Templo3(int[] status) {
		int baseInicial, baseConversao;
		String respostaCerta;

		String[] numeroInicial = new String[1];
		String[] opcoes = new String[5];
		ArrayList<String> respostaErrada = new ArrayList();

		////////////////////////////////////////////////////////////////////////
		// Area para preparar os numeros
		baseInicial = DeterminaBase_Templo3(); // Determinando a base standard

		do {
			baseConversao = DeterminaBase_Templo3(); // Determinando a base de conversao
		} while (baseConversao == baseInicial);

		numeroInicial[0] = DeterminaNumero_Templo3(baseInicial); // Determinando o numero standard

		respostaCerta = DeterminaNumeroConv_Templo3(numeroInicial, baseInicial, baseConversao); // Determinando o numero
																								// de conversao (certo)

		respostaErrada.add(respostaCerta); // Adicionando a resposta certa nas opcoes

		for (int i = 0; i < 4; i++) {
			respostaErrada.add(DeterminaOpcoes(baseConversao, respostaCerta)); // Adicionando opcoes erradas
		}

		Collections.shuffle(respostaErrada); // Embaralhando as opcoes para que haja uma aleatoriedade
		Collections.shuffle(respostaErrada);

		for (int i = 0; i < opcoes.length; i++) {
			opcoes[i] = respostaErrada.get(i); // Transferindo as opcoes do ArrayList para uma String[]
		}

		////////////////////////////////////////////////////////////////////////
		// Area de logica do game
		Texto_Formatado(Tabula1(4, "***\tWELCOME TO THE 1ST GAME\t***\n"));

		System.out.printf("\nConverta o numero %S que esta na base %d para a base %d\n\n", numeroInicial[0],
				baseInicial, baseConversao);
		Timer2();

		status = ProcessoAlternativas_Geral(opcoes, status, respostaCerta);

		return status;
	}

	// DESAFIO É SOMAR DOIS NÚMEROS QUE ESTÃO EM UMA BASE E CONVERTER PARA OUTRO
	static int[] Desafio2_Templo3(int[] status) {
		// Area para inicializar variaveis
		int baseInicial, baseConversao;
		String respostaCerta;

		String[] numeroInicial = new String[2];
		String[] opcoes = new String[5];
		ArrayList<String> respostaErrada = new ArrayList();
		////////////////////////////////////////////////////////////////////////
		// Area para declarar os numeros

		baseInicial = DeterminaBase_Templo3(); // Gerar a base standard

		do {
			baseConversao = DeterminaBase_Templo3(); // Gerar a base para conversao
		} while (baseConversao == baseInicial);

		numeroInicial[0] = DeterminaNumero_Templo3(baseInicial); // Gerar o numero standard A
		numeroInicial[1] = DeterminaNumero_Templo3(baseInicial); // Gerar o numero standard B

		respostaCerta = DeterminaNumeroConv_Templo3(numeroInicial, baseInicial, baseConversao); // Gerar a resposta
																								// certa

		respostaErrada.add(respostaCerta); // Adicionando a resposta certa no ArrayList

		for (int i = 0; i <= 3; i++) {
			respostaErrada.add(DeterminaOpcoes(baseConversao, respostaCerta)); // Criando respostas erradas para o
																				// ArrayList
		}

		Collections.shuffle(respostaErrada); // Embaralhando as opcoes
		Collections.shuffle(respostaErrada);

		for (int i = 0; i < opcoes.length; i++) {
			opcoes[i] = respostaErrada.get(i); // Adicionando as opcoes embaralhadas numa String para fazer o desafio
		}

		Texto_Formatado(Tabula1(4, "***\tWELCOME TO THE 2ND GAME\t***\n"));
		Timer2();
		System.out.printf("\nFaça a seguinte conversão:\n%S + %S (na base %d) = X (na base %d)\n\n", numeroInicial[0],
				numeroInicial[1], baseInicial, baseConversao);
		Timer2();

		ProcessoAlternativas_Geral(opcoes, status, respostaCerta);

		return status;
	}

	// DESAFIO É MULTIPLICAR DOIS NÚMEROS QUE ESTÃO EM UMA BASE E CONVERTER PARA OUTRO
	static int[] Desafio3_Templo3(int[] status) {
		// Area para declarar variaveis
		int baseInicial, baseConversao, aux;
		String respostaCerta;

		String[] numeroInicial = new String[2];
		String[] opcoes = new String[5];
		ArrayList<String> respostaErrada = new ArrayList();
		////////////////////////////////////////////////////////////////////////
		// Area para iniciar variaveis
		baseInicial = DeterminaBase_Templo3(); // Gerar a base inicial

		do {
			baseConversao = DeterminaBase_Templo3(); // Gerar a base para conversao
		} while (baseConversao == baseInicial);

		numeroInicial[0] = DeterminaNumero_Templo3(baseInicial); // Gerar numero standard A
		numeroInicial[1] = DeterminaNumero_Templo3(baseInicial); // Gerar numero standard B

		aux = (Integer.parseInt(numeroInicial[0], baseInicial)) * (Integer.parseInt(numeroInicial[1], baseInicial)); // Convertendo
																														// o
																														// produto
																														// dos
																														// numeros
																														// standard
																														// para
																														// int

		respostaCerta = Integer.toString(aux, baseConversao); // Convertendo o produto dos numeros standard para a base
																// de conversao

		respostaErrada.add(respostaCerta); // Adicionando a resposta certa nas opcoes

		for (int i = 0; i <= 3; i++) {
			respostaErrada.add(DeterminaOpcoes(baseConversao, respostaCerta)); // Adicionando as opcoes erradas
		}

		Collections.shuffle(respostaErrada); // Embaralhando as opcoes
		Collections.shuffle(respostaErrada);

		for (int i = 0; i < opcoes.length; i++) {
			opcoes[i] = respostaErrada.get(i);// Adicionando as opcoes em String para fazer o desafio
		}

		Texto_Formatado(Tabula1(4, "***\tWELCOME TO THE 3ND GAME\t***\n"));

		System.out.printf("\nFaça a seguinte conversão:\n%S * %S (na base %d) = X (na base %d)\n\n", numeroInicial[0],
				numeroInicial[1], baseInicial, baseConversao);
		Timer2();

		ProcessoAlternativas_Geral(opcoes, status, respostaCerta);

		return status;
	}

	// FUNÇÕES DO TEMPLO 3
	static int DeterminaBase_Templo3() {

		ArrayList<Integer> bases = new ArrayList();

		bases.add(2);
		bases.add(8);
		bases.add(10);
		bases.add(16);

		Collections.shuffle(bases);
		Collections.shuffle(bases);

		return bases.get(0);
	}

	static String DeterminaNumero_Templo3(int baseInicial) {

		Random dado = new Random();
		int numRandom;
		String baseAconv = null;

		do {
			numRandom = dado.nextInt(2000);
		} while (numRandom <= 50);

		switch (baseInicial) {
		case 2:
			baseAconv = Integer.toBinaryString(numRandom);
			break;
		case 8:
			baseAconv = Integer.toOctalString(numRandom);
			break;
		case 10:
			baseAconv = Integer.toString(numRandom);
			break;
		case 16:
			baseAconv = Integer.toHexString(numRandom);
			break;
		}

		return baseAconv;
	}

	static String DeterminaOpcoes(int baseConversao, String respostaCerta) {
		Random dado = new Random();
		int aux = Integer.parseInt(respostaCerta, baseConversao);
		String opcoesFalsas;

		do {
			aux = aux + dado.nextInt(30);
			aux = aux - 15;
			opcoesFalsas = Integer.toString(aux, baseConversao);
		} while (opcoesFalsas.equals(respostaCerta));

		return opcoesFalsas;
	}

	static String DeterminaNumeroConv_Templo3(String[] numeroInicial, int baseInicial, int baseConversao) {
		int aux = 0;
		String respostaConversao;

		for (int i = 0; i < numeroInicial.length; i++) {
			aux = aux + Integer.parseInt(numeroInicial[i], baseInicial);
		}

		respostaConversao = Integer.toString(aux, baseConversao);

		return respostaConversao;
	}

	// TEMPLO 2
	static void ExecutaTemplo2(){
		Desafio1_Templo2();
		Desafio2_Templo2();
		Desafio3_Templo2();
}
	
	// FUNÇÕES DO TEMPLO 2
	static void Desafio1_Templo2() {
		//variáveis
		int r;
		Random rng = new Random();
		String opcao, enunciado;
		boolean repete = true;
				
		//Enunciado
		System.out.println("Olá! Nesse templo nós teremos três testes relacionados a equações do segundo grau.");
				
		//Questão
				
		//RANDOMIZANDO A QUESTÃO E REPETINDO ATÉ O ACERTO OU VIDA = 0
		
		do{
			r = rng.nextInt(3);
		switch(r) {
		//RECEBENDO A QUESTÃO RANDOMIZADA E RESOLVENDO A QUESTÃO.
			case 0:
				enunciado = "Primeiramente me diga, quais são os coeficiêntes dessa equação de segundo grau. 2x² + x – 3 = 0";
				System.out.println(enunciado);
				System.out.println("a) a = -2 b = 0 c = -3 \n"
						+ "b) a = 2 b = 1 c = 3 \n"
						+ "c) a = 2 b = 1 c = -3 \n"
						+ "d) a = 2 b = 0 c = -3");
				
				opcao = Option();
			
				if(opcao.equalsIgnoreCase("c")) {
					AcertouResposta(status[0]);
					Vitoria_Frase();
					repete = false;
				}else {
					DanoRespostaErrada(status[0]);
					Derrota_Frase();
				}
				break;
				
			case 1:
				enunciado = "Primeiramente me diga, quais são os coeficiêntes dessa equação de segundo grau. –3x² + 18x – 15 = 0.";
				System.out.println(enunciado);
				System.out.println("a) a = -3 b = -18 c = -15 \n"
						+ "b) a = 3 b = 18 c = -15 \n"
						+ "c) a = -3 b = 18 c = 15 \n"
						+ "d) a = -3 b = 18 c = -15");
				
				opcao = Option();
				
				if(opcao.equalsIgnoreCase("d")) {
					AcertouResposta(status[0]);
					Vitoria_Frase();
					repete = false;
				}else {
					DanoRespostaErrada(status[0]);
					Derrota_Frase();
				}
				break;
				
			case 2:
				enunciado = "Primeiramente me diga, quais são os coeficiêntes dessa equação de segundo grau. 3x² – x – 1 = 0.";
				System.out.println(enunciado);
				
				System.out.println("a) a = -3 b = -1 c = -1 \n"
						+ "b) a = 3 b = -1 c = -1 \n"
						+ "c) a = -3 b = 0 c = 1 \n"
						+ "d) a = 3 b = -1 c = 1");
				
				opcao = Option();
				
				if(opcao.equalsIgnoreCase("b")) {
					AcertouResposta(status[0]);
					Vitoria_Frase();
					repete = false;
				}else {
					DanoRespostaErrada(status[0]);
					Derrota_Frase();
				}
				break;
		}
		
	}while(repete);
		}
	
	static void Desafio2_Templo2() {
		//variáveis
		int r;
		Random rng = new Random();
		String opcao, enunciado;
		boolean repete = true;
		//Enunciado
		System.out.println("Aaaah, sim, vejo que você foi capaz de passar pelo meu primeiro teste! Maravilhoso, vamos apimentar um pouco mais as coisas");
		
		//Randomizando a questão
		
		
		//RECEBENDO A QUESTÃO RANDOMIZADA E RESOLVENDO A QUESTÃO.
		do {
			r = rng.nextInt(3);
		switch(r) {
		case 0:
			enunciado = "Qual é a maior raiz da equação -2x² + 3x + 5 = 0?";
			System.out.println(enunciado);
			System.out.println("a) -1\n"
					+ "b) -2,5\n"
					+ "c)2\n"
					+ "d)2,5\n");
			
			opcao = Option();
			
			if(opcao.equalsIgnoreCase("d")) {
				
				AcertouResposta(status[0]);
				Vitoria_Frase();
				repete = false;
			}else {
				DanoRespostaErrada(status[0]);
				Derrota_Frase();
			}
			break;
		case 1:
			enunciado = "Qual é a menor raiz da equação 2x² + 7x + 5 = 0";
			System.out.println(enunciado);
			System.out.println("a) -1 \n"
					+ "b) 1\n"
					+ "c) -5/2\n"
					+ "d) -2");
			
			opcao = Option();	
			
			if(opcao.equalsIgnoreCase("c")) {
				AcertouResposta(status[0]);
				Vitoria_Frase();
				repete = false;
				}else {
					DanoRespostaErrada(status[0]);
					Derrota_Frase();
				
				}
			break;
		case 2:
			enunciado = "Quais são as duas raízes da equação 3x² – x – 2 = 0";
			System.out.println(enunciado);
			System.out.println("a) x1 = 2/3 x2 = 1\n"
					+ "b) x1 = -2/3 x2 = -1 \n"
					+ "c) x1 = -2/3 x2 = 1 \n"
					+ "d) x1 = -1 x2 = 2/3");
			
			opcao = Option();
			if(opcao.equalsIgnoreCase("c")) {
				AcertouResposta(status[0]);
				Vitoria_Frase();
				repete = false;
				}else {
					DanoRespostaErrada(status[0]);
					Derrota_Frase();
				
				}
			break;
			
		}
		}while(repete);	
	
	}
	
	static void Desafio3_Templo2() {
		//Variaveis
		int r;
		Random rng = new Random();
		String opcao, enunciado;
		boolean repete = true;
		//Enunciado
		System.out.println("TUDO QUE EU JOGO PARA VOCÊ, ESTÁ CONSEGUINDO RESOLVER... Bom...você é bom, faz tempo que não uso todo o meu poder, "
				+ "agora você conhecerá a minha fúria, dúvido que irá conseguir responder as próximas questões...");
		do {
			r = rng.nextInt(3);
		switch(r) {
		case 0:
			enunciado = "Qual é a resolução da seguinte equação do segundo grau x² – 4x – 5 = 0?";
			System.out.println(enunciado);
			System.out.println("a) x1 = 1 x2 = 5"
					+ "b) x1 = -1 x2 = 5\n"
					+ "c) x1 = -1 x2 = -5\n"
					+ "d) x1 = -5 x2 = 1\n");
			
			opcao = Option();
			
			if(opcao.equalsIgnoreCase("b")) {
				
				AcertouResposta(status[0]);
				Vitoria_Frase();
				repete = false;
			}else {
				DanoRespostaErrada(status[0]);
				Derrota_Frase();
				}
			break;
		case 1:
			enunciado = "Eu quero que me diga, temos na equação 10x² – 1000 = 0, duas raízes reais e distintas, a e b, que podem ser encontradas. "
					+ "Mostre a mim que sabe! Determine a² + b²";
			System.out.println(enunciado);
			System.out.println("a) 100 \n"
					+ "b) 50 \n"
					+ "c) 250\n"
					+ "d) 200");
			
			opcao = Option();	
			
			if(opcao.equalsIgnoreCase("d")) {
				AcertouResposta(status[0]);
				Vitoria_Frase();
				repete = false;
				}else {
					DanoRespostaErrada(status[0]);
					Derrota_Frase();
				
				}
			break;
		case 2:
			enunciado = "Quero que me diga qual será o resultado do produto das duas raízes da equação 5x² - 125 = 0";
			System.out.println(enunciado);
			System.out.println("a) -25\n"
					+ "b) x1 = 20 "
					+ "c) x1 = 25"
					+ "d) x1 = 30");
			
			opcao = Option();
			if(opcao.equalsIgnoreCase("a")) {
				AcertouResposta(status[0]);
				Vitoria_Frase();
				repete = false;
				}else {
					DanoRespostaErrada(status[0]);
					Derrota_Frase();
				
				}
			break;
			
		}
		}while(repete);	
		
		
	}
	
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 2 2021-06-01 22:58:57.173
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.core.manipulation".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)

!ENTRY org.eclipse.jdt.core.manipulation 4 0 2021-06-01 22:58:57.173
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:323)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1231)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:820)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider$1.run(CoreASTProvider.java:272)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.createAST(CoreASTProvider.java:264)
	at org.eclipse.jdt.core.manipulation.CoreASTProvider.getAST(CoreASTProvider.java:197)
	at org.eclipse.jdt.core.manipulation.SharedASTProviderCore.getAST(SharedASTProviderCore.java:138)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:139)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:118)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)
!SESSION 2021-06-02 09:34:07.559 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-06-02 09:34:31.077
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-06-02 09:34:31.077
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@166ddfb7,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5da3f32a,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.e4.ui.workbench 4 0 2021-06-02 09:34:32.172
!MESSAGE Unable to retrieve the bundle from the URI: bundleclass://com.genuitec.eclipse.meexplorer/com.genuitec.eclipse.meexplorer.breadcrumb.e4.BreadCrumbContainer

!ENTRY org.eclipse.egit.ui 2 0 2021-06-02 09:34:38.822
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\PICHAU'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-06-02 18:45:48.064 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-06-02 18:47:02.220
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-06-02 18:47:02.220
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5da3f32a,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@57b3d869,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.e4.ui.workbench 4 0 2021-06-02 18:47:03.155
!MESSAGE Unable to retrieve the bundle from the URI: bundleclass://com.genuitec.eclipse.meexplorer/com.genuitec.eclipse.meexplorer.breadcrumb.e4.BreadCrumbContainer

!ENTRY org.eclipse.egit.ui 2 0 2021-06-02 18:47:08.255
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\PICHAU'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.jdt.core 4 4 2021-06-02 21:00:13.838
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Scanner;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Random;

public class O_Jogo {

	// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-VARIAVÉIS GLOBAIS-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
	public static Scanner entrada = new Scanner(System.in);
	public static String opcao = "";
	public static int dificuldade = 0;
	public static String nomeJogador = "Bob";
	public static int thread1 = 0;
	public static int thread2 = 0;
	public static int thread3 = 0;
	public static int[] status = { 100, 2 };
	public static int frases = 0;

	// CORES DO TEXTO
	public static final String RESET = "\u001B[30m";
	public static final String RED = "\u001B[31m";
	public static final String GREEN = "\u001B[32m";
	public static final String YELLOW = "\u001B[33m";
	public static final String BLUE = "\u001B[34m";
	public static final String MAGENTA = "\u001B[35m";
	public static final String CYAN = "\u001B[36m";
	public static final String WHITE = "\u001B[37m";
	
	// NEGRITO DO TEXTO 
	public static final String RESET_BOLD = "\u001B[0m";
	public static final String BOLD = "\u001B[1m";
	
	

	// CORES DO FUNDO DO TEXTO
	public static final String RESET_BACKGROUND = "\u001B[0m";
	public static final String BLACK_BACKGROUND = "\u001B[40m";
	public static final String RED_BACKGROUND = "\u001B[41m";
	public static final String GREEN_BACKGROUND = "\u001B[42m";
	public static final String YELLOW_BACKGROUND = "\u001B[43m";
	public static final String BLUE_BACKGROUND = "\u001B[44m";
	public static final String PURPLE_BACKGROUND = "\u001B[45m";
	public static final String CYAN_BACKGROUND = "\u001B[46m";
	public static final String WHITE_BACKGROUND = "\u001B[47m";

	// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-MAIN-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
	public static void main(String[] args) {

		boolean cond = true;
		

		do {

			System.out.print(Tabula1(6, "---Menu---\n\n"));
			System.out.print(Tabula2(2, "[1] Intruções", 6, "[2] Jogar\n"));
			System.out.print(Tabula2(2, "[3] Créditos", 6, "[4] Sair\n"));

			String opcao_Menu = Option();

			switch (opcao_Menu) {

			case "1":
				Instruções();
				break;

			case "2":

				Jogar();
				Hist_1();
				//ExecutaTemplo1();
				Hist_2();
				ExecutaTemplo2();
				//Hist_3();
				ExecutaTemplo3(status);
				
				
				break;

			case "3":
				Créditos();
				break;

			case "4":

				cond = false;
				break;

			default:

				System.out.print(RED + Tabula1(6, "Opção não é válida!\n\n") + RESET);

			}

		} while (cond);

	}

	// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-JOGO-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

	// PROCEDIMENTO PARA ARMAZENAR AS INFORMAÇÕES DAS INTRUÇÕES
	public static void Instruções() {

		System.out.print("\n");
		Texto_Formatado("\nO objetivo do jogo é auxiliar o jogador em alguns conhecimentos da matemática."
				+ " Ao longo da jornada, serão apresentados conteúdos sobre a matéria em questão e "
				+ "apresentadas perguntas ao jogador. O mesmo deverá selecionar as opções válidas para que ele possa"
				+ " avançar no jogo e a cada questão, o jogador sofrerá um dano se errar, diminuindo assim sua vida."
				+ " O objetivo final do jogador, é avançar por todos os templos para derrotar o último chefe, sem perder toda a sua vida.");
		System.out.print("\n");
		Sair();

	}

	// PROCEDIMENTO PARA FAZER A 1º CHAMADA DO JOGO, PARA COLETAR AS INFORMAÇÕES DO
	// NOME DO JOGADOR, A DIFICULDADE DO JOGO E A HISTÓRIA INICIAL
	public static void Jogar() {

		Texto_Formatado(Tabula1(4, "---Escolha a sua dificuldade de jogo---\n\n")
				+ Tabula3(1, "[1] Fácil", 3, "[2] Normal", 3, "[3] Difícil"));

		boolean cond = true;

		do {

			String opcao_Menu = Option();
			switch (opcao_Menu) {

			case "1":
				dificuldade = 1;
				cond = false;
				break;

			case "2":
				dificuldade = 2;
				cond = false;
				break;

			case "3":
				dificuldade = 3;
				cond = false;
				break;

			default:
				System.out.print(RED + Tabula1(6, "Opção não é válida!\n\n") + RESET);

			}
		} while (cond);

		Texto_Formatado(Tabula1(4, "   ---Escolha o nome do seu jogador---"));
		nomeJogador = Option();

		boolean cond2 = true;
		do {

			Texto_Formatado(Tabula1(4,
					"---Você deseja que o nome do seu jogador seja " + RED + nomeJogador + RESET + " ?---\n\n")
					+ Tabula2(4, GREEN + "[S]" + RESET, 6, RED + "[N]" + RESET));
			String opcao_Menu = Option();

			switch (opcao_Menu.toUpperCase()) {
			case "S":
				cond2 = false;
				break;
			case "N":
				Texto_Formatado(Tabula1(4, "---Escolha o nome do seu jogador---"));
				nomeJogador = Option();
				break;
			default:
				System.out.print(RED + Tabula1(6, "Opção não é válida!\n\n") + RESET);
			}
		} while (cond2);

	}

	// PROCEDIMENTO PARA ARMAZENAR AS INFORMAÇÕES DOS CRÉDITOS
	public static void Créditos() {

		System.out.print("\n");
		Texto_Formatado(Tabula3(2,"\nGustavo Tozeti",2,"Matheus Cavalcanti",2,"Renan Kesper"));
		System.out.print("\n");
		Sair();

	}

	
	// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-HISTÓRIA-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
	
	// PRIMEIRA NARRATIVA DO JOGO
	public static void Hist_1() {

		System.out.print("\n");
		
		Texto_Formatado(
				
				
				Dialogo("Narrador",WHITE) + "\n - Aos escombros, uma leve página, parecida de um diário, pousa sobre o rosto de "+ nomeJogador +". Aos sustos, " + nomeJogador +" acorda e começa a ler a página." +
				
				Dialogo(nomeJogador,WHITE)+ GREEN
				+ "\n - \"Reza a lenda que Ariandre era um lugar próspero, cheio de magia e encanto, onde todos os seres viviam em harmonia e em paz. Um lugar tão belo,"					
				+ " que a matemática era a base de força para grandes magos. Mas isso é claro, antes do grande acontecimento. . .Ninguém sabe ao certo, nem ao menos como,"				
				+ " mas naquela tarde esse lugar tão calmo e pleno, foi reduzido a cinzas e escombros, uma enorme escuridão pairou pelos céus e tomou Ariandre por inteiro "			
				+ "e com um simples clarão. . .tudo foi destruído. Após momentos agoniantes, enfim o motivo disso tudo. . . sim, ele que era apenas uma fábula de centenas de "			
				+ "anos, de contos muito antigos, enfim ressurgiu. . . Ancelot tinha despertado. O grande rei demônio estava presente novamente, "			
				+ "para aprisionar toda a matemática de Ariandre e ser o detentor de toda a magia. Já se passaram alguns meses depois disso tudo, mas agora espero "					
				+ "ter forças para enfrentá-lo, mas a cada dia que se passa nessas catedrais do abismo perco mais e mais da minha sanidade. Talvez eu seja a última esperança "			
				+ "de Ariandre, mas caso alguém esteja lendo isso, significa que Ancelot venceu e Ariandre para sempre estará sob o seu domínio.\"" 									
				
				+ Dialogo(nomeJogador,WHITE) +  GREEN + "\n - Mas. . . mas como? Meses? Estava tudo certo, ele estava em minhas mãos, como foi tudo isso desmoronar. Minha "					
				+ "cabeça dói, são memórias que me vem, mas o que será que aconteceu? Por que eu estou nas catedrais e porque Ariandre está destruída? Será isso um sonho?"
				+ " Eu preciso descobrir o que aconteceu, mas me sinto estranho. Parece que não tenho mais meus poderes. Será que eu consigo canalizar algo??"
				
				+ Dialogo("Narrador",WHITE) + "\n - "+nomeJogador+ " tenta utilizar, uma de suas magias vinda através dos poderes da matemática, mas sem sucesso! "
				+ "E como em um turbilhão de memórias, "+nomeJogador+" começa a se lembrar daquele fatídico dia.\n\n"
						
				+Tabula1(4,"Alguns meses antes...") 
				
				+ Dialogo(nomeJogador,WHITE) +  GREEN + "\n - Finalmente, depois de anos de estudos e cálculos, finalmente irei despertar Ancelot e enfim obter o seu"
				+ " poder supremo."
				
				+ Dialogo("Narrador",WHITE) + "\n - "+nomeJogador+ " por mais que fosse extremamente forte, jamais saberia que o terrível Ancelot portava de uma maldição, que "
				+ "quem o invoca-se traria destruição ao seu mundo. Ao passo em que o ritual de invocação se iniciava, um grande portal cheio de trevas se abriu no chão e dele "
				+ "saía o fim dos tempos."
				
				+ Dialogo("Ancelot",WHITE) +  RED + "\n - Finalmente livre!!"	
				
				+ Dialogo(nomeJogador,WHITE) +  GREEN + "\n - Jamais Ancelot, eu "+ nomeJogador +" sou o ser mais supremo de toda Ariandre, você não é pareo para os meus poderes. Apenas te "
				+ "invoquei para obter toda sua fonte de poder e assim te derrotá-lo para sempre. "
				
				+ Dialogo("Ancelot",WHITE) +  RED + "\n - Tolo, você não é a primeira pessoa a tentar isso. Vocês todos tentam, mas todos esquecem da maldição!!"	
				
				+ Dialogo(nomeJogador,WHITE) +  GREEN + "\n - Maldição? Que maldição?!"
				
				+ Dialogo("Ancelot",WHITE) +  RED + "\n - Pelo visto, você não está preparado HAHAHAHAH. Mas talvez o que eu faça aqui, sirva de lição para você."
				
				+ Dialogo("Narrador",WHITE) + "\n - E com uma enorme força e magia, que surpreendia até "+nomeJogador+", Ancelot conseguiu drenar todos os seus poderes. Com vários feixes de luz, "
				+ nomeJogador+" via seus poderes se esvaindo ao longo de si."
				
				+ Dialogo("Ancelot",WHITE) +  RED + "\n - "+nomeJogador+", você me parece interessante. Irei espalhar esses seus poderes nas mais profundas terras de Ariandre e caso você sobreviva, terá seus "
				+ "poderes de volta para me enfrentar."
				
				+ Dialogo("Narrador",WHITE) + "\n - Com um imenso clarão, tudo ficou em silêncio. Até agora...\n\n"
				
				+Tabula1(4,"Atualmente...")
				
				+ Dialogo(nomeJogador,WHITE) +  GREEN + "\n - Droga! Preciso recuperar meus poderes e derrotar Ancelot. Mas onde estou?"
				
				+ Dialogo("Narrador",WHITE) + "\n - "+nomeJogador+" olha em volta e se depara com escombros e ruínas. Mas começa a perceber que existem símbolos escritos nas paredes que são familiares. "
				+ "Estes símbolos remetem a algumas descrições dos templos da perdição das catedrais. É de grande espanto, pois "+nomeJogador+" ao reconhecer às escritas, lembrou que os templos eram mitos da terra "
				+ "antiga e que eram locais responsáveis por um grande armazenamento de magia."
				
				+ Dialogo(nomeJogador,WHITE) +  GREEN + "\n - Se ele disse que meus poderes estão nas mais profundas terras de Ariandre, então só podem estar espalhados entre os três templos daqui. "
				+ "Preciso ir em frente!"
				
				+Dialogo("Narrador",WHITE) + "\n - "+nomeJogador+ "adentra no templo das "+BOLD+"Equações de 1º Grau"+RESET_BOLD+", um lugar que lhe faz relembrar dos seus inícios de treinamento de mago. "
				+ "Tanto é, que esse conhecimento era a base dos seus grandiosos poderes."
						
				+ Dialogo("Narrador",WHITE) + "\n - Os templos possuem feitiços incríveis e fazem com quem adentrar ao local tenha a sabedoria para conquistar o poder armazenado nele. E não foi diferente com esse templo."
				+ nomeJogador+" após passar por um portal mágico do templo, teve uma viagem mística até onde estavam os desafios para recuperar seu poder. Dentro dessa viagem, uma voz desconhecida lhe passou os seguintes "
				+ "ensinamentos…"
				
				+ Dialogo("Voz Desconhecida",WHITE) + CYAN + "\n - Olá "+ nomeJogador+", que bom te ver aqui!!"
				
				+ Dialogo(nomeJogador,WHITE) +  GREEN + "\n - Mas quem é você?"
				
				+ Dialogo("Voz Desconhecida",WHITE) + CYAN + "\n - Não se preocupe, sou apenas um ajudante de Ariandre e estou aqui para ajudar em sua jornada. Não temos muito tempo a frente então serei o mais rápido possível, "
				+ "isso lhe guiará nos seus próximos desafios daqui para frente."
				
				+ Dialogo("Narrador",WHITE) + "\n - E parecendo uma voz familiar, "+ nomeJogador+" escutou os ensinamentos que a voz desconhecida tinha a oferecer."
				
				+ Dialogo("Voz Desconhecida",WHITE) + CYAN + "\n - O poder deste templo são às"+BOLD(" Equações de 1º Grau",CYAN)+", elas serão a base para sua fonte de poder. Para derrotar os desafios à frente, você irá precisar dos "
				+ "conhecimentos básicos a fim de quebrar os feitiços que serão lançados a ti. Então preste muita atenção..."
				
				+ Dialogo("Voz Desconhecida",WHITE) + CYAN + "\n - As equações de primeiro grau são sentenças matemáticas que estabelecem relações de igualdade entre termos conhecidos e desconhecidos, "
				+ "representadas sob a forma: "+BOLD("ax+b = 0",CYAN)+". Donde "+BOLD("a",CYAN)+" e "+BOLD("b",CYAN)+" são números reais, sendo "+BOLD("a",CYAN)+" um valor diferente de zero "+BOLD("(a != 0)",CYAN)+" e "+BOLD("x ",CYAN)+ "representa o "
				+ "valor desconhecido. O valor desconhecido é chamado de "+BOLD("incógnita",CYAN)+" que significa \"termo a determinar\". As equações do 1º grau podem apresentar "+BOLD("uma",CYAN)+" ou "+BOLD("mais",CYAN)+" incógnitas."
				
				+ Dialogo("Voz Desconhecida",WHITE) + CYAN + "\n - O objetivo de resolver uma equação de primeiro grau é "+BOLD("descobrir o valor desconhecido",CYAN)+", ou seja, encontrar o valor da incógnita que "+BOLD("torna a igualdade verdadeira",CYAN)+". Para isso, "
				+ "deve-se "+BOLD("isolar os elementos desconhecidos em um dos lados do sinal de igual e os valores constantes do outro lado",CYAN)+". Contudo, é importante observar que a mudança de posição desses elementos "+BOLD("deve ser feita de forma que a igualdade "
				+ "continue sendo verdadeira",CYAN)+". Quando um termo da equação mudar de lado do sinal de igual, devemos inverter a operação. Assim, se tiver multiplicando, passará dividindo, se tiver somando, passará subtraindo e vice-versa."
				
				+ Dialogo("Voz Desconhecida",WHITE) + CYAN + "\n - Agora você está pronto para o caminho em frente. Espero te ver logo, adeus…"
				
				+ Dialogo("Narrador",WHITE) + "\n - E com essa despedida, "+ nomeJogador+" saiu de sua viagem mística e já estava em apuros."
				
				+ Dialogo("Ancelot",WHITE) +  RED + "\n - Parece que você sobreviveu depois de tudo aquilo e ainda conseguiu chegar até aqui. Você não terá seu poder de volta tão fácil HAHAHHA. Veremos se você é realmente capaz de enfrentar meus 3 feitiços.");
				
								
				
				
		
		System.out.print("\n");

	}

	public static void Hist_2(){
		
		System.out.print("\n");
		
		Texto_Formatado(
				
				Dialogo("Ancelot",WHITE) +  RED + "\n - Impossível, como você conseguiu ? Isso ainda não acabou, nós iremos nos encontrar novamente."
				
				+ Dialogo(nomeJogador,WHITE) +  GREEN + "\n - Onde você estiver, eu estarei lá para te derrotar!"
				
				+ Dialogo("Narrador",WHITE) + "\n - E diante de um clarão Ancelot, desapareceu… Mas no local da batalha grandiosa, uma enorme chama, surgia no meio da arena. Era o poder perdido de "+nomeJogador+",  que ao se aproximar, pode absorver novamente seu poder."
				
				+ Dialogo(nomeJogador,WHITE) +  GREEN + "\n - Como é bom ter meus poderes de volta!"
				
				+ Dialogo("Narrador",WHITE) + "\n - Com a grande primeira batalha travada, "+nomeJogador+" continuou em sua jornada para o próximo templo adentrando no próximo portal."
						
				+ Dialogo("Voz Desconhecida",WHITE) + CYAN + "\n - Olá "+ nomeJogador+", que bom que você sobreviveu!!"
				
				+ Dialogo("Voz Desconhecida",WHITE) + CYAN + "\n - Precisamos continuar sua batalha."
				
				+ Dialogo("Voz Desconhecida",WHITE) + CYAN + "\n - O poder deste templo são às"+BOLD(" Equações de 2º Grau",CYAN)+", elas serão o fortalecimento do seu poder. Para derrotar os desafios à frente, você irá precisar dos "
				+ "conhecimentos básicos a fim de quebrar os feitiços que serão lançados a ti. Então preste muita atenção..."									
				
				+ Dialogo("Voz Desconhecida",WHITE) + CYAN + "\n - As equações de segundo grau são caracterizadas por um "+BOLD("polinômio de grau 2",CYAN)+", ou seja, um polinômio do tipo "+BOLD("ax² + bx + c",CYAN)+", em que a, b e c "+BOLD("são números reais",CYAN)+". Ao resolvermos uma equação de grau 2, estamos "
				+ "interessados em "+BOLD("encontrar valores para a incógnita x",CYAN)+" que torne o "+BOLD("valor da expressão igual a 0",CYAN)+", que são chamadas de raízes, isto é, "+BOLD("ax² + bx + c = 0",CYAN)+"."
						
				+ Dialogo("Voz Desconhecida",WHITE) + CYAN + "\n - A equação do 2º grau é classificada como "+BOLD("completa",CYAN)+" quando todos os coeficientes são diferentes de 0, ou seja, a != 0, b != 0 e c != 0. A equação do 2º grau é classificada como "+BOLD("incompleta",CYAN)+" quando o valor dos coeficientes b ou c são iguais a 0, isto é, b = 0 ou c = 0."
				
				+ Dialogo("Voz Desconhecida",WHITE) + CYAN + "\n - "+BOLD("Para solucionar equações do tipo ax² + c = 0",CYAN)+", o método para determinar a solução de equações incompletas que possuem b=0 consiste em isolar a incógnita x."
				
				+ Dialogo("Voz Desconhecida",WHITE) + CYAN + "\n - "+BOLD("Para solucionar equações do tipo ax² + bx = 0",CYAN)+", o método para determinar as possíveis soluções de uma equação com c =0, consiste em utilizar a fatoração por evidência."
				
				+ Dialogo("Voz Desconhecida",WHITE) + CYAN + "\n - "+BOLD("Para solucionar equações completas",CYAN)+", o método conhecido como método de Bhaskara ou fórmula de Bhaskara aponta que as raízes de uma equação do 2º grau do tipo ax² + bx + c = 0 é dada pela seguinte relação:"
				
				+ Dialogo("Voz Desconhecida",WHITE) + CYAN + "\n - Raíz 1 = "+BOLD(" (-b + (Raiz Quadrada(Delta)) / 2.a | Delta = b² - 4.a.c",CYAN) 
				
				+ Dialogo("Voz Desconhecida",WHITE) + CYAN + "\n - Raíz 2 = "+BOLD(" (-b - (Raiz Quadrada(Delta)) / 2.a | Delta = b² - 4.a.c",CYAN) 
				
				+ Dialogo("Voz Desconhecida",WHITE) + CYAN + "\n - Quando o "+BOLD("Delta for positivo",CYAN)+": existem duas soluções para a equação. Quando o "+BOLD("Delta for igual a zero",CYAN)+": as soluções da equação são repetidas."
				+ " Quando o "+BOLD("Delta for negativo",CYAN)+": não admite solução real."
										
				+ Dialogo("Voz Desconhecida",WHITE) + CYAN + "\n - Agora você está pronto para o caminho em frente. Espero que consiga vencer novamente!"
				
				+ Dialogo("Narrador",WHITE) + "\n - E com essa despedida, "+ nomeJogador+" saiu de sua viagem mística e já estava em apuros de novo."
							
				+ Dialogo("Ancelot",WHITE) +  RED + "\n - Eu me descuidei da primeira vez, mas dessa vez será diferente. Você será derrotado através desses meus novos 3 feitiços."
				
				
				
				
				);
	
	}	
	
	// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-FERRAMENTAS DE TEXTO-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

	// PROCEDIMENTO CRIADO PARA FORMATAR QUALQUER TEXTO, PARA PADRONIZAR O LAYOUT DA
	// MENSAGEM COM BASE EM UM VALOR PRÉ DETERMINADO
	public static void Texto_Formatado(String frase) {

		String texto = frase;
		String[] palavras = texto.split(" ");

		int contadorQntLetras = 0;
		int limiteLinha = 170;
		

		for (int i = 0; i < limiteLinha; i++) {
			System.out.print(RED + "=" + RESET);
		}
		System.out.print("\n");

		for (String palavra : palavras) {

			if (contadorQntLetras + palavra.length() >= limiteLinha) {
				contadorQntLetras = 0;
				System.out.print("\n");
			}

			System.out.print(palavra + " ");
			Timer2();
			if (palavra.length()>18){
				contadorQntLetras = 0;
			}
			else {
			contadorQntLetras += palavra.length() + 1;
			
			
			}
			
			}
		System.out.println("\n");

		for (int i = 0; i < limiteLinha; i++) {
			System.out.print(RED + "=" + RESET);
		}
		System.out.println("\n");

	}

	// PROCEDIMENTOS CRIADOS PARA TABULAR QUALQUER TEXTO, PARA PADRONIZAR O LAYOUT DA
	// MENSAGEM
	public static String Tabula1(int t, String s) {

		String tab = "\t";
		String frase = "";
		for (int i = 0; i <= t; i++) {
			frase += tab;
		}
		frase += s;

		return frase;
	}

	public static String Tabula2(int t, String s, int tt, String ss) {

		String tab = "\t";
		String frase = "";

		for (int i = 0; i <= t; i++) {
			frase += tab;
		}
		frase += s;
		for (int i = 0; i <= tt; i++) {
			frase += tab;
		}
		frase += ss;
		return frase;
	}

	public static String Tabula3(int t, String s, int tt, String ss, int ttt, String sss) {

		String tab = "\t";
		String frase = "";

		for (int i = 0; i <= t; i++) {
			frase += tab;
		}
		frase += s;
		for (int i = 0; i <= tt; i++) {
			frase += tab;
		}
		frase += ss;
		for (int i = 0; i <= ttt; i++) {
			frase += tab;
		}
		frase += sss;
		return frase;
	}

	// PROCEDIMENTOS CRIADO PARA PADRONIZAR OS DIÁLOGOS
	public static String Dialogo(String Nome, String Cor) {
		String texto = "\n\n" + BLACK_BACKGROUND + Cor +Nome+ RESET + RESET_BACKGROUND;
		return texto;
		}
	
	public static String BOLD(String frase, String Cor) {
		String texto = RESET + BOLD + frase + RESET_BOLD + Cor;
		return texto;
	}
	
	// PROCEDIMENTOS CRIADO PARA PRINTAR A MENSAGEM ANTES DO BOSS
	static void FormataTexto1(String frase) {

		String[] palavra = frase.split(" ");

		for (String each : palavra) {
			System.out.print(each + " ");
			Timer2();
		}
	}

	// PROCEDIMENTOS CRIADO PARA PRINTAR A MENSAGEM DE GAME OVER
	static void FormataTexto2(String frase) {

		String[] palavra = frase.split(" ");

		for (String each : palavra) {
			System.out.print(each);
			Timer2();
		}

		System.out.print(" ");
	}
	
	// PROCEDIMENTOS CRIADO PARA ARMAZENAR A COLEÇÃO DE FRASES PARA ACERTOS
	static void Vitoria_Frase () {
		
		ArrayList<String> vitoria = new ArrayList();
		vitoria.add("Acertou novamente, droga droga droga...\n");
		vitoria.add("Vejo que acertou mais uma...\n");
		vitoria.add("TUDO QUE EU JOGO PARA VOCÊ, ESTÁ CONSEGUINDO RESOLVER... Bom...você é bom, faz tempo que não uso todo o meu poder," 
				+ "agora você conhecerá a minha fúria, dúvido que irá conseguir responder as próximas questões...\n");
		vitoria.add("Aaaah, sim, vejo que você foi capaz de passar pelo meu desafio! Maravilhoso, vamos apimentar um pouco mais as coisas\n");
		
		Collections.shuffle(vitoria);
		Collections.shuffle(vitoria);
		Collections.shuffle(vitoria);
		
		
		System.out.println(Dialogo("Ancelot",WHITE) +  RED + " - " + vitoria.get(0) + RESET);
		
	}
	
	// PROCEDIMENTOS CRIADO PARA ARMAZENAR A COLEÇÃO DE FRASES PARA ERROS
	static void Derrota_Frase () {
		
		ArrayList<String> derrota = new ArrayList();
		derrota.add("Você não conseguirá prosseguir nem que tente mil vezes.\n");
		derrota.add("Você não é capaz de seguir em frente\n");
		
		Collections.shuffle(derrota);
		Collections.shuffle(derrota);
		
		System.out.println(Dialogo("Ancelot",WHITE) +  RED + " - " + derrota.get(0) + RESET);
	}

	// FUNÇÃO CRIADA PARA ARMAZENAR A COLEÇÃO DE FRASES PARA DESAFIOS
	static String Desafio_Frase () {
			
			ArrayList<String> desafio = new ArrayList();
			desafio.add("rationem esse accelerationis");
			desafio.add("processus arithmetica");
			desafio.add("mindsets parallel");
			desafio.add("periculi sensus");
			desafio.add("sensus motus");
			desafio.add("ignis magicae");
			desafio.add("ventum magicae");
			desafio.add("impulsum resistentiam");
			desafio.add("viribus");
			desafio.add("title heros");
			
			String frase =  RED + desafio.get(frases) + RESET;
			frases++;
			
			Texto_Formatado(Tabula1(4,frase)+"\n" + Dialogo("Narrador",WHITE) + "\n - Você recebe essa magia. Com o seu conhecimento, é capaz"
			+ " de absorvê-la e consegue revidar caso acerte o encanto!");
			
			return frase;
		}
	
	// PROCEDIMENTOS CRIADO PARA MOSTRAR MENSAGEM DE ACORDO COM A VIDA 
	// DO PERSONAGEM
	static void AcertouResposta(int healthPoints) {
		
		String frase_A = "";
		
		if (healthPoints >= 30 && healthPoints < 65) {
			frase_A = "\nParecia que tinha sido um grande desafio para "+nomeJogador+".";
		}
		if (healthPoints < 30) {
			frase_A = "\nTinha sido por pouco, mas "+nomeJogador+" conseguiu passar!";
		}
		
		String frase =  Dialogo("Narrador",WHITE) + "\n - A resposta estava...\n...\n...\n\n"+GREEN + "Certa :D\n" + RESET + frase_A ;
		Texto_Formatado(frase);
	
		Vitoria_Frase();

		

		
	}
	
	// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-FERRAMENTAS DE INPUT-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

	// FUNÇÃO CRIADA PARA RETONAR UMA OPÇÃO DESEJADA DO USUÁRIO
	public static String Option() {
		System.out.print(BLACK_BACKGROUND + WHITE + "\n***Digite sua opção:" + RESET + RESET_BACKGROUND + " ");
		opcao = entrada.next();
		System.out.print("\n");
		return opcao;
	}

	// PROCEDIMENTO CRIADO PARA SAIR DE UMA OPÇÃO DE UM MENU
	public static void Sair() {
		Scanner sc = new Scanner(System.in);
		System.out.print("\nPressione a tecla ENTER para voltar!\n");
		sc.nextLine();
		System.out.println(" ");
	}

	
	// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-FERRAMENTAS DO JOGO-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

	// FUNÇÃO CRIADA PARA CALCULAR O DANO
	static int DanoRespostaErrada(int healthPoints) {
		Random dado = new Random();
		int jogada;
		
		int vida  = healthPoints;
		String frase_A = "";
		
		jogada = dado.nextInt(20) + 1;
		String jogada_ = String.valueOf(jogada);
		
		if (jogada <= 5) {
			
			String frase =  Dialogo("Narrador",WHITE) + "\n - Parece que o feitiço era fraco e "+nomeJogador+" conseguiu se esquivar do dano.\n";
			Texto_Formatado(frase);
			
		}
		else 
		{
			
			if (jogada > 5 && jogada <= 10) {
			frase_A = "\nSorte que o feitiço não acertou em cheio, mas acertou de raspão.\n";
			healthPoints = healthPoints - (10 + (5 * dificuldade));
		} else if (jogada > 10 && jogada <= 17) {
			frase_A = "\nEsse feitiço era forte, mas não muito poderoso.\n";
			healthPoints = healthPoints - (20 + (5 * dificuldade));
		}
		else {
			frase_A = "\nEsse feitiço tinha acertado em cheio!!.\n";
			healthPoints = healthPoints - (30 + (5 * dificuldade));
		}
			
			if (healthPoints > 0) {
			vida = vida - healthPoints;
			String vida_ = String.valueOf(vida);
			
			String frase =  Dialogo("Narrador",WHITE) + "\n - A resposta estava...\n...\n...\n\n"+RED + "Errada :(\n" + RESET + "\n**\t"+nomeJogador+
			" tinha recebido "+vida_+" de dano\t **\n\n"+frase_A+"";
			
				
			Texto_Formatado(frase);

				
			Derrota_Frase();
			}
			
		}
		
		
		
		return healthPoints;
	}

	// PROCEDIMENTO CRIADO PARA DAR GAME-OVER AO JOGO
	static void GameOver() {
		System.out.println("Seu HP chegou a 0");
		frases = 0;

		String game = "G A M E";
		String over = "O V E R";

		FormataTexto2(game);
		FormataTexto2(over);

		System.out.println("\n");
	}

	// FUNÇÃO CRIADA PARA USAR POTIONS
	static int[] UsePotion(int healthPoints, int qntPotions) {

		boolean condicao = true;
		char opcao = 0;
		int[] status = new int[2];

		do {

			Texto_Formatado(BLACK_BACKGROUND);"Você tem certeza que quer usar uma potion?\n" + GREEN + "[S]" + RESET + " ou " + RED
					+ "[N]\n" + RESET);

			opcao = Option().toUpperCase().charAt(0);

			switch (opcao) {
			case 'S':
				healthPoints = healthPoints + 10;
				qntPotions--;

				if (healthPoints > 100) {
					do {
						healthPoints--;
					} while (healthPoints != 100);
				}

				condicao = false;
				break;
			case 'N':

				condicao = false;
				break;

			default:
				System.out.print(RED + Tabula1(6, "Opção não é válida!\n\n") + RESET);
			}

		} while (condicao);

		status[0] = healthPoints;
		status[1] = qntPotions;

		return status;
	}

	// PROCEDIMENTOS DE TEMPO PARA IMPRIMIR MENSAGENS
	static void Timer() {
		try {
			Thread.sleep(thread1);
		} catch (Exception e) {

		}
	}

	static void Timer2() {
		try {
			Thread.sleep(thread2);
		} catch (Exception e) {

		}
	}

	static void Timer3() {
		try {
			Thread.sleep(thread3);
		} catch (Exception e) {

		}
	}

	// FUNÇÃO CRIADA PARA GERAR AS PERGUNTAS AO JOGADOR
	static int[] ProcessoAlternativas_Geral(String[] opcoes, int[] status, String respostaCerta, String enunciado) {
		// Area para declarar variaveis
		Scanner sc = new Scanner(System.in);
		String resposta;
		boolean condicao = true;

		

		////////////////////////////////////////////////////////////////////////
		// Area para processo de alternativas
		do {

			
			if (status[0] <= 0) {
				GameOver();
				condicao = false;
			}
			
			else {
				System.out.printf(enunciado+"\n");
				Timer2();
				System.out.printf("[ A ] %S\n", opcoes[0]);
				Timer2();
				System.out.printf("[ B ] %S\n", opcoes[1]);
				Timer2();
				System.out.printf("[ C ] %S\n", opcoes[2]);
				Timer2();
				System.out.printf("[ D ] %S\n", opcoes[3]);
				Timer2();
				System.out.printf("[ E ] %S\n\n", opcoes[4]);
				Timer2();
				System.out.printf("[ P ] Caso queira utilizar uma potion.\n\nHP atual: "+GREEN+"%d"+RESET+"\t| Potions: "+RED+"%d\n"+RESET, status[0],status[1]);
				Timer2();
				System.out.println("Resposta certa: " + respostaCerta.toUpperCase());
				Timer2();
				resposta = Option().toUpperCase();

			switch (resposta.charAt(0)) {
			case 'A':
				if (opcoes[0].equals(respostaCerta)) {
					AcertouResposta(status[0]);
					condicao = false;
				} else {
					status[0] = DanoRespostaErrada(status[0]);
					if (status[0] <= 0) {
						GameOver();
						condicao = false;
					}
				}
				break;
			case 'B':
				if (opcoes[1].equals(respostaCerta)) {
					AcertouResposta(status[0]);
					condicao = false;
				} else {
					status[0] = DanoRespostaErrada(status[0]);
					if (status[0] <= 0) {
						GameOver();
						condicao = false;
					}
				}
				break;

			case 'C':
				if (opcoes[2].equals(respostaCerta)) {
					AcertouResposta(status[0]);
					condicao = false;
				} else {
					status[0] = DanoRespostaErrada(status[0]);
					if (status[0] <= 0) {
						GameOver();
						condicao = false;
					}
				}
				break;
			case 'D':
				if (opcoes[3].equals(respostaCerta)) {
					AcertouResposta(status[0]);
					condicao = false;
				} else {
					status[0] = DanoRespostaErrada(status[0]);
					if (status[0] <= 0) {
						GameOver();
						condicao = false;
					}
				}
				break;
			case 'E':
				if (opcoes[4].equals(respostaCerta)) {
					AcertouResposta(status[0]);
					condicao = false;
				} else {
					status[0] = DanoRespostaErrada(status[0]);
					if (status[0] <= 0) {
						GameOver();
						condicao = false;
					}
				}
				
				break;
			case 'P':
				
				if ( status[1] == 0 ) {
					
					System.out.print(RED + Tabula1(6, "Você não tem potions!\n\n") + RESET);
									
				}
				
				else{
					status = UsePotion(status[0], status[1]);
				}
					break;
				
			default:
				System.out.print(RED + Tabula1(6, "Opção não é válida!\n\n") + RESET);
			}
			}
		} while (condicao);

		return status;
	}

		
// -_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-TEMPLOS-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_

	// TEMPLO 3
	static int[] ExecutaTemplo3(int[] status) {
		Scanner sc = new Scanner(System.in);
		boolean condicao = true,condicao2 = true;
do {
		do {
			status = Desafio1_Templo3(status);
			
			if (status[0] > 0) {
										
				Texto_Formatado(Dialogo("Narrador",WHITE) + "\n - "+nomeJogador+" concluiu mais um desafio! E por uma benção divina recebeu mais uma potion!!");		
				status[1]++;			

			} else {
				Texto_Formatado(Dialogo("Narrador",WHITE) + "\n - "+nomeJogador+" infelizmente foi derrotado!!");
				status[0] = 100;
				break;
			}	
		
		System.out.print("\nAperte ENTER para começar o segundo Desafio");
		sc.nextLine();
		System.out.println(" ");

		
			status = Desafio2_Templo3(status);
			
			
			if (status[0] > 0) {
				
				Texto_Formatado(Dialogo("Narrador",WHITE) + "\n - "+nomeJogador+" concluiu mais um desafio! E por uma benção divina recebeu mais uma potion!!");		
				status[1]++;			

			} else {
				Texto_Formatado(Dialogo("Narrador",WHITE) + "\n - "+nomeJogador+" infelizmente foi derrotado!!");
				status[0] = 100;
				break;
			}
		

		System.out.print("\nAperte ENTER para começar o último Desafio");
		sc.nextLine();
		System.out.println(" ");

	
			status = Desafio3_Templo3(status);
			
			if (status[0] > 0) {
				
				Texto_Formatado(Dialogo("Narrador",WHITE) + "\n - "+nomeJogador+" concluiu mais um desafio! E por uma benção divina recebeu mais uma potion!!");		
				status[1]++;

				condicao = false;
				condicao2 = false;
				
			} else {
				
				Texto_Formatado(Dialogo("Narrador",WHITE) + "\n - "+nomeJogador+" infelizmente foi derrotado!!");
				status[0] = 100;
				break;
			
			}
		} while (condicao);
	}while (condicao2);

		Timer();
		Texto_Formatado(Dialogo("Narrador",WHITE) + "\n - "+nomeJogador+" concluiu o Templo das Conversões. Agora estava o momento para o final");
		Timer2();
		FormataTexto1("Você está preparado para o ");
		FormataTexto2("F I N A L ");
		FormataTexto2("B O S S ");
		FormataTexto2("? ? ?");
		System.out.println("\n");
		return status;
	}

	// DESAFIO É CONVERTER UM NÚMERO QUE ESTÁ EM UMA BASE PARA OUTRA
	static int[] Desafio1_Templo3(int[] status) {
		int baseInicial, baseConversao;
		String respostaCerta;

		String[] numeroInicial = new String[1];
		String[] opcoes = new String[5];
		ArrayList<String> respostaErrada = new ArrayList();

		////////////////////////////////////////////////////////////////////////
		// Area para preparar os numeros
		baseInicial = DeterminaBase_Templo3(); // Determinando a base standard

		do {
			baseConversao = DeterminaBase_Templo3(); // Determinando a base de conversao
		} while (baseConversao == baseInicial);

		numeroInicial[0] = DeterminaNumero_Templo3(baseInicial); // Determinando o numero standard

		respostaCerta = DeterminaNumeroConv_Templo3(numeroInicial, baseInicial, baseConversao); // Determinando o numero
																								// de conversao (certo)

		respostaErrada.add(respostaCerta); // Adicionando a resposta certa nas opcoes

		for (int i = 0; i < 4; i++) {
			respostaErrada.add(DeterminaOpcoes(baseConversao, respostaCerta)); // Adicionando opcoes erradas
		}

		Collections.shuffle(respostaErrada); // Embaralhando as opcoes para que haja uma aleatoriedade
		Collections.shuffle(respostaErrada);

		for (int i = 0; i < opcoes.length; i++) {
			opcoes[i] = respostaErrada.get(i); // Transferindo as opcoes do ArrayList para uma String[]
		}

		////////////////////////////////////////////////////////////////////////
		// Area de logica do game
		Desafio_Frase();

		String enunciado = String.valueOf("\nConverta o numero "+numeroInicial[0]+" que esta na base "+baseInicial+" para a base "+baseConversao+"\n\n");
		
		//  System.out.printf("\nConverta o numero %S que esta na base %d para a base %d\n\n", numeroInicial[0],
		//	baseInicial, baseConversao);
		//  Timer2();

		status = ProcessoAlternativas_Geral(opcoes, status, respostaCerta,enunciado);

		return status;
	}

	// DESAFIO É SOMAR DOIS NÚMEROS QUE ESTÃO EM UMA BASE E CONVERTER PARA OUTRO
	static int[] Desafio2_Templo3(int[] status) {
		// Area para inicializar variaveis
		int baseInicial, baseConversao;
		String respostaCerta;

		String[] numeroInicial = new String[2];
		String[] opcoes = new String[5];
		ArrayList<String> respostaErrada = new ArrayList();
		////////////////////////////////////////////////////////////////////////
		// Area para declarar os numeros

		baseInicial = DeterminaBase_Templo3(); // Gerar a base standard

		do {
			baseConversao = DeterminaBase_Templo3(); // Gerar a base para conversao
		} while (baseConversao == baseInicial);

		numeroInicial[0] = DeterminaNumero_Templo3(baseInicial); // Gerar o numero standard A
		numeroInicial[1] = DeterminaNumero_Templo3(baseInicial); // Gerar o numero standard B

		respostaCerta = DeterminaNumeroConv_Templo3(numeroInicial, baseInicial, baseConversao); // Gerar a resposta
																								// certa

		respostaErrada.add(respostaCerta); // Adicionando a resposta certa no ArrayList

		for (int i = 0; i <= 3; i++) {
			respostaErrada.add(DeterminaOpcoes(baseConversao, respostaCerta)); // Criando respostas erradas para o
																				// ArrayList
		}

		Collections.shuffle(respostaErrada); // Embaralhando as opcoes
		Collections.shuffle(respostaErrada);

		for (int i = 0; i < opcoes.length; i++) {
			opcoes[i] = respostaErrada.get(i); // Adicionando as opcoes embaralhadas numa String para fazer o desafio
		}

		Desafio_Frase();
		
		String enunciado = String.valueOf("\nFaça a seguinte conversão:\n"+numeroInicial[0]+" + "+numeroInicial[1]+" (na base "+baseInicial +") = X (na base "+baseConversao+")\n\n" );
		
		//		System.out.printf("\nFaça a seguinte conversão:\n%S + %S (na base %d) = X (na base %d)\n\n", numeroInicial[0],
		//		numeroInicial[1], baseInicial, baseConversao);
		//		Timer2();

		ProcessoAlternativas_Geral(opcoes, status, respostaCerta,enunciado);

		return status;
	}

	// DESAFIO É MULTIPLICAR DOIS NÚMEROS QUE ESTÃO EM UMA BASE E CONVERTER PARA OUTRO
	static int[] Desafio3_Templo3(int[] status) {
		// Area para declarar variaveis
		int baseInicial, baseConversao, aux;
		String respostaCerta;

		String[] numeroInicial = new String[2];
		String[] opcoes = new String[5];
		ArrayList<String> respostaErrada = new ArrayList();
		////////////////////////////////////////////////////////////////////////
		// Area para iniciar variaveis
		baseInicial = DeterminaBase_Templo3(); // Gerar a base inicial

		do {
			baseConversao = DeterminaBase_Templo3(); // Gerar a base para conversao
		} while (baseConversao == baseInicial);

		numeroInicial[0] = DeterminaNumero_Templo3(baseInicial); // Gerar numero standard A
		numeroInicial[1] = DeterminaNumero_Templo3(baseInicial); // Gerar numero standard B

		aux = (Integer.parseInt(numeroInicial[0], baseInicial)) * (Integer.parseInt(numeroInicial[1], baseInicial)); // Convertendo
																														// o
																														// produto
																														// dos
																														// numeros
																														// standard
																														// para
																														// int

		respostaCerta = Integer.toString(aux, baseConversao); // Convertendo o produto dos numeros standard para a base
																// de conversao

		respostaErrada.add(respostaCerta); // Adicionando a resposta certa nas opcoes

		for (int i = 0; i <= 3; i++) {
			respostaErrada.add(DeterminaOpcoes(baseConversao, respostaCerta)); // Adicionando as opcoes erradas
		}

		Collections.shuffle(respostaErrada); // Embaralhando as opcoes
		Collections.shuffle(respostaErrada);

		for (int i = 0; i < opcoes.length; i++) {
			opcoes[i] = respostaErrada.get(i);// Adicionando as opcoes em String para fazer o desafio
		}

		Desafio_Frase();
		
		String enunciado = String.valueOf("\nFaça a seguinte conversão:\n"+numeroInicial[0]+" * "+numeroInicial[1]+" (na base "+baseInicial +") = X (na base "+baseConversao+")\n\n" );
		

		//			System.out.printf("\nFaça a seguinte conversão:\n%S * %S (na base %d) = X (na base %d)\n\n", numeroInicial[0],
		//			numeroInicial[1], baseInicial, baseConversao);
		//			Timer2();

		ProcessoAlternativas_Geral(opcoes, status, respostaCerta,enunciado);

		return status;
	}

	// FUNÇÕES DO TEMPLO 3
	static int DeterminaBase_Templo3() {

		ArrayList<Integer> bases = new ArrayList();

		bases.add(2);
		bases.add(8);
		bases.add(10);
		bases.add(16);

		Collections.shuffle(bases);
		Collections.shuffle(bases);

		return bases.get(0);
	}

	static String DeterminaNumero_Templo3(int baseInicial) {

		Random dado = new Random();
		int numRandom;
		String baseAconv = null;

		do {
			numRandom = dado.nextInt(2000);
		} while (numRandom <= 50);

		switch (baseInicial) {
		case 2:
			baseAconv = Integer.toBinaryString(numRandom);
			break;
		case 8:
			baseAconv = Integer.toOctalString(numRandom);
			break;
		case 10:
			baseAconv = Integer.toString(numRandom);
			break;
		case 16:
			baseAconv = Integer.toHexString(numRandom);
			break;
		}

		return baseAconv;
	}

	static String DeterminaOpcoes(int baseConversao, String respostaCerta) {
		Random dado = new Random();
		int aux = Integer.parseInt(respostaCerta, baseConversao);
		String opcoesFalsas;

		do {
			aux = aux + dado.nextInt(30);
			aux = aux - 15;
			opcoesFalsas = Integer.toString(aux, baseConversao);
		} while (opcoesFalsas.equals(respostaCerta));

		return opcoesFalsas;
	}

	static String DeterminaNumeroConv_Templo3(String[] numeroInicial, int baseInicial, int baseConversao) {
		int aux = 0;
		String respostaConversao;

		for (int i = 0; i < numeroInicial.length; i++) {
			aux = aux + Integer.parseInt(numeroInicial[i], baseInicial);
		}

		respostaConversao = Integer.toString(aux, baseConversao);

		return respostaConversao;
	}

	// TEMPLO 2
	static void ExecutaTemplo2(){
		Desafio1_Templo2();
		Desafio2_Templo2();
		Desafio3_Templo2();
}
	
	// FUNÇÕES DO TEMPLO 2
	static void Desafio1_Templo2() {
		//variáveis
		int r;
		Random rng = new Random();
		String enunciado;
		String[] opcoes = new String[5];
				
		//Questão
				
		//RANDOMIZANDO A QUESTÃO E REPETINDO ATÉ O ACERTO OU VIDA = 0
		
		
			r = rng.nextInt(3);
		switch(r) {
		//RECEBENDO A QUESTÃO RANDOMIZADA E RESOLVENDO A QUESTÃO.
			case 0:
				Desafio_Frase();
				enunciado = "\nQuais são os coeficiêntes dessa equação de segundo grau. 2x² + x – 3 = 0\n";
				
						
				
				opcoes[0] = "a = -2  |  b = 0  |  c = -3";
				opcoes[1] = "a =  2  |  b = 1  |  c =  3";
				opcoes[2] = "a =  2  |  b = 1  |  c = -3";
				opcoes[3] = "a =  2  |  b = 0  |  c = -3";
				opcoes[4] = "a =  1  |  b = 0  |  c = -3";
				
				ProcessoAlternativas_Geral(opcoes,status,"a =  2  |  b = 1  |  c = -3",enunciado);
				
				break;
				
			case 1:
				Desafio_Frase();
				enunciado = "\nQuais são os coeficiêntes dessa equação de segundo grau. –3x² + 18x – 15 = 0\n";
				
				
				
				
				opcoes[0] = "a = -3  |  b = -18  |  c = -15";
				opcoes[1] = "a =  3  |  b =  18  |  c = -15";
				opcoes[2] = "a = -3  |  b =  18  |  c =  15";
				opcoes[3] = "a = -3  |  b =  18  |  c = -15";
				opcoes[4] = "a =  3  |  b =  18  |  c =   0";
				
				
				
				ProcessoAlternativas_Geral(opcoes,status,"a = -3  |  b =  18  |  c = -15",enunciado);
				
				
				break;
				
			case 2:
				Desafio_Frase();
				enunciado = "\nQuais são os coeficiêntes dessa equação de segundo grau. 3x² – x – 1 = 0\n";
			
				
				
				opcoes[0] = "a = -3  |  b =  -1  |  c = -1";
				opcoes[1] = "a =  3  |  b =  -1  |  c = -1";
				opcoes[2] = "a = -3  |  b =   0  |  c =  1";
				opcoes[3] = "a =  3  |  b =  -1  |  c =  1";
				opcoes[4] = "a =  1  |  b =   0  |  c = -3";
				
				ProcessoAlternativas_Geral(opcoes,status,"a =  3  |  b =  -1  |  c = -1",enunciado);
				
				break;
		}
		
	
		}
	
	static void Desafio2_Templo2() {
		//variáveis
		int r;
		Random rng = new Random();
		String enunciado;
		String[] opcoes = new String[5];
		
		//Enunciado
		
		//Randomizando a questão
		
		
		//RECEBENDO A QUESTÃO RANDOMIZADA E RESOLVENDO A QUESTÃO.
	
			r = rng.nextInt(3);
		switch(r) {
		case 0:
			Desafio_Frase();
			enunciado = "\nQual é a maior raiz da equação -2x² + 3x + 5 = 0?\n";
			
			
			opcoes[0] = "-1";
			opcoes[1] = "-2,5";
			opcoes[2] = "2";
			opcoes[3] = "2,5";
			opcoes[4] = "1";
			
			ProcessoAlternativas_Geral(opcoes,status,"2,5",enunciado);
			
			
		
			break;
		case 1:
			Desafio_Frase();
			enunciado = "\nQual é a menor raiz da equação 2x² + 7x + 5 = 0\n";
			
			
			opcoes[0] = "-1";
			opcoes[1] = "1";
			opcoes[2] = "-5/2";
			opcoes[3] = "-2";
			opcoes[4] = "-2/5";
			
			ProcessoAlternativas_Geral(opcoes,status,"-5/2",enunciado);
			
			break;
			
		case 2:
			Desafio_Frase();
			enunciado = "\nQuais são as duas raízes da equação 3x² – x – 2 = 0\n";
			
			
			opcoes[0] = "x1 =  2/3 | x2 =  1";
			opcoes[1] = "x1 = -2/3 | x2 = -1";
			opcoes[2] = "x1 = -2/3 | x2 =  1";
			opcoes[3] = "x1 =  -1  | x2 = 2/3";
			opcoes[4] = "x1 =  -1  | x2 = -2/3";
			
			ProcessoAlternativas_Geral(opcoes,status,"x1 = -2/3 | x2 =  1",enunciado);
			
			break;
			
		}
			
	
	}
	
	static void Desafio3_Templo2() {
		//Variaveis
		int r;
		Random rng = new Random();
		String enunciado;
		String[] opcoes = new String[5];
		
		//Enunciado
		
			r = rng.nextInt(3);
		switch(r) {
		case 0:
			Desafio_Frase();
			enunciado = "\nQual é a resolução da seguinte equação do segundo grau x² – 4x – 5 = 0?\n";
			
			
			opcoes[0] = "x1 =  1  | x2 =  5";
			opcoes[1] = "x1 = -1  | x2 =  5";
			opcoes[2] = "x1 = -1  | x2 = -5";
			opcoes[3] = "x1 = -5  | x2 =  1";
			opcoes[4] = "x1 = -3  | x2 =  5";
			
			ProcessoAlternativas_Geral(opcoes,status,"x1 = -1  | x2 =  5",enunciado);
			
			
			break;
		case 1:
			Desafio_Frase();
			enunciado = "\nTemos na equação 10x² – 1000 = 0, duas raízes reais e distintas, a e b, que podem ser encontradas. Determine a² + b²\n";
			
			
			opcoes[0] = "100";
			opcoes[1] = "50";
			opcoes[2] = "250";
			opcoes[3] = "200";
			opcoes[4] = "1000";
			
			ProcessoAlternativas_Geral(opcoes,status,"200",enunciado);
				
			break;
		case 2:
			Desafio_Frase();
			enunciado = "\nQual será o resultado do produto das duas raízes da equação 5x² - 125 = 0\n";
			
			
			opcoes[0] = "-25";
			opcoes[1] = "20";
			opcoes[2] = "25";
			opcoes[3] = "30";
			opcoes[4] = "125";
			
			ProcessoAlternativas_Geral(opcoes,status,"-25",enunciado);
			
			
			break;
			
		}
	
		
		
	}
	
	
}
----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1739)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2956)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-06-02 21:00:13.840
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1739)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2956)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-06-02 21:00:13.841
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1372)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2944)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1739)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2956)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)
!SESSION 2021-06-07 19:12:19.787 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-06-07 19:12:41.799
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-06-07 19:12:41.799
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@291cbe70,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@6be422da,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.e4.ui.workbench 4 0 2021-06-07 19:12:43.054
!MESSAGE Unable to retrieve the bundle from the URI: bundleclass://com.genuitec.eclipse.meexplorer/com.genuitec.eclipse.meexplorer.breadcrumb.e4.BreadCrumbContainer

!ENTRY org.eclipse.egit.ui 2 0 2021-06-07 19:12:53.066
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\PICHAU'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-06-15 21:17:24.492 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product C:\Users\PICHAU\Downloads\PROVA2GUSTAVOeHENRIQUE.java
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product C:\Users\PICHAU\Downloads\PROVA2GUSTAVOeHENRIQUE.java

!ENTRY org.eclipse.jface 2 0 2021-06-15 21:17:33.844
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-06-15 21:17:33.844
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3c9ef37b,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4888425d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.e4.ui.workbench 4 0 2021-06-15 21:17:34.929
!MESSAGE Unable to retrieve the bundle from the URI: bundleclass://com.genuitec.eclipse.meexplorer/com.genuitec.eclipse.meexplorer.breadcrumb.e4.BreadCrumbContainer

!ENTRY org.eclipse.egit.ui 2 0 2021-06-15 21:17:40.264
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\PICHAU'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.debug.ui 4 120 2021-06-15 23:25:38.555
!MESSAGE Error logged from Debug UI: 
!STACK 0
java.lang.InterruptedException
	at java.base/java.util.concurrent.FutureTask.awaitDone(FutureTask.java:418)
	at java.base/java.util.concurrent.FutureTask.get(FutureTask.java:203)
	at org.eclipse.debug.internal.ui.stringsubstitution.SelectedResourceManager.runInUIThreadWithTimeout(SelectedResourceManager.java:262)
	at org.eclipse.debug.internal.ui.stringsubstitution.SelectedResourceManager.getFromUI(SelectedResourceManager.java:240)
	at org.eclipse.debug.internal.ui.stringsubstitution.SelectedResourceManager.getActiveWindow(SelectedResourceManager.java:231)
	at org.eclipse.debug.ui.DebugUITools.getDebugContext(DebugUITools.java:247)
	at org.eclipse.jdt.internal.debug.ui.JavaDebugHover.getFrame(JavaDebugHover.java:97)
	at org.eclipse.jdt.internal.debug.ui.JavaDebugHover.getHoverInfo2(JavaDebugHover.java:251)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:130)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:89)
	at org.eclipse.jface.text.TextViewerHoverManager$1.run(TextViewerHoverManager.java:155)
!SESSION 2021-06-18 20:31:28.148 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-06-18 20:31:47.837
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-06-18 20:31:47.837
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@57b3d869,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@51f4439e,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.e4.ui.workbench 4 0 2021-06-18 20:31:48.913
!MESSAGE Unable to retrieve the bundle from the URI: bundleclass://com.genuitec.eclipse.meexplorer/com.genuitec.eclipse.meexplorer.breadcrumb.e4.BreadCrumbContainer

!ENTRY org.eclipse.egit.ui 2 0 2021-06-18 20:31:55.527
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\PICHAU'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.

!ENTRY org.eclipse.jdt.core 4 4 2021-06-18 22:21:41.828
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
import java.util.Scanner;

public class Teste {

	public static void main(String[] args) {
		
		  double vetorA[] = new double[] { 11.23, 37.92, 9.34, 10.18, 45.1, 3.47, 5.32, 1.76, 14.24, 2.85 };
		  
		  double produto = 1, soma = 0, divi = 0;
		  
		  produto = IndicePar(vetorA);
		  soma = IndiceImpar(vetorA);
		  divi = DivisaoIndices(produto, soma);


		
		

	}

	static double IndicePar(double vetor[]) {
		
		double valor = 1;
		
		for (int i = 0; i < vetor.length; i++) {
			
			if (i % 2 == 0) {
				valor = valor * vetor[i];
			}
			
		}
		
		return valor;
	}
	
	static double IndiceImpar(double vetor[]) {
		
		double soma = 0;
		
		for (int i = 0; i < vetor.length; i++) {
			
			if (i % 2 != 0) {
				soma = soma + vetor[i];
			}
			
		}
		
		return soma;
	}
	
static double DivisaoIndices(double produto, double soma) {
		
		divi produto / soma
		
		
		
		return soma;
	}

	
		
	
}

----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 2 2021-06-18 22:21:41.831
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)

!ENTRY org.eclipse.jdt.ui 4 0 2021-06-18 22:21:41.832
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.InfixExpression.setOperator(InfixExpression.java:383)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1276)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2020)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToParenthesizedExpression(ASTConverter.java:3764)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1932)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1204)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1963)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3023)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:751)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:208)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3316)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1513)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:474)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:200)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:266)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:596)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1141)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:173)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:94)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:740)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:806)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1318)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:131)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:113)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:93)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:45)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:90)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:157)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:94)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:107)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:76)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:210)
!SESSION 2021-06-18 22:52:13.010 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product C:\Users\PICHAU\AppData\Local\Temp\Rar$DIa15568.36090\Substex1gustavo.java
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product C:\Users\PICHAU\AppData\Local\Temp\Rar$DIa15568.36090\Substex1gustavo.java

!ENTRY org.eclipse.jface 2 0 2021-06-18 22:52:17.672
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-06-18 22:52:17.672
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@4888425d,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@3c8758d1,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.e4.ui.workbench 4 0 2021-06-18 22:52:18.708
!MESSAGE Unable to retrieve the bundle from the URI: bundleclass://com.genuitec.eclipse.meexplorer/com.genuitec.eclipse.meexplorer.breadcrumb.e4.BreadCrumbContainer

!ENTRY org.eclipse.egit.ui 2 0 2021-06-18 22:52:23.922
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\PICHAU'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-08-09 18:50:13.699 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-08-09 18:50:41.314
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-08-09 18:50:41.314
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@59b3f754,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@18dbc1b,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.e4.ui.workbench 4 0 2021-08-09 18:50:42.183
!MESSAGE Unable to retrieve the bundle from the URI: bundleclass://com.genuitec.eclipse.meexplorer/com.genuitec.eclipse.meexplorer.breadcrumb.e4.BreadCrumbContainer

!ENTRY org.eclipse.egit.ui 2 0 2021-08-09 18:50:45.856
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\PICHAU'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-08-11 20:50:57.634 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-08-11 20:52:15.562
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-08-11 20:52:15.562
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@5de335cf,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@1e029a04,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.e4.ui.workbench 4 0 2021-08-11 20:52:16.691
!MESSAGE Unable to retrieve the bundle from the URI: bundleclass://com.genuitec.eclipse.meexplorer/com.genuitec.eclipse.meexplorer.breadcrumb.e4.BreadCrumbContainer

!ENTRY org.eclipse.egit.ui 2 0 2021-08-11 20:52:23.397
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\PICHAU'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-08-17 19:31:45.755 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product -data C:\Users\PICHAU\Desktop\Cursos\02 - SENAC\1 - Semestre - Codigos\PI_1_PROJETO INTEGRADOR DESENVOLVIMENTO DE LÓGICA -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-08-17 19:31:48.498
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-08-17 19:31:48.498
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@f0c1ae1,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@783dc0e7,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.e4.ui.workbench 4 0 2021-08-17 19:31:49.446
!MESSAGE Unable to retrieve the bundle from the URI: bundleclass://com.genuitec.eclipse.meexplorer/com.genuitec.eclipse.meexplorer.breadcrumb.e4.BreadCrumbContainer

!ENTRY org.eclipse.egit.ui 2 0 2021-08-17 19:31:53.332
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\PICHAU'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
!SESSION 2021-08-25 22:17:06.212 -----------------------------------------------
eclipse.buildId=4.18.0.I20201202-1800
java.version=15.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86_64, WS=win32, NL=pt_BR
Framework arguments:  -product org.eclipse.epp.package.java.product -product org.eclipse.epp.package.java.product
Command-line arguments:  -os win32 -ws win32 -arch x86_64 -product org.eclipse.epp.package.java.product -data C:\Users\PICHAU\Desktop\Cursos\02 - SENAC\1 - Semestre - Codigos\PI_1_PROJETO INTEGRADOR DESENVOLVIMENTO DE LÓGICA -product org.eclipse.epp.package.java.product

!ENTRY org.eclipse.jface 2 0 2021-08-25 22:17:08.863
!MESSAGE Keybinding conflicts occurred.  They may interfere with normal accelerator operation.
!SUBENTRY 1 org.eclipse.jface 2 0 2021-08-25 22:17:08.863
!MESSAGE A conflict occurred for CTRL+SHIFT+T:
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.jdt.ui.navigate.open.type,Open Type,
		Open a type in a Java editor,
		Category(org.eclipse.ui.category.navigate,Navigate,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@7fd2a67a,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)
Binding(CTRL+SHIFT+T,
	ParameterizedCommand(Command(org.eclipse.lsp4e.symbolinworkspace,Go to Symbol in Workspace,
		,
		Category(org.eclipse.lsp4e.category,Language Servers,null,true),
		org.eclipse.ui.internal.WorkbenchHandlerServiceHandler@163df259,
		,,true),null),
	org.eclipse.ui.defaultAcceleratorConfiguration,
	org.eclipse.ui.contexts.window,,,system)

!ENTRY org.eclipse.e4.ui.workbench 4 0 2021-08-25 22:17:09.714
!MESSAGE Unable to retrieve the bundle from the URI: bundleclass://com.genuitec.eclipse.meexplorer/com.genuitec.eclipse.meexplorer.breadcrumb.e4.BreadCrumbContainer

!ENTRY org.eclipse.egit.ui 2 0 2021-08-25 22:17:13.153
!MESSAGE Warning: The environment variable HOME is not set. The following directory will be used to store the Git
user global configuration and to define the default location to store repositories: 'C:\Users\PICHAU'. If this is
not correct please set the HOME environment variable and restart Eclipse. Otherwise Git for Windows and
EGit might behave differently since they see different configuration options.
This warning can be switched off on the Team > Git > Confirmations and Warnings preference page.
